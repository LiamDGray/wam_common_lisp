struct_opv(a,claz_array(claz_initial_element_mismatch),classname,"ARRAY-INITIAL-ELEMENT-MISMATCH").
struct_opv(a,claz_array(claz_initial_element_mismatch),classof,claz_built_in_class).
struct_opv(a,claz_array(claz_type),classname,"ARRAY-TYPE").
struct_opv(a,claz_array(claz_type),classof,claz_built_in_class).
struct_opv(a,claz_array(claz_type),name,"CLASS-INFO",zlot_array_type_class_info).
struct_opv(a,claz_array(claz_type),name,"COMPLEXP",zlot_array_type_complexp).
struct_opv(a,claz_array(claz_type),name,"DIMENSIONS",zlot_array_type_dimensions).
struct_opv(a,claz_array(claz_type),name,"ELEMENT-TYPE",zlot_array_type_element_type).
struct_opv(a,claz_array(claz_type),name,"SPECIALIZED-ELEMENT-TYPE",zlot_array_type_specialized_element_type).
struct_opv(a,claz_array(claz_type),slot,class_info,zlot_array_type_class_info).
struct_opv(a,claz_array(claz_type),slot,complexp,zlot_array_type_complexp).
struct_opv(a,claz_array(claz_type),slot,dimensions,zlot_array_type_dimensions).
struct_opv(a,claz_array(claz_type),slot,element_type,zlot_array_type_element_type).
struct_opv(a,claz_array(claz_type),slot,specialized_element_type,zlot_array_type_specialized_element_type).
struct_opv(a,claz_array(claz_type),subtypep,claz_ctype).
struct_opv(a,claz_array(claz_type),super_priority,[claz_ctype,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(a,claz_array,classname,"ARRAY").
struct_opv(a,claz_array,classof,claz_built_in_class).
struct_opv(a,claz_array,subtypep,claz_t).
struct_opv(a,claz_array,super_priority,[claz_t]).
struct_opv(a,claz_bit_vector,classname,"BIT-VECTOR").
struct_opv(a,claz_bit_vector,classof,claz_built_in_class).
struct_opv(a,claz_bit_vector,name,"BITS",zlot_bit_vector_bits).
struct_opv(a,claz_bit_vector,name,"CAPACITY",zlot_bit_vector_capacity).
struct_opv(a,claz_bit_vector,returns,claz_integer,zlot_bit_vector_capacity).
struct_opv(a,claz_bit_vector,returns,claz_simple_vector(claz_long),zlot_bit_vector_bits).
struct_opv(a,claz_bit_vector,slot,bits,zlot_bit_vector_bits).
struct_opv(a,claz_bit_vector,slot,capacity,zlot_bit_vector_capacity).
struct_opv(a,claz_bit_vector,subtypep,claz_vector).
struct_opv(a,claz_bit_vector,super_priority,[claz_vector,claz_array,claz_sequence,claz_t]).
struct_opv(a,claz_complex_array(claz_unsigned_byte32),classname,"COMPLEX-ARRAY").
struct_opv(a,claz_complex_array(claz_unsigned_byte32),classof,claz_built_in_class).
struct_opv(a,claz_complex_array(claz_unsigned_byte32),subtypep,claz_array).
struct_opv(a,claz_complex_array(claz_unsigned_byte8),classname,"COMPLEX-ARRAY").
struct_opv(a,claz_complex_array(claz_unsigned_byte8),classof,claz_built_in_class).
struct_opv(a,claz_complex_array(claz_unsigned_byte8),subtypep,claz_array).
struct_opv(a,claz_complex_array(Type),name,"ARRAY",zlot_complex_array_array(Type)).
struct_opv(a,claz_complex_array(Type),name,"DATA",zlot_complex_array_data(Type)).
struct_opv(a,claz_complex_array(Type),name,"DIMV",zlot_complex_array_dimv(Type)).
struct_opv(a,claz_complex_array(Type),name,"DISPLACEMENT",zlot_complex_array_displacement(Type)).
struct_opv(a,claz_complex_array(Type),name,"TOTAL-SIZE",zlot_complex_array_total_size(Type)).
struct_opv(a,claz_complex_array(Type),readonly,t,zlot_complex_array_dimv(Type)).
struct_opv(a,claz_complex_array(Type),returns,claz_array,zlot_complex_array_array(Type)).
struct_opv(a,claz_complex_array(Type),returns,claz_integer,zlot_complex_array_displacement(Type)).
struct_opv(a,claz_complex_array(Type),returns,claz_integer,zlot_complex_array_total_size(Type)).
struct_opv(a,claz_complex_array(Type),returns,claz_simple_vector(claz_integer),zlot_complex_array_dimv(Type)).
struct_opv(a,claz_complex_array(Type),returns,claz_simple_vector(Type),zlot_complex_array_data(Type)).
struct_opv(a,claz_complex_array(Type),slot,array,zlot_complex_array_array(Type)).
struct_opv(a,claz_complex_array(Type),slot,data,zlot_complex_array_data(Type)).
struct_opv(a,claz_complex_array(Type),slot,dimv,zlot_complex_array_dimv(Type)).
struct_opv(a,claz_complex_array(Type),slot,displacement,zlot_complex_array_displacement(Type)).
struct_opv(a,claz_complex_array(Type),slot,total_size,zlot_complex_array_total_size(Type)).
struct_opv(a,claz_complex_array,classname,"COMPLEX-ARRAY").
struct_opv(a,claz_complex_array,classof,claz_built_in_class).
struct_opv(a,claz_complex_array,name,"ARRAY",zlot_complex_array_array).
struct_opv(a,claz_complex_array,name,"DATA",zlot_complex_array_data).
struct_opv(a,claz_complex_array,name,"DIMV",zlot_complex_array_dimv).
struct_opv(a,claz_complex_array,name,"DISPLACEMENT",zlot_complex_array_displacement).
struct_opv(a,claz_complex_array,name,"ELEMENT-TYPE",zlot_complex_array_element_type).
struct_opv(a,claz_complex_array,name,"TOTAL-SIZE",zlot_complex_array_total_size).
struct_opv(a,claz_complex_array,readonly,t,zlot_complex_array_dimv).
struct_opv(a,claz_complex_array,readonly,t,zlot_complex_array_element_type).
struct_opv(a,claz_complex_array,returns,claz_array,zlot_complex_array_array).
struct_opv(a,claz_complex_array,returns,claz_integer,zlot_complex_array_displacement).
struct_opv(a,claz_complex_array,returns,claz_integer,zlot_complex_array_total_size).
struct_opv(a,claz_complex_array,returns,claz_list,zlot_complex_array_data).
struct_opv(a,claz_complex_array,returns,claz_simple_vector(claz_integer),zlot_complex_array_dimv).
struct_opv(a,claz_complex_array,returns,claz_t,zlot_complex_array_element_type).
struct_opv(a,claz_complex_array,slot,array,zlot_complex_array_array).
struct_opv(a,claz_complex_array,slot,data,zlot_complex_array_data).
struct_opv(a,claz_complex_array,slot,dimv,zlot_complex_array_dimv).
struct_opv(a,claz_complex_array,slot,displacement,zlot_complex_array_displacement).
struct_opv(a,claz_complex_array,slot,element_type,zlot_complex_array_element_type).
struct_opv(a,claz_complex_array,slot,total_size,zlot_complex_array_total_size).
struct_opv(a,claz_complex_array,subtypep,claz_array).
struct_opv(a,claz_complex_bit_vector,classname,"COMPLEX-BIT-VECTOR").
struct_opv(a,claz_complex_bit_vector,classof,claz_built_in_class).
struct_opv(a,claz_complex_bit_vector,name,"ARRAY",zlot_complex_bit_vector_array).
struct_opv(a,claz_complex_bit_vector,name,"DISPLACEMENT",zlot_complex_bit_vector_displacement).
struct_opv(a,claz_complex_bit_vector,name,"FILL-POINTER",zlot_complex_bit_vector_fill_pointer).
struct_opv(a,claz_complex_bit_vector,name,"IS-DISPLACED",zlot_complex_bit_vector_is_displaced).
struct_opv(a,claz_complex_bit_vector,returns,claz_array,zlot_complex_bit_vector_array).
struct_opv(a,claz_complex_bit_vector,returns,claz_boolean,zlot_complex_bit_vector_is_displaced).
struct_opv(a,claz_complex_bit_vector,returns,claz_integer,zlot_complex_bit_vector_displacement).
struct_opv(a,claz_complex_bit_vector,returns,claz_integer,zlot_complex_bit_vector_fill_pointer).
struct_opv(a,claz_complex_bit_vector,slot,array,zlot_complex_bit_vector_array).
struct_opv(a,claz_complex_bit_vector,slot,displacement,zlot_complex_bit_vector_displacement).
struct_opv(a,claz_complex_bit_vector,slot,fill_pointer,zlot_complex_bit_vector_fill_pointer).
struct_opv(a,claz_complex_bit_vector,slot,is_displaced,zlot_complex_bit_vector_is_displaced).
struct_opv(a,claz_complex_bit_vector,subtypep,claz_bit_vector).
struct_opv(a,claz_complex_double_float,classname,"COMPLEX-DOUBLE-FLOAT").
struct_opv(a,claz_complex_double_float,classof,claz_built_in_class).
struct_opv(a,claz_complex_double_float,subtypep,claz_complex).
struct_opv(a,claz_complex_double_float,super_priority,[claz_complex,claz_number,claz_t]).
struct_opv(a,claz_complex_single_float,classname,"COMPLEX-SINGLE-FLOAT").
struct_opv(a,claz_complex_single_float,classof,claz_built_in_class).
struct_opv(a,claz_complex_single_float,subtypep,claz_complex).
struct_opv(a,claz_complex_single_float,super_priority,[claz_complex,claz_number,claz_t]).
struct_opv(a,claz_complex_string,classname,"COMPLEX-STRING").
struct_opv(a,claz_complex_string,classof,claz_built_in_class).
struct_opv(a,claz_complex_string,name,"ARRAY",zlot_complex_string_array).
struct_opv(a,claz_complex_string,name,"CAPACITY",zlot_complex_string_capacity).
struct_opv(a,claz_complex_string,name,"CHARS",zlot_complex_string_chars).
struct_opv(a,claz_complex_string,name,"DISPLACEMENT",zlot_complex_string_displacement).
struct_opv(a,claz_complex_string,name,"FILL-POINTER",zlot_complex_string_fill_pointer).
struct_opv(a,claz_complex_string,name,"IS-DISPLACED",zlot_complex_string_is_displaced).
struct_opv(a,claz_complex_string,returns,claz_array,zlot_complex_string_array).
struct_opv(a,claz_complex_string,returns,claz_boolean,zlot_complex_string_is_displaced).
struct_opv(a,claz_complex_string,returns,claz_integer,zlot_complex_string_capacity).
struct_opv(a,claz_complex_string,returns,claz_integer,zlot_complex_string_displacement).
struct_opv(a,claz_complex_string,returns,claz_integer,zlot_complex_string_fill_pointer).
struct_opv(a,claz_complex_string,returns,claz_simple_vector(claz_char_code),zlot_complex_string_chars).
struct_opv(a,claz_complex_string,slot,array,zlot_complex_string_array).
struct_opv(a,claz_complex_string,slot,capacity,zlot_complex_string_capacity).
struct_opv(a,claz_complex_string,slot,chars,zlot_complex_string_chars).
struct_opv(a,claz_complex_string,slot,displacement,zlot_complex_string_displacement).
struct_opv(a,claz_complex_string,slot,fill_pointer,zlot_complex_string_fill_pointer).
struct_opv(a,claz_complex_string,slot,is_displaced,zlot_complex_string_is_displaced).
struct_opv(a,claz_complex_string,subtypep,claz_string).
struct_opv(a,claz_complex_vector(claz_unsigned_byte32),classname,"COMPLEX-VECTOR").
struct_opv(a,claz_complex_vector(claz_unsigned_byte32),classof,claz_built_in_class).
struct_opv(a,claz_complex_vector(claz_unsigned_byte32),subtypep,claz_vector).
struct_opv(a,claz_complex_vector(claz_unsigned_byte8),classname,"COMPLEX-VECTOR").
struct_opv(a,claz_complex_vector(claz_unsigned_byte8),classof,claz_built_in_class).
struct_opv(a,claz_complex_vector(claz_unsigned_byte8),subtypep,claz_vector).
struct_opv(a,claz_complex_vector(Type),name,"ARRAY",zlot_complex_vector_array(Type)).
struct_opv(a,claz_complex_vector(Type),name,"CAPACITY",zlot_complex_vector_capacity(Type)).
struct_opv(a,claz_complex_vector(Type),name,"DISPLACEMENT",zlot_complex_vector_displacement(Type)).
struct_opv(a,claz_complex_vector(Type),name,"ELEMENTS",zlot_complex_vector_elements(Type)).
struct_opv(a,claz_complex_vector(Type),name,"FILL-POINTER",zlot_complex_vector_fill_pointer(Type)).
struct_opv(a,claz_complex_vector(Type),name,"IS-DISPLACED",zlot_complex_vector_is_displaced(Type)).
struct_opv(a,claz_complex_vector(Type),returns,claz_array,zlot_complex_vector_array(Type)).
struct_opv(a,claz_complex_vector(Type),returns,claz_boolean,zlot_complex_vector_is_displaced(Type)).
struct_opv(a,claz_complex_vector(Type),returns,claz_integer,zlot_complex_vector_capacity(Type)).
struct_opv(a,claz_complex_vector(Type),returns,claz_integer,zlot_complex_vector_displacement(Type)).
struct_opv(a,claz_complex_vector(Type),returns,claz_integer,zlot_complex_vector_fill_pointer(Type)).
struct_opv(a,claz_complex_vector(Type),returns,claz_simple_vector(Type),zlot_complex_vector_elements(Type)).
struct_opv(a,claz_complex_vector(Type),slot,array,zlot_complex_vector_array(Type)).
struct_opv(a,claz_complex_vector(Type),slot,capacity,zlot_complex_vector_capacity(Type)).
struct_opv(a,claz_complex_vector(Type),slot,displacement,zlot_complex_vector_displacement(Type)).
struct_opv(a,claz_complex_vector(Type),slot,elements,zlot_complex_vector_elements(Type)).
struct_opv(a,claz_complex_vector(Type),slot,fill_pointer,zlot_complex_vector_fill_pointer(Type)).
struct_opv(a,claz_complex_vector(Type),slot,is_displaced,zlot_complex_vector_is_displaced(Type)).
struct_opv(a,claz_complex_vector,classname,"COMPLEX-VECTOR").
struct_opv(a,claz_complex_vector,classof,claz_built_in_class).
struct_opv(a,claz_complex_vector,name,"ARRAY",zlot_complex_vector_array).
struct_opv(a,claz_complex_vector,name,"CAPACITY",zlot_complex_vector_capacity).
struct_opv(a,claz_complex_vector,name,"DISPLACEMENT",zlot_complex_vector_displacement).
struct_opv(a,claz_complex_vector,name,"ELEMENTS",zlot_complex_vector_elements).
struct_opv(a,claz_complex_vector,name,"FILL-POINTER",zlot_complex_vector_fill_pointer).
struct_opv(a,claz_complex_vector,name,"IS-DISPLACED",zlot_complex_vector_is_displaced).
struct_opv(a,claz_complex_vector,returns,claz_array,zlot_complex_vector_array).
struct_opv(a,claz_complex_vector,returns,claz_boolean,zlot_complex_vector_is_displaced).
struct_opv(a,claz_complex_vector,returns,claz_integer,zlot_complex_vector_capacity).
struct_opv(a,claz_complex_vector,returns,claz_integer,zlot_complex_vector_displacement).
struct_opv(a,claz_complex_vector,returns,claz_integer,zlot_complex_vector_fill_pointer).
struct_opv(a,claz_complex_vector,returns,claz_list,zlot_complex_vector_elements).
struct_opv(a,claz_complex_vector,slot,array,zlot_complex_vector_array).
struct_opv(a,claz_complex_vector,slot,capacity,zlot_complex_vector_capacity).
struct_opv(a,claz_complex_vector,slot,displacement,zlot_complex_vector_displacement).
struct_opv(a,claz_complex_vector,slot,elements,zlot_complex_vector_elements).
struct_opv(a,claz_complex_vector,slot,fill_pointer,zlot_complex_vector_fill_pointer).
struct_opv(a,claz_complex_vector,slot,is_displaced,zlot_complex_vector_is_displaced).
struct_opv(a,claz_complex_vector,subtypep,claz_vector).
struct_opv(a,claz_simple_argument_list_dotted,classname,"SIMPLE-ARGUMENT-LIST-DOTTED").
struct_opv(a,claz_simple_argument_list_dotted,classof,claz_built_in_class).
struct_opv(a,claz_simple_argument_list_dotted,subtypep,claz_argument_list_dotted).
struct_opv(a,claz_simple_array(claz_complex_double_float),classname,"SIMPLE-ARRAY-COMPLEX-DOUBLE-FLOAT").
struct_opv(a,claz_simple_array(claz_complex_double_float),classof,claz_built_in_class).
struct_opv(a,claz_simple_array(claz_complex_double_float),subtypep,claz_simple_array).
struct_opv(a,claz_simple_array(claz_complex_double_float),subtypep,claz_vector).
struct_opv(a,claz_simple_array(claz_complex_double_float),super_priority,[claz_vector,claz_simple_array,claz_array,claz_sequence,claz_t]).
struct_opv(a,claz_simple_array(claz_complex_single_float),classname,"SIMPLE-ARRAY-COMPLEX-SINGLE-FLOAT").
struct_opv(a,claz_simple_array(claz_complex_single_float),classof,claz_built_in_class).
struct_opv(a,claz_simple_array(claz_complex_single_float),subtypep,claz_simple_array).
struct_opv(a,claz_simple_array(claz_complex_single_float),subtypep,claz_vector).
struct_opv(a,claz_simple_array(claz_complex_single_float),super_priority,[claz_vector,claz_simple_array,claz_array,claz_sequence,claz_t]).
struct_opv(a,claz_simple_array(claz_double_float),classname,"SIMPLE-ARRAY-DOUBLE-FLOAT").
struct_opv(a,claz_simple_array(claz_double_float),classof,claz_built_in_class).
struct_opv(a,claz_simple_array(claz_double_float),subtypep,claz_simple_array).
struct_opv(a,claz_simple_array(claz_double_float),subtypep,claz_vector).
struct_opv(a,claz_simple_array(claz_double_float),super_priority,[claz_vector,claz_simple_array,claz_array,claz_sequence,claz_t]).
struct_opv(a,claz_simple_array(claz_fixnum),classname,"SIMPLE-ARRAY-FIXNUM").
struct_opv(a,claz_simple_array(claz_fixnum),classof,claz_built_in_class).
struct_opv(a,claz_simple_array(claz_fixnum),subtypep,claz_simple_array).
struct_opv(a,claz_simple_array(claz_fixnum),subtypep,claz_vector).
struct_opv(a,claz_simple_array(claz_fixnum),super_priority,[claz_vector,claz_simple_array,claz_array,claz_sequence,claz_t]).
struct_opv(a,claz_simple_array(claz_nil),classname,"SIMPLE-ARRAY-NIL").
struct_opv(a,claz_simple_array(claz_nil),classof,claz_built_in_class).
struct_opv(a,claz_simple_array(claz_nil),subtypep,claz_simple_string).
struct_opv(a,claz_simple_array(claz_nil),subtypep,claz_vector_nil).
struct_opv(a,claz_simple_array(claz_nil),super_priority,[claz_vector_nil,claz_simple_string,claz_string,claz_vector,claz_simple_array,claz_array,claz_sequence,claz_t]).
struct_opv(a,claz_simple_array(claz_signed_byte_16),classname,"SIMPLE-ARRAY-SIGNED-BYTE-16").
struct_opv(a,claz_simple_array(claz_signed_byte_16),classof,claz_built_in_class).
struct_opv(a,claz_simple_array(claz_signed_byte_16),subtypep,claz_simple_array).
struct_opv(a,claz_simple_array(claz_signed_byte_16),subtypep,claz_vector).
struct_opv(a,claz_simple_array(claz_signed_byte_16),super_priority,[claz_vector,claz_simple_array,claz_array,claz_sequence,claz_t]).
struct_opv(a,claz_simple_array(claz_signed_byte_32),classname,"SIMPLE-ARRAY-SIGNED-BYTE-32").
struct_opv(a,claz_simple_array(claz_signed_byte_32),classof,claz_built_in_class).
struct_opv(a,claz_simple_array(claz_signed_byte_32),subtypep,claz_simple_array).
struct_opv(a,claz_simple_array(claz_signed_byte_32),subtypep,claz_vector).
struct_opv(a,claz_simple_array(claz_signed_byte_32),super_priority,[claz_vector,claz_simple_array,claz_array,claz_sequence,claz_t]).
struct_opv(a,claz_simple_array(claz_signed_byte_64),classname,"SIMPLE-ARRAY-SIGNED-BYTE-64").
struct_opv(a,claz_simple_array(claz_signed_byte_64),classof,claz_built_in_class).
struct_opv(a,claz_simple_array(claz_signed_byte_64),subtypep,claz_simple_array).
struct_opv(a,claz_simple_array(claz_signed_byte_64),subtypep,claz_vector).
struct_opv(a,claz_simple_array(claz_signed_byte_64),super_priority,[claz_vector,claz_simple_array,claz_array,claz_sequence,claz_t]).
struct_opv(a,claz_simple_array(claz_signed_byte_8),classname,"SIMPLE-ARRAY-SIGNED-BYTE-8").
struct_opv(a,claz_simple_array(claz_signed_byte_8),classof,claz_built_in_class).
struct_opv(a,claz_simple_array(claz_signed_byte_8),subtypep,claz_simple_array).
struct_opv(a,claz_simple_array(claz_signed_byte_8),subtypep,claz_vector).
struct_opv(a,claz_simple_array(claz_signed_byte_8),super_priority,[claz_vector,claz_simple_array,claz_array,claz_sequence,claz_t]).
struct_opv(a,claz_simple_array(claz_single_float),classname,"SIMPLE-ARRAY-SINGLE-FLOAT").
struct_opv(a,claz_simple_array(claz_single_float),classof,claz_built_in_class).
struct_opv(a,claz_simple_array(claz_single_float),subtypep,claz_simple_array).
struct_opv(a,claz_simple_array(claz_single_float),subtypep,claz_vector).
struct_opv(a,claz_simple_array(claz_single_float),super_priority,[claz_vector,claz_simple_array,claz_array,claz_sequence,claz_t]).
struct_opv(a,claz_simple_array(claz_t),classname,"SIMPLE-ARRAY-T").
struct_opv(a,claz_simple_array(claz_t),classof,claz_built_in_class).
struct_opv(a,claz_simple_array(claz_t),name,"DATA",zlot_simple_array_t_data).
struct_opv(a,claz_simple_array(claz_t),name,"DIMV",zlot_simple_array_t_dimv).
struct_opv(a,claz_simple_array(claz_t),name,"ELEMENT-TYPE",zlot_simple_array_t_element_type).
struct_opv(a,claz_simple_array(claz_t),name,"TOTAL-SIZE",zlot_simple_array_t_total_size).
struct_opv(a,claz_simple_array(claz_t),readonly,t,zlot_simple_array_t_data).
struct_opv(a,claz_simple_array(claz_t),readonly,t,zlot_simple_array_t_dimv).
struct_opv(a,claz_simple_array(claz_t),readonly,t,zlot_simple_array_t_element_type).
struct_opv(a,claz_simple_array(claz_t),readonly,t,zlot_simple_array_t_total_size).
struct_opv(a,claz_simple_array(claz_t),returns,claz_integer,zlot_simple_array_t_total_size).
struct_opv(a,claz_simple_array(claz_t),returns,claz_list,zlot_simple_array_t_data).
struct_opv(a,claz_simple_array(claz_t),returns,claz_simple_vector(claz_integer),zlot_simple_array_t_dimv).
struct_opv(a,claz_simple_array(claz_t),returns,claz_t,zlot_simple_array_t_element_type).
struct_opv(a,claz_simple_array(claz_t),slot,data,zlot_simple_array_t_data).
struct_opv(a,claz_simple_array(claz_t),slot,dimv,zlot_simple_array_t_dimv).
struct_opv(a,claz_simple_array(claz_t),slot,element_type,zlot_simple_array_t_element_type).
struct_opv(a,claz_simple_array(claz_t),slot,total_size,zlot_simple_array_t_total_size).
struct_opv(a,claz_simple_array(claz_unsigned_byte16),classname,"SIMPLE-ARRAY").
struct_opv(a,claz_simple_array(claz_unsigned_byte16),classof,claz_built_in_class).
struct_opv(a,claz_simple_array(claz_unsigned_byte16),name,"DIMV",zlot_simple_array_dimv(claz_unsigned_byte16)).
struct_opv(a,claz_simple_array(claz_unsigned_byte16),name,"TOTAL-SIZE",zlot_simple_array_total_size(claz_unsigned_byte16)).
struct_opv(a,claz_simple_array(claz_unsigned_byte16),readonly,t,zlot_simple_array_data(claz_unsigned_byte16)).
struct_opv(a,claz_simple_array(claz_unsigned_byte16),readonly,t,zlot_simple_array_dimv(claz_unsigned_byte16)).
struct_opv(a,claz_simple_array(claz_unsigned_byte16),readonly,t,zlot_simple_array_total_size(claz_unsigned_byte16)).
struct_opv(a,claz_simple_array(claz_unsigned_byte16),returns,claz_integer,zlot_simple_array_total_size(claz_unsigned_byte16)).
struct_opv(a,claz_simple_array(claz_unsigned_byte16),returns,claz_simple_vector(claz_integer),zlot_simple_array_data(claz_unsigned_byte16)).
struct_opv(a,claz_simple_array(claz_unsigned_byte16),returns,claz_simple_vector(claz_integer),zlot_simple_array_dimv(claz_unsigned_byte16)).
struct_opv(a,claz_simple_array(claz_unsigned_byte16),slot,dimv,zlot_simple_array_dimv(claz_unsigned_byte16)).
struct_opv(a,claz_simple_array(claz_unsigned_byte16),slot,total_size,zlot_simple_array_total_size(claz_unsigned_byte16)).
struct_opv(a,claz_simple_array(claz_unsigned_byte32),classname,"SIMPLE-ARRAY").
struct_opv(a,claz_simple_array(claz_unsigned_byte32),classof,claz_built_in_class).
struct_opv(a,claz_simple_array(claz_unsigned_byte32),name,"DIMV",zlot_simple_array_dimv(claz_unsigned_byte32)).
struct_opv(a,claz_simple_array(claz_unsigned_byte32),name,"TOTAL-SIZE",zlot_simple_array_total_size(claz_unsigned_byte32)).
struct_opv(a,claz_simple_array(claz_unsigned_byte32),readonly,t,zlot_simple_array_data(claz_unsigned_byte32)).
struct_opv(a,claz_simple_array(claz_unsigned_byte32),readonly,t,zlot_simple_array_dimv(claz_unsigned_byte32)).
struct_opv(a,claz_simple_array(claz_unsigned_byte32),readonly,t,zlot_simple_array_total_size(claz_unsigned_byte32)).
struct_opv(a,claz_simple_array(claz_unsigned_byte32),returns,claz_integer,zlot_simple_array_total_size(claz_unsigned_byte32)).
struct_opv(a,claz_simple_array(claz_unsigned_byte32),returns,claz_list,zlot_simple_array_data(claz_unsigned_byte32)).
struct_opv(a,claz_simple_array(claz_unsigned_byte32),returns,claz_simple_vector(claz_integer),zlot_simple_array_dimv(claz_unsigned_byte32)).
struct_opv(a,claz_simple_array(claz_unsigned_byte32),slot,dimv,zlot_simple_array_dimv(claz_unsigned_byte32)).
struct_opv(a,claz_simple_array(claz_unsigned_byte32),slot,total_size,zlot_simple_array_total_size(claz_unsigned_byte32)).
struct_opv(a,claz_simple_array(claz_unsigned_byte32),subtypep,claz_array).
struct_opv(a,claz_simple_array(claz_unsigned_byte8),classname,"SIMPLE-ARRAY").
struct_opv(a,claz_simple_array(claz_unsigned_byte8),classof,claz_built_in_class).
struct_opv(a,claz_simple_array(claz_unsigned_byte8),subtypep,claz_array).
struct_opv(a,claz_simple_array(claz_unsigned_byte_15),classname,"SIMPLE-ARRAY-UNSIGNED-BYTE-15").
struct_opv(a,claz_simple_array(claz_unsigned_byte_15),classof,claz_built_in_class).
struct_opv(a,claz_simple_array(claz_unsigned_byte_15),subtypep,claz_simple_array).
struct_opv(a,claz_simple_array(claz_unsigned_byte_15),subtypep,claz_vector).
struct_opv(a,claz_simple_array(claz_unsigned_byte_15),super_priority,[claz_vector,claz_simple_array,claz_array,claz_sequence,claz_t]).
struct_opv(a,claz_simple_array(claz_unsigned_byte_16),classname,"SIMPLE-ARRAY-UNSIGNED-BYTE-16").
struct_opv(a,claz_simple_array(claz_unsigned_byte_16),classof,claz_built_in_class).
struct_opv(a,claz_simple_array(claz_unsigned_byte_16),subtypep,claz_simple_array).
struct_opv(a,claz_simple_array(claz_unsigned_byte_16),subtypep,claz_vector).
struct_opv(a,claz_simple_array(claz_unsigned_byte_16),super_priority,[claz_vector,claz_simple_array,claz_array,claz_sequence,claz_t]).
struct_opv(a,claz_simple_array(claz_unsigned_byte_2),classname,"SIMPLE-ARRAY-UNSIGNED-BYTE-2").
struct_opv(a,claz_simple_array(claz_unsigned_byte_2),classof,claz_built_in_class).
struct_opv(a,claz_simple_array(claz_unsigned_byte_2),subtypep,claz_simple_array).
struct_opv(a,claz_simple_array(claz_unsigned_byte_2),subtypep,claz_vector).
struct_opv(a,claz_simple_array(claz_unsigned_byte_2),super_priority,[claz_vector,claz_simple_array,claz_array,claz_sequence,claz_t]).
struct_opv(a,claz_simple_array(claz_unsigned_byte_31),classname,"SIMPLE-ARRAY-UNSIGNED-BYTE-31").
struct_opv(a,claz_simple_array(claz_unsigned_byte_31),classof,claz_built_in_class).
struct_opv(a,claz_simple_array(claz_unsigned_byte_31),subtypep,claz_simple_array).
struct_opv(a,claz_simple_array(claz_unsigned_byte_31),subtypep,claz_vector).
struct_opv(a,claz_simple_array(claz_unsigned_byte_31),super_priority,[claz_vector,claz_simple_array,claz_array,claz_sequence,claz_t]).
struct_opv(a,claz_simple_array(claz_unsigned_byte_32),classname,"SIMPLE-ARRAY-UNSIGNED-BYTE-32").
struct_opv(a,claz_simple_array(claz_unsigned_byte_32),classof,claz_built_in_class).
struct_opv(a,claz_simple_array(claz_unsigned_byte_32),subtypep,claz_simple_array).
struct_opv(a,claz_simple_array(claz_unsigned_byte_32),subtypep,claz_vector).
struct_opv(a,claz_simple_array(claz_unsigned_byte_32),super_priority,[claz_vector,claz_simple_array,claz_array,claz_sequence,claz_t]).
struct_opv(a,claz_simple_array(claz_unsigned_byte_4),classname,"SIMPLE-ARRAY-UNSIGNED-BYTE-4").
struct_opv(a,claz_simple_array(claz_unsigned_byte_4),classof,claz_built_in_class).
struct_opv(a,claz_simple_array(claz_unsigned_byte_4),subtypep,claz_simple_array).
struct_opv(a,claz_simple_array(claz_unsigned_byte_4),subtypep,claz_vector).
struct_opv(a,claz_simple_array(claz_unsigned_byte_4),super_priority,[claz_vector,claz_simple_array,claz_array,claz_sequence,claz_t]).
struct_opv(a,claz_simple_array(claz_unsigned_byte_63),classname,"SIMPLE-ARRAY-UNSIGNED-BYTE-63").
struct_opv(a,claz_simple_array(claz_unsigned_byte_63),classof,claz_built_in_class).
struct_opv(a,claz_simple_array(claz_unsigned_byte_63),subtypep,claz_simple_array).
struct_opv(a,claz_simple_array(claz_unsigned_byte_63),subtypep,claz_vector).
struct_opv(a,claz_simple_array(claz_unsigned_byte_63),super_priority,[claz_vector,claz_simple_array,claz_array,claz_sequence,claz_t]).
struct_opv(a,claz_simple_array(claz_unsigned_byte_64),classname,"SIMPLE-ARRAY-UNSIGNED-BYTE-64").
struct_opv(a,claz_simple_array(claz_unsigned_byte_64),classof,claz_built_in_class).
struct_opv(a,claz_simple_array(claz_unsigned_byte_64),subtypep,claz_simple_array).
struct_opv(a,claz_simple_array(claz_unsigned_byte_64),subtypep,claz_vector).
struct_opv(a,claz_simple_array(claz_unsigned_byte_64),super_priority,[claz_vector,claz_simple_array,claz_array,claz_sequence,claz_t]).
struct_opv(a,claz_simple_array(claz_unsigned_byte_7),classname,"SIMPLE-ARRAY-UNSIGNED-BYTE-7").
struct_opv(a,claz_simple_array(claz_unsigned_byte_7),classof,claz_built_in_class).
struct_opv(a,claz_simple_array(claz_unsigned_byte_7),subtypep,claz_simple_array).
struct_opv(a,claz_simple_array(claz_unsigned_byte_7),subtypep,claz_vector).
struct_opv(a,claz_simple_array(claz_unsigned_byte_7),super_priority,[claz_vector,claz_simple_array,claz_array,claz_sequence,claz_t]).
struct_opv(a,claz_simple_array(claz_unsigned_byte_8),classname,"SIMPLE-ARRAY-UNSIGNED-BYTE-8").
struct_opv(a,claz_simple_array(claz_unsigned_byte_8),classof,claz_built_in_class).
struct_opv(a,claz_simple_array(claz_unsigned_byte_8),subtypep,claz_simple_array).
struct_opv(a,claz_simple_array(claz_unsigned_byte_8),subtypep,claz_vector).
struct_opv(a,claz_simple_array(claz_unsigned_byte_8),super_priority,[claz_vector,claz_simple_array,claz_array,claz_sequence,claz_t]).
struct_opv(a,claz_simple_array(claz_unsigned_fixnum),classname,"SIMPLE-ARRAY-UNSIGNED-FIXNUM").
struct_opv(a,claz_simple_array(claz_unsigned_fixnum),classof,claz_built_in_class).
struct_opv(a,claz_simple_array(claz_unsigned_fixnum),subtypep,claz_simple_array).
struct_opv(a,claz_simple_array(claz_unsigned_fixnum),subtypep,claz_vector).
struct_opv(a,claz_simple_array(claz_unsigned_fixnum),super_priority,[claz_vector,claz_simple_array,claz_array,claz_sequence,claz_t]).
struct_opv(a,claz_simple_array(Type),name,"DATA",zlot_simple_array_data(Type)).
struct_opv(a,claz_simple_array(Type),returns,claz_simple_vector(Type),zlot_simple_array_data(Type)).
struct_opv(a,claz_simple_array(Type),slot,data,zlot_simple_array_data(Type)).
struct_opv(a,claz_simple_array,classname,"SIMPLE-ARRAY").
struct_opv(a,claz_simple_array,classof,claz_built_in_class).
struct_opv(a,claz_simple_array,subtypep,claz_array).
struct_opv(a,claz_simple_array,super_priority,[claz_array,claz_t]).
struct_opv(a,claz_simple_base_string,classname,"SIMPLE-BASE-STRING").
struct_opv(a,claz_simple_base_string,classof,claz_built_in_class).
struct_opv(a,claz_simple_base_string,subtypep,claz_base_string).
struct_opv(a,claz_simple_base_string,subtypep,claz_simple_string).
struct_opv(a,claz_simple_base_string,super_priority,[claz_base_string,claz_simple_string,claz_string,claz_vector,claz_simple_array,claz_array,claz_sequence,claz_t]).
struct_opv(a,claz_simple_bit_vector,classname,"SIMPLE-BIT-VECTOR").
struct_opv(a,claz_simple_bit_vector,classof,claz_built_in_class).
struct_opv(a,claz_simple_bit_vector,subtypep,claz_bit_vector).
struct_opv(a,claz_simple_bit_vector,subtypep,claz_simple_array).
struct_opv(a,claz_simple_bit_vector,super_priority,[claz_bit_vector,claz_vector,claz_simple_array,claz_array,claz_sequence,claz_t]).
struct_opv(a,claz_simple_character_string,classname,"SIMPLE-CHARACTER-STRING").
struct_opv(a,claz_simple_character_string,classof,claz_built_in_class).
struct_opv(a,claz_simple_character_string,subtypep,claz_character_string).
struct_opv(a,claz_simple_character_string,subtypep,claz_simple_string).
struct_opv(a,claz_simple_character_string,super_priority,[claz_character_string,claz_simple_string,claz_string,claz_vector,claz_simple_array,claz_array,claz_sequence,claz_t]).
struct_opv(a,claz_simple_compiler_note,classname,"SIMPLE-COMPILER-NOTE").
struct_opv(a,claz_simple_compiler_note,classof,claz_built_in_class).
struct_opv(a,claz_simple_compiler_note,subtypep,claz_compiler_note).
struct_opv(a,claz_simple_division_by_zero,classname,"SIMPLE-DIVISION-BY-ZERO").
struct_opv(a,claz_simple_division_by_zero,classof,claz_built_in_class).
struct_opv(a,claz_simple_division_by_zero,subtypep,claz_division_by_zero).
struct_opv(a,claz_simple_end_of_file,classname,"SIMPLE-END-OF-FILE").
struct_opv(a,claz_simple_end_of_file,classof,claz_built_in_class).
struct_opv(a,claz_simple_end_of_file,subtypep,claz_end_of_file).
struct_opv(a,claz_simple_missing_load_form,classname,"SIMPLE-MISSING-LOAD-FORM").
struct_opv(a,claz_simple_missing_load_form,classof,claz_built_in_class).
struct_opv(a,claz_simple_missing_load_form,subtypep,claz_missing_load_form).
struct_opv(a,claz_simple_print_not_readable,classname,"SIMPLE-PRINT-NOT-READABLE").
struct_opv(a,claz_simple_print_not_readable,classof,claz_built_in_class).
struct_opv(a,claz_simple_print_not_readable,subtypep,claz_print_not_readable).
struct_opv(a,claz_simple_string,classname,"SIMPLE-STRING").
struct_opv(a,claz_simple_string,classof,claz_built_in_class).
struct_opv(a,claz_simple_string,name,"CAPACITY",zlot_simple_string_capacity).
struct_opv(a,claz_simple_string,name,"CHARS",zlot_simple_string_chars).
struct_opv(a,claz_simple_string,returns,claz_integer,zlot_simple_string_capacity).
struct_opv(a,claz_simple_string,returns,claz_simple_vector(claz_char_code),zlot_simple_string_chars).
struct_opv(a,claz_simple_string,slot,capacity,zlot_simple_string_capacity).
struct_opv(a,claz_simple_string,slot,chars,zlot_simple_string_chars).
struct_opv(a,claz_simple_string,subtypep,claz_simple_array).
struct_opv(a,claz_simple_string,subtypep,claz_string).
struct_opv(a,claz_simple_string,super_priority,[claz_string,claz_vector,claz_simple_array,claz_array,claz_sequence,claz_t]).
struct_opv(a,claz_simple_unbound_slot,classname,"SIMPLE-UNBOUND-SLOT").
struct_opv(a,claz_simple_unbound_slot,classof,claz_built_in_class).
struct_opv(a,claz_simple_unbound_slot,subtypep,claz_unbound_slot).
struct_opv(a,claz_simple_unbound_variable,classname,"SIMPLE-UNBOUND-VARIABLE").
struct_opv(a,claz_simple_unbound_variable,classof,claz_built_in_class).
struct_opv(a,claz_simple_unbound_variable,subtypep,claz_unbound_variable).
struct_opv(a,claz_simple_undefined_function,classname,"SIMPLE-UNDEFINED-FUNCTION").
struct_opv(a,claz_simple_undefined_function,classof,claz_built_in_class).
struct_opv(a,claz_simple_undefined_function,subtypep,claz_undefined_function).
struct_opv(a,claz_simple_vector(claz_unsigned_byte16),classname,"BASIC-VECTOR").
struct_opv(a,claz_simple_vector(claz_unsigned_byte16),classof,claz_built_in_class).
struct_opv(a,claz_simple_vector(claz_unsigned_byte16),subtypep,claz_vector).
struct_opv(a,claz_simple_vector(claz_unsigned_byte32),classname,"BASIC-VECTOR").
struct_opv(a,claz_simple_vector(claz_unsigned_byte32),classof,claz_built_in_class).
struct_opv(a,claz_simple_vector(claz_unsigned_byte32),subtypep,claz_vector).
struct_opv(a,claz_simple_vector(claz_unsigned_byte8),classname,"BASIC-VECTOR").
struct_opv(a,claz_simple_vector(claz_unsigned_byte8),classof,claz_built_in_class).
struct_opv(a,claz_simple_vector(claz_unsigned_byte8),subtypep,claz_vector).
struct_opv(a,claz_simple_vector(Type),name,"CAPACITY",zlot_basic_vector_capacity(Type)).
struct_opv(a,claz_simple_vector(Type),name,"ELEMENTS",zlot_basic_vector_elements(Type)).
struct_opv(a,claz_simple_vector(Type),returns,claz_integer,zlot_basic_vector_capacity(Type)).
struct_opv(a,claz_simple_vector(Type),returns,claz_simple_vector(Type),zlot_basic_vector_elements(Type)).
struct_opv(a,claz_simple_vector(Type),slot,capacity,zlot_basic_vector_capacity(Type)).
struct_opv(a,claz_simple_vector(Type),slot,elements,zlot_basic_vector_elements(Type)).
struct_opv(a,claz_simple_vector(Type),subtypep,claz_vector(Type)).
struct_opv(a,claz_simple_vector,classname,"SIMPLE-VECTOR").
struct_opv(a,claz_simple_vector,classof,claz_built_in_class).
struct_opv(a,claz_simple_vector,name,"CAPACITY",zlot_simple_vector_capacity).
struct_opv(a,claz_simple_vector,name,"DATA",zlot_simple_vector_data).
struct_opv(a,claz_simple_vector,returns,claz_integer,zlot_simple_vector_capacity).
struct_opv(a,claz_simple_vector,returns,claz_list,zlot_simple_vector_data).
struct_opv(a,claz_simple_vector,slot,capacity,zlot_simple_vector_capacity).
struct_opv(a,claz_simple_vector,slot,data,zlot_simple_vector_data).
struct_opv(a,claz_simple_vector,subtypep,claz_simple_array).
struct_opv(a,claz_simple_vector,subtypep,claz_vector).
struct_opv(a,claz_simple_vector,super_priority,[claz_vector,claz_simple_array,claz_array,claz_sequence,claz_t]).
struct_opv(a,claz_specialized_array(claz_element_type_properties),classname,"SPECIALIZED-ARRAY-ELEMENT-TYPE-PROPERTIES").
struct_opv(a,claz_specialized_array(claz_element_type_properties),classof,claz_built_in_class).
struct_opv(a,claz_specialized_array(claz_element_type_properties),name,"COMPLEX-TYPECODE",zlot_specialized_array_element_type_properties_complex_typecode).
struct_opv(a,claz_specialized_array(claz_element_type_properties),name,"CTYPE",zlot_specialized_array_element_type_properties_ctype).
struct_opv(a,claz_specialized_array(claz_element_type_properties),name,"FIXNUM-P",zlot_specialized_array_element_type_properties_fixnum_p).
struct_opv(a,claz_specialized_array(claz_element_type_properties),name,"IMPORTANCE",zlot_specialized_array_element_type_properties_importance).
struct_opv(a,claz_specialized_array(claz_element_type_properties),name,"INITIAL-ELEMENT-DEFAULT",zlot_specialized_array_element_type_properties_initial_element_default).
struct_opv(a,claz_specialized_array(claz_element_type_properties),name,"N-BITS",zlot_specialized_array_element_type_properties_n_bits).
struct_opv(a,claz_specialized_array(claz_element_type_properties),name,"N-PAD-ELEMENTS",zlot_specialized_array_element_type_properties_n_pad_elements).
struct_opv(a,claz_specialized_array(claz_element_type_properties),name,"PRIMITIVE-TYPE-NAME",zlot_specialized_array_element_type_properties_primitive_type_name).
struct_opv(a,claz_specialized_array(claz_element_type_properties),name,"SPECIFIER",zlot_specialized_array_element_type_properties_specifier).
struct_opv(a,claz_specialized_array(claz_element_type_properties),name,"TYPECODE",zlot_specialized_array_element_type_properties_typecode).
struct_opv(a,claz_specialized_array(claz_element_type_properties),slot,complex_typecode,zlot_specialized_array_element_type_properties_complex_typecode).
struct_opv(a,claz_specialized_array(claz_element_type_properties),slot,ctype,zlot_specialized_array_element_type_properties_ctype).
struct_opv(a,claz_specialized_array(claz_element_type_properties),slot,fixnum_p,zlot_specialized_array_element_type_properties_fixnum_p).
struct_opv(a,claz_specialized_array(claz_element_type_properties),slot,importance,zlot_specialized_array_element_type_properties_importance).
struct_opv(a,claz_specialized_array(claz_element_type_properties),slot,initial_element_default,zlot_specialized_array_element_type_properties_initial_element_default).
struct_opv(a,claz_specialized_array(claz_element_type_properties),slot,n_bits,zlot_specialized_array_element_type_properties_n_bits).
struct_opv(a,claz_specialized_array(claz_element_type_properties),slot,n_pad_elements,zlot_specialized_array_element_type_properties_n_pad_elements).
struct_opv(a,claz_specialized_array(claz_element_type_properties),slot,primitive_type_name,zlot_specialized_array_element_type_properties_primitive_type_name).
struct_opv(a,claz_specialized_array(claz_element_type_properties),slot,specifier,zlot_specialized_array_element_type_properties_specifier).
struct_opv(a,claz_specialized_array(claz_element_type_properties),slot,typecode,zlot_specialized_array_element_type_properties_typecode).
struct_opv(a,claz_specialized_array(claz_element_type_properties),subtypep,claz_structure_object).
struct_opv(a,claz_specialized_array(claz_element_type_properties),super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(a,claz_string,classname,"STRING").
struct_opv(a,claz_string,classof,claz_built_in_class).
struct_opv(a,claz_string,subtypep,claz_vector).
struct_opv(a,claz_string,super_priority,[claz_vector,claz_array,claz_sequence,claz_t]).
struct_opv(a,claz_vector,classname,"VECTOR").
struct_opv(a,claz_vector,classof,claz_built_in_class).
struct_opv(a,claz_vector,subtypep,claz_array).
struct_opv(a,claz_vector,subtypep,claz_sequence).
struct_opv(a,claz_vector,super_priority,[claz_array,claz_sequence,claz_t]).
struct_opv(a,claz_vector_nil,classname,"VECTOR-NIL").
struct_opv(a,claz_vector_nil,classof,claz_built_in_class).
struct_opv(a,claz_vector_nil,subtypep,claz_string).
struct_opv(a,claz_vector_nil,super_priority,[claz_string,claz_vector,claz_array,claz_sequence,claz_t]).
struct_opv(a,claz_zero_rank_array,classname,"ZERO-RANK-ARRAY").
struct_opv(a,claz_zero_rank_array,classof,claz_built_in_class).
struct_opv(a,claz_zero_rank_array,name,"ADJUSTABLE",zlot_zero_rank_array_adjustable).
struct_opv(a,claz_zero_rank_array,name,"DATA",zlot_zero_rank_array_data).
struct_opv(a,claz_zero_rank_array,name,"ELEMENT-TYPE",zlot_zero_rank_array_element_type).
struct_opv(a,claz_zero_rank_array,readonly,t,zlot_zero_rank_array_adjustable).
struct_opv(a,claz_zero_rank_array,readonly,t,zlot_zero_rank_array_element_type).
struct_opv(a,claz_zero_rank_array,returns,claz_boolean,zlot_zero_rank_array_adjustable).
struct_opv(a,claz_zero_rank_array,returns,claz_t,zlot_zero_rank_array_data).
struct_opv(a,claz_zero_rank_array,returns,claz_t,zlot_zero_rank_array_element_type).
struct_opv(a,claz_zero_rank_array,slot,adjustable,zlot_zero_rank_array_adjustable).
struct_opv(a,claz_zero_rank_array,slot,data,zlot_zero_rank_array_data).
struct_opv(a,claz_zero_rank_array,slot,element_type,zlot_zero_rank_array_element_type).
struct_opv(a,claz_zero_rank_array,subtypep,claz_array).
struct_opv(c,claz_class,classname,"CLASS").
struct_opv(c,claz_class,classof,claz_built_in_class).
struct_opv(c,claz_class,name,"ALL-SUPERCLASSES",zlot_class_all_superclasses).
struct_opv(c,claz_class,name,"CLASS-EQ-SPECIALIZER",zlot_class_class_eq_specializer).
struct_opv(c,claz_class,name,"COMPLEX-C61",zlot_class_complex_c61).
struct_opv(c,claz_class,name,"COMPLEX-INTERSECTION2",zlot_class_complex_intersection2).
struct_opv(c,claz_class,name,"COMPLEX-SUBTYPEP-ARG1",zlot_class_complex_subtypep_arg1).
struct_opv(c,claz_class,name,"COMPLEX-SUBTYPEP-ARG2",zlot_class_complex_subtypep_arg2).
struct_opv(c,claz_class,name,"COMPLEX-UNION2",zlot_class_complex_union2).
struct_opv(c,claz_class,name,"DEFAULT-INITARGS",zlot_class_default_initargs).
struct_opv(c,claz_class,name,"DIRECT-DEFAULT-INITARGS",zlot_class_direct_default_initargs).
struct_opv(c,claz_class,name,"DIRECT-METHODS",zlot_class_direct_methods).
struct_opv(c,claz_class,name,"DIRECT-SLOTS",zlot_class_direct_slots).
struct_opv(c,claz_class,name,"DIRECT-SUBCLASSES",zlot_class_direct_subclasses).
struct_opv(c,claz_class,name,"DIRECT-SUPERCLASSES",zlot_class_direct_superclasses).
struct_opv(c,claz_class,name,"DOCUMENTATION",zlot_class_documentation).
struct_opv(c,claz_class,name,"ENUMERABLE-P",zlot_class_enumerable_p).
struct_opv(c,claz_class,name,"FINALIZED-P",zlot_class_finalized_p).
struct_opv(c,claz_class,name,"INITIALIZED",zlot_class_initialized).
struct_opv(c,claz_class,name,"LISTENERS",zlot_class_listeners).
struct_opv(c,claz_class,name,"MIGHT-CONTAIN-OTHER-TYPES-P",zlot_class_might_contain_other_types_p).
struct_opv(c,claz_class,name,"NAME",zlot_class_name).
struct_opv(c,claz_class,name,"NEGATE",zlot_class_negate).
struct_opv(c,claz_class,name,"PRECEDENCE-LIST",zlot_class_precedence_list).
struct_opv(c,claz_class,name,"SAFE-P",zlot_class_safe_p).
struct_opv(c,claz_class,name,"SIMPLE-C61",zlot_class_simple_c61).
struct_opv(c,claz_class,name,"SIMPLE-INTERSECTION2",zlot_class_simple_intersection2).
struct_opv(c,claz_class,name,"SIMPLE-SUBTYPEP",zlot_class_simple_subtypep).
struct_opv(c,claz_class,name,"SIMPLE-UNION2",zlot_class_simple_union2).
struct_opv(c,claz_class,name,"SINGLETON-P",zlot_class_singleton_p).
struct_opv(c,claz_class,name,"SLOT-LOCATION-TABLE",zlot_class_slot_location_table).
struct_opv(c,claz_class,name,"SLOTS",zlot_class_slots).
struct_opv(c,claz_class,name,"UNPARSE",zlot_class_unparse).
struct_opv(c,claz_class,slot,all_superclasses,zlot_class_all_superclasses).
struct_opv(c,claz_class,slot,class_eq_specializer,zlot_class_class_eq_specializer).
struct_opv(c,claz_class,slot,complex_c61,zlot_class_complex_c61).
struct_opv(c,claz_class,slot,complex_intersection2,zlot_class_complex_intersection2).
struct_opv(c,claz_class,slot,complex_subtypep_arg1,zlot_class_complex_subtypep_arg1).
struct_opv(c,claz_class,slot,complex_subtypep_arg2,zlot_class_complex_subtypep_arg2).
struct_opv(c,claz_class,slot,complex_union2,zlot_class_complex_union2).
struct_opv(c,claz_class,slot,default_initargs,zlot_class_default_initargs).
struct_opv(c,claz_class,slot,direct_default_initargs,zlot_class_direct_default_initargs).
struct_opv(c,claz_class,slot,direct_methods,zlot_class_direct_methods).
struct_opv(c,claz_class,slot,direct_slots,zlot_class_direct_slots).
struct_opv(c,claz_class,slot,direct_subclasses,zlot_class_direct_subclasses).
struct_opv(c,claz_class,slot,direct_superclasses,zlot_class_direct_superclasses).
struct_opv(c,claz_class,slot,documentation,zlot_class_documentation).
struct_opv(c,claz_class,slot,enumerable_p,zlot_class_enumerable_p).
struct_opv(c,claz_class,slot,finalized_p,zlot_class_finalized_p).
struct_opv(c,claz_class,slot,initialized,zlot_class_initialized).
struct_opv(c,claz_class,slot,listeners,zlot_class_listeners).
struct_opv(c,claz_class,slot,might_contain_other_types_p,zlot_class_might_contain_other_types_p).
struct_opv(c,claz_class,slot,name,zlot_class_name).
struct_opv(c,claz_class,slot,negate,zlot_class_negate).
struct_opv(c,claz_class,slot,precedence_list,zlot_class_precedence_list).
struct_opv(c,claz_class,slot,safe_p,zlot_class_safe_p).
struct_opv(c,claz_class,slot,simple_c61,zlot_class_simple_c61).
struct_opv(c,claz_class,slot,simple_intersection2,zlot_class_simple_intersection2).
struct_opv(c,claz_class,slot,simple_subtypep,zlot_class_simple_subtypep).
struct_opv(c,claz_class,slot,simple_union2,zlot_class_simple_union2).
struct_opv(c,claz_class,slot,singleton_p,zlot_class_singleton_p).
struct_opv(c,claz_class,slot,slot_location_table,zlot_class_slot_location_table).
struct_opv(c,claz_class,slot,slots,zlot_class_slots).
struct_opv(c,claz_class,slot,unparse,zlot_class_unparse).
struct_opv(c,claz_class,subtypep,claz_definition_source_mixin).
struct_opv(c,claz_class,subtypep,claz_dependent_update_mixin).
struct_opv(c,claz_class,subtypep,claz_potential_class).
struct_opv(c,claz_class,subtypep,claz_standard_specializer).
struct_opv(c,claz_class,subtypep,claz_structure_c33_object).
struct_opv(c,claz_class,super_priority,[claz_dependent_update_mixin,claz_plist_mixin,claz_definition_source_mixin,claz_standard_specializer,claz_specializer,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(c,claz_class,super_priority,[claz_potential_class,claz_specializer,claz_super_class,claz_standard_stablehash,claz_metaobject,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(c,claz_class,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(c,claz_class_eq_specializer,classname,"CLASS-EQ-SPECIALIZER").
struct_opv(c,claz_class_eq_specializer,classof,claz_built_in_class).
struct_opv(c,claz_class_eq_specializer,name,"OBJECT",zlot_class_eq_specializer_object).
struct_opv(c,claz_class_eq_specializer,slot,object,zlot_class_eq_specializer_object).
struct_opv(c,claz_class_eq_specializer,subtypep,claz_exact_class_specializer).
struct_opv(c,claz_class_eq_specializer,subtypep,claz_specializer_with_object).
struct_opv(c,claz_class_eq_specializer,subtypep,claz_standard_specializer).
struct_opv(c,claz_class_eq_specializer,super_priority,[claz_standard_specializer,claz_exact_class_specializer,claz_specializer_with_object,claz_specializer,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(c,claz_class_precedence_description,classname,"CLASS-PRECEDENCE-DESCRIPTION").
struct_opv(c,claz_class_precedence_description,classof,claz_built_in_class).
struct_opv(c,claz_class_precedence_description,name,"CPD-AFTER",zlot_class_precedence_description_cpd_after).
struct_opv(c,claz_class_precedence_description,name,"CPD-CLASS",zlot_class_precedence_description_cpd_class).
struct_opv(c,claz_class_precedence_description,name,"CPD-COUNT",zlot_class_precedence_description_cpd_count).
struct_opv(c,claz_class_precedence_description,name,"CPD-SUPERS",zlot_class_precedence_description_cpd_supers).
struct_opv(c,claz_class_precedence_description,slot,cpd_after,zlot_class_precedence_description_cpd_after).
struct_opv(c,claz_class_precedence_description,slot,cpd_class,zlot_class_precedence_description_cpd_class).
struct_opv(c,claz_class_precedence_description,slot,cpd_count,zlot_class_precedence_description_cpd_count).
struct_opv(c,claz_class_precedence_description,slot,cpd_supers,zlot_class_precedence_description_cpd_supers).
struct_opv(c,claz_class_precedence_description,subtypep,claz_structure_object).
struct_opv(c,claz_class_precedence_description,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(c,claz_class_prototype_specializer,classname,"CLASS-PROTOTYPE-SPECIALIZER").
struct_opv(c,claz_class_prototype_specializer,classof,claz_built_in_class).
struct_opv(c,claz_class_prototype_specializer,name,"OBJECT",zlot_class_prototype_specializer_object).
struct_opv(c,claz_class_prototype_specializer,slot,object,zlot_class_prototype_specializer_object).
struct_opv(c,claz_class_prototype_specializer,subtypep,claz_specializer_with_object).
struct_opv(c,claz_class_prototype_specializer,subtypep,claz_standard_specializer).
struct_opv(c,claz_class_prototype_specializer,super_priority,[claz_standard_specializer,claz_specializer_with_object,claz_specializer,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(c,claz_classoid,classname,"CLASSOID").
struct_opv(c,claz_classoid,classof,claz_built_in_class).
struct_opv(c,claz_classoid,name,"CLASS-INFO",zlot_classoid_class_info).
struct_opv(c,claz_classoid,name,"DIRECT-SUPERCLASSES",zlot_classoid_direct_superclasses).
struct_opv(c,claz_classoid,name,"LAYOUT",zlot_classoid_layout).
struct_opv(c,claz_classoid,name,"NAME",zlot_classoid_name).
struct_opv(c,claz_classoid,name,"PCL-CLASS",zlot_classoid_pcl_class).
struct_opv(c,claz_classoid,name,"STATE",zlot_classoid_state).
struct_opv(c,claz_classoid,name,"SUBCLASSES",zlot_classoid_subclasses).
struct_opv(c,claz_classoid,slot,class_info,zlot_classoid_class_info).
struct_opv(c,claz_classoid,slot,direct_superclasses,zlot_classoid_direct_superclasses).
struct_opv(c,claz_classoid,slot,layout,zlot_classoid_layout).
struct_opv(c,claz_classoid,slot,name,zlot_classoid_name).
struct_opv(c,claz_classoid,slot,pcl_class,zlot_classoid_pcl_class).
struct_opv(c,claz_classoid,slot,state,zlot_classoid_state).
struct_opv(c,claz_classoid,slot,subclasses,zlot_classoid_subclasses).
struct_opv(c,claz_classoid,subtypep,claz_ctype).
struct_opv(c,claz_classoid,super_priority,[claz_ctype,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(c,claz_classoid_cell,classname,"CLASSOID-CELL").
struct_opv(c,claz_classoid_cell,classof,claz_built_in_class).
struct_opv(c,claz_classoid_cell,name,"CLASSOID",zlot_classoid_cell_classoid).
struct_opv(c,claz_classoid_cell,name,"NAME",zlot_classoid_cell_name).
struct_opv(c,claz_classoid_cell,name,"PCL-CLASS",zlot_classoid_cell_pcl_class).
struct_opv(c,claz_classoid_cell,slot,classoid,zlot_classoid_cell_classoid).
struct_opv(c,claz_classoid_cell,slot,name,zlot_classoid_cell_name).
struct_opv(c,claz_classoid_cell,slot,pcl_class,zlot_classoid_cell_pcl_class).
struct_opv(c,claz_classoid_cell,subtypep,claz_structure_c33_object).
struct_opv(c,claz_classoid_cell,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(c,claz_generic_function,classname,"GENERIC-FUNCTION").
struct_opv(c,claz_generic_function,classof,claz_built_in_class).
struct_opv(c,claz_generic_function,name,"DOCUMENTATION",zlot_generic_function_documentation).
struct_opv(c,claz_generic_function,name,"ENCAPSULATIONS",zlot_generic_function_encapsulations).
struct_opv(c,claz_generic_function,name,"INITIAL-METHODS",zlot_generic_function_initial_methods).
struct_opv(c,claz_generic_function,name,"LISTENERS",zlot_generic_function_listeners).
struct_opv(c,claz_generic_function,slot,documentation,zlot_generic_function_documentation).
struct_opv(c,claz_generic_function,slot,encapsulations,zlot_generic_function_encapsulations).
struct_opv(c,claz_generic_function,slot,initial_methods,zlot_generic_function_initial_methods).
struct_opv(c,claz_generic_function,slot,listeners,zlot_generic_function_listeners).
struct_opv(c,claz_generic_function,subtypep,claz_definition_source_mixin).
struct_opv(c,claz_generic_function,subtypep,claz_dependent_update_mixin).
struct_opv(c,claz_generic_function,subtypep,claz_funcallable_standard_object).
struct_opv(c,claz_generic_function,subtypep,claz_metaobject).
struct_opv(c,claz_generic_function,super_priority,[claz_dependent_update_mixin,claz_plist_mixin,claz_definition_source_mixin,claz_metaobject,claz_funcallable_standard_object,claz_function,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(c,claz_generic_function,super_priority,[claz_metaobject,claz_funcallable_standard_object,claz_function,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(c,claz_generic_stream_controller,classname,"GENERIC-STREAM-CONTROLLER").
struct_opv(c,claz_generic_stream_controller,classof,claz_built_in_class).
struct_opv(c,claz_generic_stream_controller,subtypep,claz_standard_object).
struct_opv(c,claz_generic_stream_controller,super_priority,[claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(c,claz_layout,classname,"LAYOUT").
struct_opv(c,claz_layout,classof,claz_built_in_class).
struct_opv(c,claz_layout,name,"CLASSOID",zlot_layout_classoid).
struct_opv(c,claz_layout,name,"CLOS-HASH",zlot_layout_clos_hash).
struct_opv(c,claz_layout,name,"DEPTHOID",zlot_layout_depthoid).
struct_opv(c,claz_layout,name,"EQUALP-TESTS",zlot_layout_equalp_tests).
struct_opv(c,claz_layout,name,"FOR-STD-CLASS-B",zlot_layout_for_std_class_b).
struct_opv(c,claz_layout,name,"INFO",zlot_layout_info).
struct_opv(c,claz_layout,name,"INHERITS",zlot_layout_inherits).
struct_opv(c,claz_layout,name,"INVALID",zlot_layout_invalid).
struct_opv(c,claz_layout,name,"LENGTH",zlot_layout_length).
struct_opv(c,claz_layout,name,"LISP-CLASS",zlot_layout_lisp_class).
struct_opv(c,claz_layout,name,"PURE",zlot_layout_pure).
struct_opv(c,claz_layout,name,"SHARED-SLOTS",zlot_layout_shared_slots).
struct_opv(c,claz_layout,name,"SLOT-LIST",zlot_layout_slot_list).
struct_opv(c,claz_layout,name,"SLOT-NAMES",zlot_layout_slot_names).
struct_opv(c,claz_layout,name,"SLOT-TABLE",zlot_layout_slot_table).
struct_opv(c,claz_layout,name,"SOURCE-LOCATION",zlot_layout_source_location).
struct_opv(c,claz_layout,name,"UNTAGGED-BITMAP",zlot_layout_untagged_bitmap).
struct_opv(c,claz_layout,readonly,t,zlot_layout_lisp_class).
struct_opv(c,claz_layout,readonly,t,zlot_layout_shared_slots).
struct_opv(c,claz_layout,readonly,t,zlot_layout_slot_names).
struct_opv(c,claz_layout,readonly,t,zlot_layout_slot_table).
struct_opv(c,claz_layout,returns,claz_boolean,zlot_layout_invalid).
struct_opv(c,claz_layout,returns,claz_hash_table(claz_t,claz_t),zlot_layout_slot_table).
struct_opv(c,claz_layout,returns,claz_list,zlot_layout_slot_names).
struct_opv(c,claz_layout,returns,claz_t,zlot_layout_lisp_class).
struct_opv(c,claz_layout,returns,claz_t,zlot_layout_shared_slots).
struct_opv(c,claz_layout,slot,classoid,zlot_layout_classoid).
struct_opv(c,claz_layout,slot,clos_hash,zlot_layout_clos_hash).
struct_opv(c,claz_layout,slot,depthoid,zlot_layout_depthoid).
struct_opv(c,claz_layout,slot,equalp_tests,zlot_layout_equalp_tests).
struct_opv(c,claz_layout,slot,for_std_class_b,zlot_layout_for_std_class_b).
struct_opv(c,claz_layout,slot,info,zlot_layout_info).
struct_opv(c,claz_layout,slot,inherits,zlot_layout_inherits).
struct_opv(c,claz_layout,slot,invalid,zlot_layout_invalid).
struct_opv(c,claz_layout,slot,length,zlot_layout_length).
struct_opv(c,claz_layout,slot,lisp_class,zlot_layout_lisp_class).
struct_opv(c,claz_layout,slot,pure,zlot_layout_pure).
struct_opv(c,claz_layout,slot,shared_slots,zlot_layout_shared_slots).
struct_opv(c,claz_layout,slot,slot_list,zlot_layout_slot_list).
struct_opv(c,claz_layout,slot,slot_names,zlot_layout_slot_names).
struct_opv(c,claz_layout,slot,slot_table,zlot_layout_slot_table).
struct_opv(c,claz_layout,slot,source_location,zlot_layout_source_location).
struct_opv(c,claz_layout,slot,untagged_bitmap,zlot_layout_untagged_bitmap).
struct_opv(c,claz_layout,subtypep,claz_structure_c33_object).
struct_opv(c,claz_layout,subtypep,claz_t).
struct_opv(c,claz_layout,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(c,claz_layout_invalid,classname,"LAYOUT-INVALID").
struct_opv(c,claz_layout_invalid,classof,claz_built_in_class).
struct_opv(c,claz_lisp_class,classname,"LISP-CLASS").
struct_opv(c,claz_lisp_class,classof,claz_built_in_class).
struct_opv(c,claz_lisp_class,name,"CLASS-LAYOUT",zlot_lisp_class_class_layout).
struct_opv(c,claz_lisp_class,name,"CLASS-PRECEDENCE-LIST",zlot_lisp_class_class_precedence_list).
struct_opv(c,claz_lisp_class,name,"DIRECT-METHODS",zlot_lisp_class_direct_methods).
struct_opv(c,claz_lisp_class,name,"DIRECT-SUBCLASSES",zlot_lisp_class_direct_subclasses).
struct_opv(c,claz_lisp_class,name,"DIRECT-SUPERCLASSES",zlot_lisp_class_direct_superclasses).
struct_opv(c,claz_lisp_class,name,"DOCUMENTATION",zlot_lisp_class_documentation).
struct_opv(c,claz_lisp_class,name,"FINALIZED",zlot_lisp_class_finalized).
struct_opv(c,claz_lisp_class,name,"NAME",zlot_lisp_class_name).
struct_opv(c,claz_lisp_class,name,"PROPERTY-LIST",zlot_lisp_class_property_list).
struct_opv(c,claz_lisp_class,name,"SXHASH",zlot_lisp_class_sxhash).
struct_opv(c,claz_lisp_class,readonly,t,zlot_lisp_class_sxhash).
struct_opv(c,claz_lisp_class,returns,claz_boolean,zlot_lisp_class_finalized).
struct_opv(c,claz_lisp_class,returns,claz_integer,zlot_lisp_class_sxhash).
struct_opv(c,claz_lisp_class,returns,claz_layout,zlot_lisp_class_class_layout).
struct_opv(c,claz_lisp_class,returns,claz_list,zlot_lisp_class_class_precedence_list).
struct_opv(c,claz_lisp_class,returns,claz_list,zlot_lisp_class_direct_methods).
struct_opv(c,claz_lisp_class,returns,claz_list,zlot_lisp_class_direct_subclasses).
struct_opv(c,claz_lisp_class,returns,claz_list,zlot_lisp_class_direct_superclasses).
struct_opv(c,claz_lisp_class,returns,claz_list,zlot_lisp_class_documentation).
struct_opv(c,claz_lisp_class,returns,claz_list,zlot_lisp_class_property_list).
struct_opv(c,claz_lisp_class,returns,claz_t,zlot_lisp_class_name).
struct_opv(c,claz_lisp_class,slot,class_layout,zlot_lisp_class_class_layout).
struct_opv(c,claz_lisp_class,slot,class_precedence_list,zlot_lisp_class_class_precedence_list).
struct_opv(c,claz_lisp_class,slot,direct_methods,zlot_lisp_class_direct_methods).
struct_opv(c,claz_lisp_class,slot,direct_subclasses,zlot_lisp_class_direct_subclasses).
struct_opv(c,claz_lisp_class,slot,direct_superclasses,zlot_lisp_class_direct_superclasses).
struct_opv(c,claz_lisp_class,slot,documentation,zlot_lisp_class_documentation).
struct_opv(c,claz_lisp_class,slot,finalized,zlot_lisp_class_finalized).
struct_opv(c,claz_lisp_class,slot,name,zlot_lisp_class_name).
struct_opv(c,claz_lisp_class,slot,property_list,zlot_lisp_class_property_list).
struct_opv(c,claz_lisp_class,slot,sxhash,zlot_lisp_class_sxhash).
struct_opv(c,claz_lisp_class,subtypep,claz_standard_object).
struct_opv(c,claz_meta_info,classname,"META-INFO").
struct_opv(c,claz_meta_info,classof,claz_built_in_class).
struct_opv(c,claz_meta_info,name,"CATEGORY",zlot_meta_info_category).
struct_opv(c,claz_meta_info,name,"DEFAULT",zlot_meta_info_default).
struct_opv(c,claz_meta_info,name,"KIND",zlot_meta_info_kind).
struct_opv(c,claz_meta_info,name,"NUMBER",zlot_meta_info_number).
struct_opv(c,claz_meta_info,name,"TYPE-CHECKER",zlot_meta_info_type_checker).
struct_opv(c,claz_meta_info,name,"TYPE-SPEC",zlot_meta_info_type_spec).
struct_opv(c,claz_meta_info,name,"VALIDATE-FUNCTION",zlot_meta_info_validate_function).
struct_opv(c,claz_meta_info,slot,category,zlot_meta_info_category).
struct_opv(c,claz_meta_info,slot,default,zlot_meta_info_default).
struct_opv(c,claz_meta_info,slot,kind,zlot_meta_info_kind).
struct_opv(c,claz_meta_info,slot,number,zlot_meta_info_number).
struct_opv(c,claz_meta_info,slot,type_checker,zlot_meta_info_type_checker).
struct_opv(c,claz_meta_info,slot,type_spec,zlot_meta_info_type_spec).
struct_opv(c,claz_meta_info,slot,validate_function,zlot_meta_info_validate_function).
struct_opv(c,claz_meta_info,subtypep,claz_structure_object).
struct_opv(c,claz_meta_info,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(c,claz_metaobject,classname,"METAOBJECT").
struct_opv(c,claz_metaobject,classof,claz_built_in_class).
struct_opv(c,claz_metaobject,subtypep,claz_standard_object).
struct_opv(c,claz_metaobject,super_priority,[claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(c,claz_metaobject,super_priority,[claz_standard_object,claz_slot_object,claz_t]).
struct_opv(c,claz_metaobject_initialization_violation,classname,"METAOBJECT-INITIALIZATION-VIOLATION").
struct_opv(c,claz_metaobject_initialization_violation,classof,claz_built_in_class).
struct_opv(c,claz_method,classname,"METHOD").
struct_opv(c,claz_method,classof,claz_built_in_class).
struct_opv(c,claz_method,name,"FROM-DEFGENERIC",zlot_method_from_defgeneric).
struct_opv(c,claz_method,slot,from_defgeneric,zlot_method_from_defgeneric).
struct_opv(c,claz_method,subtypep,claz_metaobject).
struct_opv(c,claz_method,subtypep,claz_standard_stablehash).
struct_opv(c,claz_method,super_priority,[claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(c,claz_method,super_priority,[claz_standard_stablehash,claz_metaobject,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(c,claz_method_call,classname,"METHOD-CALL").
struct_opv(c,claz_method_call,classof,claz_built_in_class).
struct_opv(c,claz_method_call,name,"CALL-METHOD-ARGS",zlot_method_call_call_method_args).
struct_opv(c,claz_method_call,name,"FUNCTION",zlot_method_call_function).
struct_opv(c,claz_method_call,slot,call_method_args,zlot_method_call_call_method_args).
struct_opv(c,claz_method_call,slot,function,zlot_method_call_function).
struct_opv(c,claz_method_call,subtypep,claz_structure_object).
struct_opv(c,claz_method_call,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(c,claz_method_combination,classname,"METHOD-COMBINATION").
struct_opv(c,claz_method_combination,classof,claz_built_in_class).
struct_opv(c,claz_method_combination,name,"ARGUMENTS-LAMBDA-LIST",zlot_method_combination_arguments_lambda_list).
struct_opv(c,claz_method_combination,name,"CALL-NEXT-METHOD-ALLOWED",zlot_method_combination_call_next_method_allowed).
struct_opv(c,claz_method_combination,name,"CHECK-METHOD-QUALIFIERS",zlot_method_combination_check_method_qualifiers).
struct_opv(c,claz_method_combination,name,"CHECK-OPTIONS",zlot_method_combination_check_options).
struct_opv(c,claz_method_combination,name,"DECLARATIONS",zlot_method_combination_declarations).
struct_opv(c,claz_method_combination,name,"DOCUMENTATION",zlot_method_combination_documentation).
struct_opv(c,claz_method_combination,name,"EXPANDER",zlot_method_combination_expander).
struct_opv(c,claz_method_combination,name,"IDENTITY-WITH-ONE-ARGUMENT",zlot_method_combination_identity_with_one_argument).
struct_opv(c,claz_method_combination,name,"LONG-EXPANDER",zlot_method_combination_long_expander).
struct_opv(c,claz_method_combination,name,"NAME",zlot_method_combination_name).
struct_opv(c,claz_method_combination,name,"OPERATOR",zlot_method_combination_operator).
struct_opv(c,claz_method_combination,name,"OPTIONS",zlot_method_combination_options).
struct_opv(c,claz_method_combination,name,"QUALIFIERS",zlot_method_combination_qualifiers).
struct_opv(c,claz_method_combination,slot,arguments_lambda_list,zlot_method_combination_arguments_lambda_list).
struct_opv(c,claz_method_combination,slot,call_next_method_allowed,zlot_method_combination_call_next_method_allowed).
struct_opv(c,claz_method_combination,slot,check_method_qualifiers,zlot_method_combination_check_method_qualifiers).
struct_opv(c,claz_method_combination,slot,check_options,zlot_method_combination_check_options).
struct_opv(c,claz_method_combination,slot,declarations,zlot_method_combination_declarations).
struct_opv(c,claz_method_combination,slot,documentation,zlot_method_combination_documentation).
struct_opv(c,claz_method_combination,slot,expander,zlot_method_combination_expander).
struct_opv(c,claz_method_combination,slot,identity_with_one_argument,zlot_method_combination_identity_with_one_argument).
struct_opv(c,claz_method_combination,slot,long_expander,zlot_method_combination_long_expander).
struct_opv(c,claz_method_combination,slot,name,zlot_method_combination_name).
struct_opv(c,claz_method_combination,slot,operator,zlot_method_combination_operator).
struct_opv(c,claz_method_combination,slot,options,zlot_method_combination_options).
struct_opv(c,claz_method_combination,slot,qualifiers,zlot_method_combination_qualifiers).
struct_opv(c,claz_method_combination,subtypep,claz_metaobject).
struct_opv(c,claz_method_combination,super_priority,[claz_metaobject,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(c,claz_method_combination,super_priority,[claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(c,claz_slot_class,classname,"SLOT-CLASS").
struct_opv(c,claz_slot_class,classof,claz_built_in_class).
struct_opv(c,claz_slot_class,name,"DEFAULT-INITARGS",zlot_slot_class_default_initargs).
struct_opv(c,claz_slot_class,name,"DIRECT-DEFAULT-INITARGS",zlot_slot_class_direct_default_initargs).
struct_opv(c,claz_slot_class,name,"DIRECT-SLOT-DEFINITIONS",zlot_slot_class_direct_slot_definitions).
struct_opv(c,claz_slot_class,name,"DIRECT-SLOTS",zlot_slot_class_direct_slots).
struct_opv(c,claz_slot_class,name,"SLOT-DEFINITIONS",zlot_slot_class_slot_definitions).
struct_opv(c,claz_slot_class,name,"SLOTS",zlot_slot_class_slots).
struct_opv(c,claz_slot_class,returns,claz_list,zlot_slot_class_default_initargs).
struct_opv(c,claz_slot_class,returns,claz_list,zlot_slot_class_direct_default_initargs).
struct_opv(c,claz_slot_class,returns,claz_list,zlot_slot_class_direct_slot_definitions).
struct_opv(c,claz_slot_class,returns,claz_list,zlot_slot_class_slot_definitions).
struct_opv(c,claz_slot_class,slot,default_initargs,zlot_slot_class_default_initargs).
struct_opv(c,claz_slot_class,slot,direct_default_initargs,zlot_slot_class_direct_default_initargs).
struct_opv(c,claz_slot_class,slot,direct_slot_definitions,zlot_slot_class_direct_slot_definitions).
struct_opv(c,claz_slot_class,slot,direct_slots,zlot_slot_class_direct_slots).
struct_opv(c,claz_slot_class,slot,slot_definitions,zlot_slot_class_slot_definitions).
struct_opv(c,claz_slot_class,slot,slots,zlot_slot_class_slots).
struct_opv(c,claz_slot_class,subtypep,claz_lisp_class).
struct_opv(c,claz_slot_class,subtypep,claz_pcl_class).
struct_opv(c,claz_slot_class,super_priority,[claz_pcl_class,claz_class,claz_dependent_update_mixin,claz_plist_mixin,claz_definition_source_mixin,claz_standard_specializer,claz_specializer,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(c,claz_slot_definition,classname,"SLOT-DEFINITION").
struct_opv(c,claz_slot_definition,classof,claz_built_in_class).
struct_opv(c,claz_slot_definition,name,"ALLOCATION",zlot_slot_definition_allocation).
struct_opv(c,claz_slot_definition,name,"CLASS",zlot_slot_definition_class).
struct_opv(c,claz_slot_definition,name,"DOCUMENTATION",zlot_slot_definition_documentation).
struct_opv(c,claz_slot_definition,name,"INHERITABLE-DOC",zlot_slot_definition_inheritable_doc).
struct_opv(c,claz_slot_definition,name,"INHERITABLE-INITER",zlot_slot_definition_inheritable_initer).
struct_opv(c,claz_slot_definition,name,"INITARGS",zlot_slot_definition_initargs).
struct_opv(c,claz_slot_definition,name,"INITFORM",zlot_slot_definition_initform).
struct_opv(c,claz_slot_definition,name,"INITFUNCTION",zlot_slot_definition_initfunction).
struct_opv(c,claz_slot_definition,name,"NAME",zlot_slot_definition_name).
struct_opv(c,claz_slot_definition,name,"SOURCE",zlot_slot_definition_source).
struct_opv(c,claz_slot_definition,name,"TYPE",zlot_slot_definition_type).
struct_opv(c,claz_slot_definition,slot,allocation,zlot_slot_definition_allocation).
struct_opv(c,claz_slot_definition,slot,class,zlot_slot_definition_class).
struct_opv(c,claz_slot_definition,slot,documentation,zlot_slot_definition_documentation).
struct_opv(c,claz_slot_definition,slot,inheritable_doc,zlot_slot_definition_inheritable_doc).
struct_opv(c,claz_slot_definition,slot,inheritable_initer,zlot_slot_definition_inheritable_initer).
struct_opv(c,claz_slot_definition,slot,initargs,zlot_slot_definition_initargs).
struct_opv(c,claz_slot_definition,slot,initform,zlot_slot_definition_initform).
struct_opv(c,claz_slot_definition,slot,initfunction,zlot_slot_definition_initfunction).
struct_opv(c,claz_slot_definition,slot,name,zlot_slot_definition_name).
struct_opv(c,claz_slot_definition,slot,source,zlot_slot_definition_source).
struct_opv(c,claz_slot_definition,slot,type,zlot_slot_definition_type).
struct_opv(c,claz_slot_definition,subtypep,claz_metaobject).
struct_opv(c,claz_slot_definition,subtypep,claz_standard_object).
struct_opv(c,claz_slot_definition,super_priority,[claz_metaobject,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(c,claz_slot_definition,super_priority,[claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(c,claz_slot_definition_class,classname,"SLOT-DEFINITION-CLASS").
struct_opv(c,claz_slot_definition_class,classof,claz_built_in_class).
struct_opv(c,claz_slot_definition_class,subtypep,claz_standard_class).
struct_opv(c,claz_slot_defstruct_description,classname,"DEFSTRUCT-SLOT-DESCRIPTION").
struct_opv(c,claz_slot_defstruct_description,classof,claz_built_in_class).
struct_opv(c,claz_slot_defstruct_description,name,"ACCESSOR-NAME",zlot_defstruct_slot_description_accessor_name).
struct_opv(c,claz_slot_defstruct_description,name,"DEFAULT",zlot_defstruct_slot_description_default).
struct_opv(c,claz_slot_defstruct_description,name,"INDEX",zlot_defstruct_slot_description_index).
struct_opv(c,claz_slot_defstruct_description,name,"NAME",zlot_defstruct_slot_description_name).
struct_opv(c,claz_slot_defstruct_description,name,"RAW-TYPE",zlot_defstruct_slot_description_raw_type).
struct_opv(c,claz_slot_defstruct_description,name,"READ-ONLY",zlot_defstruct_slot_description_read_only).
struct_opv(c,claz_slot_defstruct_description,name,"SAFE-P",zlot_defstruct_slot_description_safe_p).
struct_opv(c,claz_slot_defstruct_description,name,"TYPE",zlot_defstruct_slot_description_type).
struct_opv(c,claz_slot_defstruct_description,slot,accessor_name,zlot_defstruct_slot_description_accessor_name).
struct_opv(c,claz_slot_defstruct_description,slot,default,zlot_defstruct_slot_description_default).
struct_opv(c,claz_slot_defstruct_description,slot,index,zlot_defstruct_slot_description_index).
struct_opv(c,claz_slot_defstruct_description,slot,name,zlot_defstruct_slot_description_name).
struct_opv(c,claz_slot_defstruct_description,slot,raw_type,zlot_defstruct_slot_description_raw_type).
struct_opv(c,claz_slot_defstruct_description,slot,read_only,zlot_defstruct_slot_description_read_only).
struct_opv(c,claz_slot_defstruct_description,slot,safe_p,zlot_defstruct_slot_description_safe_p).
struct_opv(c,claz_slot_defstruct_description,slot,type,zlot_defstruct_slot_description_type).
struct_opv(c,claz_slot_defstruct_description,subtypep,claz_structure_c33_object).
struct_opv(c,claz_slot_defstruct_description,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(c,claz_slot_info,classname,"SLOT-INFO").
struct_opv(c,claz_slot_info,classof,claz_built_in_class).
struct_opv(c,claz_slot_info,name,"BOUNDP",zlot_slot_info_boundp).
struct_opv(c,claz_slot_info,name,"READER",zlot_slot_info_reader).
struct_opv(c,claz_slot_info,name,"TYPECHECK",zlot_slot_info_typecheck).
struct_opv(c,claz_slot_info,name,"WRITER",zlot_slot_info_writer).
struct_opv(c,claz_slot_info,slot,boundp,zlot_slot_info_boundp).
struct_opv(c,claz_slot_info,slot,reader,zlot_slot_info_reader).
struct_opv(c,claz_slot_info,slot,typecheck,zlot_slot_info_typecheck).
struct_opv(c,claz_slot_info,slot,writer,zlot_slot_info_writer).
struct_opv(c,claz_slot_info,subtypep,claz_structure_object).
struct_opv(c,claz_slot_info,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(c,claz_slot_object,classname,"SLOT-OBJECT").
struct_opv(c,claz_slot_object,classof,claz_built_in_class).
struct_opv(c,claz_slot_object,subtypep,claz_t).
struct_opv(c,claz_slot_object,super_priority,[claz_t]).
struct_opv(c,claz_slotted_class,classname,"SLOTTED-CLASS").
struct_opv(c,claz_slotted_class,classof,claz_built_in_class).
struct_opv(c,claz_slotted_class,name,"DIRECT-ACCESSORS",zlot_slotted_class_direct_accessors).
struct_opv(c,claz_slotted_class,name,"GENERIC-ACCESSORS",zlot_slotted_class_generic_accessors).
struct_opv(c,claz_slotted_class,name,"INSTANCE-SIZE",zlot_slotted_class_instance_size).
struct_opv(c,claz_slotted_class,name,"SUBCLASS-OF-STABLEHASH-P",zlot_slotted_class_subclass_of_stablehash_p).
struct_opv(c,claz_slotted_class,name,"VALID-INITARGS-FROM-SLOTS",zlot_slotted_class_valid_initargs_from_slots).
struct_opv(c,claz_slotted_class,slot,direct_accessors,zlot_slotted_class_direct_accessors).
struct_opv(c,claz_slotted_class,slot,generic_accessors,zlot_slotted_class_generic_accessors).
struct_opv(c,claz_slotted_class,slot,instance_size,zlot_slotted_class_instance_size).
struct_opv(c,claz_slotted_class,slot,subclass_of_stablehash_p,zlot_slotted_class_subclass_of_stablehash_p).
struct_opv(c,claz_slotted_class,slot,valid_initargs_from_slots,zlot_slotted_class_valid_initargs_from_slots).
struct_opv(c,claz_slotted_class,subtypep,claz_class).
struct_opv(c,claz_slotted_class,super_priority,[claz_class,claz_potential_class,claz_specializer,claz_super_class,claz_standard_stablehash,claz_metaobject,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(c,claz_standard_accessor_method,classname,"STANDARD-ACCESSOR-METHOD").
struct_opv(c,claz_standard_accessor_method,classof,claz_built_in_class).
struct_opv(c,claz_standard_accessor_method,name,"SLOT-DEFINITION",zlot_standard_accessor_method_slot_definition).
struct_opv(c,claz_standard_accessor_method,slot,slot_definition,zlot_standard_accessor_method_slot_definition).
struct_opv(c,claz_standard_accessor_method,subtypep,claz_accessor_method).
struct_opv(c,claz_standard_accessor_method,subtypep,claz_standard_method).
struct_opv(c,claz_standard_accessor_method,super_priority,[claz_accessor_method,claz_standard_method,claz_plist_mixin,claz_definition_source_mixin,claz_method,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(c,claz_standard_accessor_method,super_priority,[claz_standard_method,claz_method,claz_standard_stablehash,claz_metaobject,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(c,claz_standard_boundp_method,classname,"STANDARD-BOUNDP-METHOD").
struct_opv(c,claz_standard_boundp_method,classof,claz_built_in_class).
struct_opv(c,claz_standard_boundp_method,subtypep,claz_standard_accessor_method).
struct_opv(c,claz_standard_boundp_method,super_priority,[claz_standard_accessor_method,claz_accessor_method,claz_standard_method,claz_plist_mixin,claz_definition_source_mixin,claz_method,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(c,claz_standard_class,classname,"STANDARD-CLASS").
struct_opv(c,claz_standard_class,classof,claz_built_in_class).
struct_opv(c,claz_standard_class,subtypep,claz_semi_standard_class).
struct_opv(c,claz_standard_class,subtypep,claz_slot_class).
struct_opv(c,claz_standard_class,subtypep,claz_std_class).
struct_opv(c,claz_standard_class,super_priority,[claz_semi_standard_class,claz_slotted_class,claz_class,claz_potential_class,claz_specializer,claz_super_class,claz_standard_stablehash,claz_metaobject,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(c,claz_standard_class,super_priority,[claz_std_class,claz_slot_class,claz_pcl_class,claz_class,claz_dependent_update_mixin,claz_plist_mixin,claz_definition_source_mixin,claz_standard_specializer,claz_specializer,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(c,claz_standard_classoid,classname,"STANDARD-CLASSOID").
struct_opv(c,claz_standard_classoid,classof,claz_built_in_class).
struct_opv(c,claz_standard_classoid,subtypep,claz_classoid).
struct_opv(c,claz_standard_classoid,super_priority,[claz_classoid,claz_ctype,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(c,claz_standard_direct_slot_definition,classname,"STANDARD-DIRECT-SLOT-DEFINITION").
struct_opv(c,claz_standard_direct_slot_definition,classof,claz_built_in_class).
struct_opv(c,claz_standard_direct_slot_definition,subtypep,claz_direct_slot_definition).
struct_opv(c,claz_standard_direct_slot_definition,subtypep,claz_standard_slot_definition).
struct_opv(c,claz_standard_direct_slot_definition,super_priority,[claz_direct_slot_definition,claz_standard_slot_definition,claz_slot_definition,claz_metaobject,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(c,claz_standard_direct_slot_definition,super_priority,[claz_standard_slot_definition,claz_direct_slot_definition,claz_slot_definition,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(c,claz_standard_effective_slot_definition,classname,"STANDARD-EFFECTIVE-SLOT-DEFINITION").
struct_opv(c,claz_standard_effective_slot_definition,classof,claz_built_in_class).
struct_opv(c,claz_standard_effective_slot_definition,name,"LOCATION",zlot_standard_effective_slot_definition_location).
struct_opv(c,claz_standard_effective_slot_definition,slot,location,zlot_standard_effective_slot_definition_location).
struct_opv(c,claz_standard_effective_slot_definition,subtypep,claz_effective_slot_definition).
struct_opv(c,claz_standard_effective_slot_definition,subtypep,claz_standard_slot_definition).
struct_opv(c,claz_standard_effective_slot_definition,super_priority,[claz_effective_slot_definition,claz_standard_slot_definition,claz_slot_definition,claz_metaobject,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(c,claz_standard_effective_slot_definition,super_priority,[claz_standard_slot_definition,claz_effective_slot_definition,claz_slot_definition,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(c,claz_standard_funcallable_instance,classname,"STANDARD-FUNCALLABLE-INSTANCE").
struct_opv(c,claz_standard_funcallable_instance,classof,claz_built_in_class).
struct_opv(c,claz_standard_funcallable_instance,name,"CLOS-SLOTS",zlot_standard_funcallable_instance_clos_slots).
struct_opv(c,claz_standard_funcallable_instance,name,"HASH-CODE",zlot_standard_funcallable_instance_hash_code).
struct_opv(c,claz_standard_funcallable_instance,slot,clos_slots,zlot_standard_funcallable_instance_clos_slots).
struct_opv(c,claz_standard_funcallable_instance,slot,hash_code,zlot_standard_funcallable_instance_hash_code).
struct_opv(c,claz_standard_funcallable_instance,subtypep,claz_function).
struct_opv(c,claz_standard_funcallable_instance,super_priority,[claz_t]).
struct_opv(c,claz_standard_generic_function,classname,"STANDARD-GENERIC-FUNCTION").
struct_opv(c,claz_standard_generic_function,classof,claz_built_in_class).
struct_opv(c,claz_standard_generic_function,name,"ARG-INFO",zlot_standard_generic_function_arg_info).
struct_opv(c,claz_standard_generic_function,name,"ARGORDER",zlot_standard_generic_function_argorder).
struct_opv(c,claz_standard_generic_function,name,"DECLARATIONS",zlot_standard_generic_function_declarations).
struct_opv(c,claz_standard_generic_function,name,"DECLSPECS",zlot_standard_generic_function_declspecs).
struct_opv(c,claz_standard_generic_function,name,"DEFAULT-METHOD-CLASS",zlot_standard_generic_function_default_method_class).
struct_opv(c,claz_standard_generic_function,name,"DFUN-STATE",zlot_standard_generic_function_dfun_state).
struct_opv(c,claz_standard_generic_function,name,"DOCUMENTATION",zlot_standard_generic_function_documentation).
struct_opv(c,claz_standard_generic_function,name,"EFFECTIVE-METHOD-CACHE",zlot_standard_generic_function_effective_method_cache).
struct_opv(c,claz_standard_generic_function,name,"INFO-NEEDS-UPDATE",zlot_standard_generic_function_info_needs_update).
struct_opv(c,claz_standard_generic_function,name,"INITIALIZED",zlot_standard_generic_function_initialized).
struct_opv(c,claz_standard_generic_function,name,"LAMBDA-LIST",zlot_standard_generic_function_lambda_list).
struct_opv(c,claz_standard_generic_function,name,"LOCK",zlot_standard_generic_function_lock).
struct_opv(c,claz_standard_generic_function,name,"METHOD-CLASS",zlot_standard_generic_function_method_class).
struct_opv(c,claz_standard_generic_function,name,"METHOD-COMBINATION",zlot_standard_generic_function_method_combination).
struct_opv(c,claz_standard_generic_function,name,"METHODS",zlot_standard_generic_function_methods).
struct_opv(c,claz_standard_generic_function,name,"NAME",zlot_standard_generic_function_name).
struct_opv(c,claz_standard_generic_function,name,"SIGNATURE",zlot_standard_generic_function_signature).
struct_opv(c,claz_standard_generic_function,slot,arg_info,zlot_standard_generic_function_arg_info).
struct_opv(c,claz_standard_generic_function,slot,argorder,zlot_standard_generic_function_argorder).
struct_opv(c,claz_standard_generic_function,slot,declarations,zlot_standard_generic_function_declarations).
struct_opv(c,claz_standard_generic_function,slot,declspecs,zlot_standard_generic_function_declspecs).
struct_opv(c,claz_standard_generic_function,slot,default_method_class,zlot_standard_generic_function_default_method_class).
struct_opv(c,claz_standard_generic_function,slot,dfun_state,zlot_standard_generic_function_dfun_state).
struct_opv(c,claz_standard_generic_function,slot,documentation,zlot_standard_generic_function_documentation).
struct_opv(c,claz_standard_generic_function,slot,effective_method_cache,zlot_standard_generic_function_effective_method_cache).
struct_opv(c,claz_standard_generic_function,slot,info_needs_update,zlot_standard_generic_function_info_needs_update).
struct_opv(c,claz_standard_generic_function,slot,initialized,zlot_standard_generic_function_initialized).
struct_opv(c,claz_standard_generic_function,slot,lambda_list,zlot_standard_generic_function_lambda_list).
struct_opv(c,claz_standard_generic_function,slot,lock,zlot_standard_generic_function_lock).
struct_opv(c,claz_standard_generic_function,slot,method_class,zlot_standard_generic_function_method_class).
struct_opv(c,claz_standard_generic_function,slot,method_combination,zlot_standard_generic_function_method_combination).
struct_opv(c,claz_standard_generic_function,slot,methods,zlot_standard_generic_function_methods).
struct_opv(c,claz_standard_generic_function,slot,name,zlot_standard_generic_function_name).
struct_opv(c,claz_standard_generic_function,slot,signature,zlot_standard_generic_function_signature).
struct_opv(c,claz_standard_generic_function,subtypep,claz_generic_function).
struct_opv(c,claz_standard_generic_function,super_priority,[claz_generic_function,claz_dependent_update_mixin,claz_plist_mixin,claz_definition_source_mixin,claz_metaobject,claz_funcallable_standard_object,claz_function,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(c,claz_standard_generic_function,super_priority,[claz_generic_function,claz_metaobject,claz_funcallable_standard_object,claz_function,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(c,claz_standard_method,classname,"STANDARD-METHOD").
struct_opv(c,claz_standard_method,classof,claz_built_in_class).
struct_opv(c,claz_standard_method,name,"DOCUMENTATION",zlot_standard_method_documentation).
struct_opv(c,claz_standard_method,name,"FAST-FUNCTION",zlot_standard_method_fast_function).
struct_opv(c,claz_standard_method,name,"FUNCTION",zlot_standard_method_function).
struct_opv(c,claz_standard_method,name,"GENERIC-FUNCTION",zlot_standard_method_generic_function).
struct_opv(c,claz_standard_method,name,"GF",zlot_standard_method_gf).
struct_opv(c,claz_standard_method,name,"LAMBDA-LIST",zlot_standard_method_lambda_list).
struct_opv(c,claz_standard_method,name,"QUALIFIERS",zlot_standard_method_qualifiers).
struct_opv(c,claz_standard_method,name,"SIGNATURE",zlot_standard_method_signature).
struct_opv(c,claz_standard_method,name,"SIMPLE-NEXT-METHOD-CALL",zlot_standard_method_simple_next_method_call).
struct_opv(c,claz_standard_method,name,"SPECIALIZERS",zlot_standard_method_specializers).
struct_opv(c,claz_standard_method,name,"WANTS-NEXT-METHOD-P",zlot_standard_method_wants_next_method_p).
struct_opv(c,claz_standard_method,slot,documentation,zlot_standard_method_documentation).
struct_opv(c,claz_standard_method,slot,fast_function,zlot_standard_method_fast_function).
struct_opv(c,claz_standard_method,slot,function,zlot_standard_method_function).
struct_opv(c,claz_standard_method,slot,generic_function,zlot_standard_method_generic_function).
struct_opv(c,claz_standard_method,slot,gf,zlot_standard_method_gf).
struct_opv(c,claz_standard_method,slot,lambda_list,zlot_standard_method_lambda_list).
struct_opv(c,claz_standard_method,slot,qualifiers,zlot_standard_method_qualifiers).
struct_opv(c,claz_standard_method,slot,signature,zlot_standard_method_signature).
struct_opv(c,claz_standard_method,slot,simple_next_method_call,zlot_standard_method_simple_next_method_call).
struct_opv(c,claz_standard_method,slot,specializers,zlot_standard_method_specializers).
struct_opv(c,claz_standard_method,slot,wants_next_method_p,zlot_standard_method_wants_next_method_p).
struct_opv(c,claz_standard_method,subtypep,claz_definition_source_mixin).
struct_opv(c,claz_standard_method,subtypep,claz_method).
struct_opv(c,claz_standard_method,subtypep,claz_plist_mixin).
struct_opv(c,claz_standard_method,super_priority,[claz_method,claz_standard_stablehash,claz_metaobject,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(c,claz_standard_method,super_priority,[claz_plist_mixin,claz_definition_source_mixin,claz_method,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(c,claz_standard_method_combination,classname,"STANDARD-METHOD-COMBINATION").
struct_opv(c,claz_standard_method_combination,classof,claz_built_in_class).
struct_opv(c,claz_standard_method_combination,name,"OPTIONS",zlot_standard_method_combination_options).
struct_opv(c,claz_standard_method_combination,name,"TYPE-NAME",zlot_standard_method_combination_type_name).
struct_opv(c,claz_standard_method_combination,slot,options,zlot_standard_method_combination_options).
struct_opv(c,claz_standard_method_combination,slot,type_name,zlot_standard_method_combination_type_name).
struct_opv(c,claz_standard_method_combination,subtypep,claz_definition_source_mixin).
struct_opv(c,claz_standard_method_combination,subtypep,claz_method_combination).
struct_opv(c,claz_standard_method_combination,super_priority,[claz_definition_source_mixin,claz_method_combination,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(c,claz_standard_object,classname,"STANDARD-OBJECT").
struct_opv(c,claz_standard_object,classof,claz_built_in_class).
struct_opv(c,claz_standard_object,name,"LAYOUT",zlot_standard_object_layout).
struct_opv(c,claz_standard_object,name,"SLOTS",zlot_standard_object_slots).
struct_opv(c,claz_standard_object,returns,claz_layout,zlot_standard_object_layout).
struct_opv(c,claz_standard_object,returns,claz_list,zlot_standard_object_slots).
struct_opv(c,claz_standard_object,slot,layout,zlot_standard_object_layout).
struct_opv(c,claz_standard_object,slot,slots,zlot_standard_object_slots).
struct_opv(c,claz_standard_object,subtypep,claz_slot_object).
struct_opv(c,claz_standard_object,subtypep,claz_t).
struct_opv(c,claz_standard_object,super_priority,[claz_slot_object,claz_t]).
struct_opv(c,claz_standard_object,super_priority,[claz_t]).
struct_opv(c,claz_standard_reader_method,classname,"STANDARD-READER-METHOD").
struct_opv(c,claz_standard_reader_method,classof,claz_built_in_class).
struct_opv(c,claz_standard_reader_method,subtypep,claz_standard_accessor_method).
struct_opv(c,claz_standard_reader_method,super_priority,[claz_standard_accessor_method,claz_accessor_method,claz_standard_method,claz_plist_mixin,claz_definition_source_mixin,claz_method,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(c,claz_standard_reader_method,super_priority,[claz_standard_accessor_method,claz_standard_method,claz_method,claz_standard_stablehash,claz_metaobject,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(c,claz_standard_slot_definition,classname,"STANDARD-SLOT-DEFINITION").
struct_opv(c,claz_standard_slot_definition,classof,claz_built_in_class).
struct_opv(c,claz_standard_slot_definition,name,"ALLOCATION",zlot_standard_slot_definition_allocation).
struct_opv(c,claz_standard_slot_definition,name,"ALLOCATION-CLASS",zlot_standard_slot_definition_allocation_class).
struct_opv(c,claz_standard_slot_definition,slot,allocation,zlot_standard_slot_definition_allocation).
struct_opv(c,claz_standard_slot_definition,slot,allocation_class,zlot_standard_slot_definition_allocation_class).
struct_opv(c,claz_standard_slot_definition,subtypep,claz_slot_definition).
struct_opv(c,claz_standard_slot_definition,super_priority,[claz_slot_definition,claz_metaobject,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(c,claz_standard_slot_definition,super_priority,[claz_slot_definition,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(c,claz_standard_specializer,classname,"STANDARD-SPECIALIZER").
struct_opv(c,claz_standard_specializer,classof,claz_built_in_class).
struct_opv(c,claz_standard_specializer,subtypep,claz_specializer).
struct_opv(c,claz_standard_specializer,super_priority,[claz_specializer,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(c,claz_standard_stablehash,classname,"STANDARD-STABLEHASH").
struct_opv(c,claz_standard_stablehash,classof,claz_built_in_class).
struct_opv(c,claz_standard_stablehash,name,"HASHCODE",zlot_standard_stablehash_hashcode).
struct_opv(c,claz_standard_stablehash,slot,hashcode,zlot_standard_stablehash_hashcode).
struct_opv(c,claz_standard_stablehash,subtypep,claz_standard_object).
struct_opv(c,claz_standard_stablehash,super_priority,[claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(c,claz_standard_writer_method,classname,"STANDARD-WRITER-METHOD").
struct_opv(c,claz_standard_writer_method,classof,claz_built_in_class).
struct_opv(c,claz_standard_writer_method,subtypep,claz_standard_accessor_method).
struct_opv(c,claz_standard_writer_method,super_priority,[claz_standard_accessor_method,claz_accessor_method,claz_standard_method,claz_plist_mixin,claz_definition_source_mixin,claz_method,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(c,claz_standard_writer_method,super_priority,[claz_standard_accessor_method,claz_standard_method,claz_method,claz_standard_stablehash,claz_metaobject,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(c,claz_static_classoid,classname,"STATIC-CLASSOID").
struct_opv(c,claz_static_classoid,classof,claz_built_in_class).
struct_opv(c,claz_static_classoid,subtypep,claz_classoid).
struct_opv(c,claz_static_classoid,super_priority,[claz_classoid,claz_ctype,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(c,claz_std_class,classname,"STD-CLASS").
struct_opv(c,claz_std_class,classof,claz_built_in_class).
struct_opv(c,claz_std_class,subtypep,claz_slot_class).
struct_opv(c,claz_std_class,super_priority,[claz_slot_class,claz_pcl_class,claz_class,claz_dependent_update_mixin,claz_plist_mixin,claz_definition_source_mixin,claz_standard_specializer,claz_specializer,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(c,claz_structure_c33_object,classname,"STRUCTURE-C33-OBJECT").
struct_opv(c,claz_structure_c33_object,classof,claz_built_in_class).
struct_opv(c,claz_structure_c33_object,subtypep,claz_structure_object).
struct_opv(c,claz_structure_c33_object,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(c,claz_structure_class,classname,"STRUCTURE-CLASS").
struct_opv(c,claz_structure_class,classof,claz_built_in_class).
struct_opv(c,claz_structure_class,name,"BOA-CONSTRUCTORS",zlot_structure_class_boa_constructors).
struct_opv(c,claz_structure_class,name,"COPIER",zlot_structure_class_copier).
struct_opv(c,claz_structure_class,name,"DEFSTRUCT-CONSTRUCTOR",zlot_structure_class_defstruct_constructor).
struct_opv(c,claz_structure_class,name,"DEFSTRUCT-FORM",zlot_structure_class_defstruct_form).
struct_opv(c,claz_structure_class,name,"FROM-DEFCLASS-P",zlot_structure_class_from_defclass_p).
struct_opv(c,claz_structure_class,name,"KCONSTRUCTOR",zlot_structure_class_kconstructor).
struct_opv(c,claz_structure_class,name,"NAMES",zlot_structure_class_names).
struct_opv(c,claz_structure_class,name,"PREDICATE",zlot_structure_class_predicate).
struct_opv(c,claz_structure_class,name,"PROTOTYPE",zlot_structure_class_prototype).
struct_opv(c,claz_structure_class,slot,boa_constructors,zlot_structure_class_boa_constructors).
struct_opv(c,claz_structure_class,slot,copier,zlot_structure_class_copier).
struct_opv(c,claz_structure_class,slot,defstruct_constructor,zlot_structure_class_defstruct_constructor).
struct_opv(c,claz_structure_class,slot,defstruct_form,zlot_structure_class_defstruct_form).
struct_opv(c,claz_structure_class,slot,from_defclass_p,zlot_structure_class_from_defclass_p).
struct_opv(c,claz_structure_class,slot,kconstructor,zlot_structure_class_kconstructor).
struct_opv(c,claz_structure_class,slot,names,zlot_structure_class_names).
struct_opv(c,claz_structure_class,slot,predicate,zlot_structure_class_predicate).
struct_opv(c,claz_structure_class,slot,prototype,zlot_structure_class_prototype).
struct_opv(c,claz_structure_class,subtypep,claz_slot_class).
struct_opv(c,claz_structure_class,subtypep,claz_slotted_class).
struct_opv(c,claz_structure_class,super_priority,[claz_slot_class,claz_pcl_class,claz_class,claz_dependent_update_mixin,claz_plist_mixin,claz_definition_source_mixin,claz_standard_specializer,claz_specializer,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(c,claz_structure_class,super_priority,[claz_slotted_class,claz_class,claz_potential_class,claz_specializer,claz_super_class,claz_standard_stablehash,claz_metaobject,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(c,claz_structure_classoid,classname,"STRUCTURE-CLASSOID").
struct_opv(c,claz_structure_classoid,classof,claz_built_in_class).
struct_opv(c,claz_structure_classoid,subtypep,claz_classoid).
struct_opv(c,claz_structure_classoid,super_priority,[claz_classoid,claz_ctype,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(c,claz_structure_direct_slot_definition,classname,"STRUCTURE-DIRECT-SLOT-DEFINITION").
struct_opv(c,claz_structure_direct_slot_definition,classof,claz_built_in_class).
struct_opv(c,claz_structure_direct_slot_definition,subtypep,claz_direct_slot_definition).
struct_opv(c,claz_structure_direct_slot_definition,subtypep,claz_structure_slot_definition).
struct_opv(c,claz_structure_direct_slot_definition,super_priority,[claz_direct_slot_definition,claz_slot_definition,claz_metaobject,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(c,claz_structure_direct_slot_definition,super_priority,[claz_structure_slot_definition,claz_direct_slot_definition,claz_slot_definition,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(c,claz_structure_effective_slot_definition,classname,"STRUCTURE-EFFECTIVE-SLOT-DEFINITION").
struct_opv(c,claz_structure_effective_slot_definition,classof,claz_built_in_class).
struct_opv(c,claz_structure_effective_slot_definition,name,"EFM-SBUC",zlot_structure_effective_slot_definition_efm_sbuc).
struct_opv(c,claz_structure_effective_slot_definition,name,"EFM-SMUC",zlot_structure_effective_slot_definition_efm_smuc).
struct_opv(c,claz_structure_effective_slot_definition,name,"EFM-SSVUC",zlot_structure_effective_slot_definition_efm_ssvuc).
struct_opv(c,claz_structure_effective_slot_definition,name,"EFM-SVUC",zlot_structure_effective_slot_definition_efm_svuc).
struct_opv(c,claz_structure_effective_slot_definition,name,"READONLY",zlot_structure_effective_slot_definition_readonly).
struct_opv(c,claz_structure_effective_slot_definition,slot,efm_sbuc,zlot_structure_effective_slot_definition_efm_sbuc).
struct_opv(c,claz_structure_effective_slot_definition,slot,efm_smuc,zlot_structure_effective_slot_definition_efm_smuc).
struct_opv(c,claz_structure_effective_slot_definition,slot,efm_ssvuc,zlot_structure_effective_slot_definition_efm_ssvuc).
struct_opv(c,claz_structure_effective_slot_definition,slot,efm_svuc,zlot_structure_effective_slot_definition_efm_svuc).
struct_opv(c,claz_structure_effective_slot_definition,slot,readonly,zlot_structure_effective_slot_definition_readonly).
struct_opv(c,claz_structure_effective_slot_definition,subtypep,claz_effective_slot_definition).
struct_opv(c,claz_structure_effective_slot_definition,subtypep,claz_structure_slot_definition).
struct_opv(c,claz_structure_effective_slot_definition,super_priority,[claz_effective_slot_definition,claz_slot_definition,claz_metaobject,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(c,claz_structure_effective_slot_definition,super_priority,[claz_structure_slot_definition,claz_effective_slot_definition,claz_slot_definition,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(c,claz_structure_initarg_not_keyword,classname,"STRUCTURE-INITARG-NOT-KEYWORD").
struct_opv(c,claz_structure_initarg_not_keyword,classof,claz_built_in_class).
struct_opv(c,claz_structure_object,classname,"STRUCTURE-OBJECT").
struct_opv(c,claz_structure_object,classof,claz_built_in_class).
struct_opv(c,claz_structure_object,name,"ALTERNATE-METACLASS",zlot_structure_object_alternate_metaclass).
struct_opv(c,claz_structure_object,name,"CONC-NAME",zlot_structure_object_conc_name).
struct_opv(c,claz_structure_object,name,"CONSTRUCTORS",zlot_structure_object_constructors).
struct_opv(c,claz_structure_object,name,"COPIER-NAME",zlot_structure_object_copier_name).
struct_opv(c,claz_structure_object,name,"DOC",zlot_structure_object_doc).
struct_opv(c,claz_structure_object,name,"ELEMENT-TYPE",zlot_structure_object_element_type).
struct_opv(c,claz_structure_object,name,"INCLUDE",zlot_structure_object_include).
struct_opv(c,claz_structure_object,name,"INHERITED-ACCESSOR-ALIST",zlot_structure_object_inherited_accessor_alist).
struct_opv(c,claz_structure_object,name,"LENGTH",zlot_structure_object_length).
struct_opv(c,claz_structure_object,name,"NAME",zlot_structure_object_name).
struct_opv(c,claz_structure_object,name,"NAMED",zlot_structure_object_named).
struct_opv(c,claz_structure_object,name,"NULL-LEXENV-P",zlot_structure_object_null_lexenv_p).
struct_opv(c,claz_structure_object,name,"OFFSET",zlot_structure_object_offset).
struct_opv(c,claz_structure_object,name,"PREDICATE",zlot_structure_object_predicate).
struct_opv(c,claz_structure_object,name,"PRINT-OPTION",zlot_structure_object_print_option).
struct_opv(c,claz_structure_object,name,"PRINTER-FNAME",zlot_structure_object_printer_fname).
struct_opv(c,claz_structure_object,name,"PURE",zlot_structure_object_pure).
struct_opv(c,claz_structure_object,name,"SLOTS",zlot_structure_object_slots).
struct_opv(c,claz_structure_object,name,"STRUCTURE-CLASS",zlot_structure_object_structure_class).
struct_opv(c,claz_structure_object,name,"TYPE",zlot_structure_object_type).
struct_opv(c,claz_structure_object,readonly,t,zlot_structure_object_slots).
struct_opv(c,claz_structure_object,readonly,t,zlot_structure_object_structure_class).
struct_opv(c,claz_structure_object,returns,claz_list,zlot_structure_object_slots).
struct_opv(c,claz_structure_object,returns,claz_structure_class,zlot_structure_object_structure_class).
struct_opv(c,claz_structure_object,slot,alternate_metaclass,zlot_structure_object_alternate_metaclass).
struct_opv(c,claz_structure_object,slot,conc_name,zlot_structure_object_conc_name).
struct_opv(c,claz_structure_object,slot,constructors,zlot_structure_object_constructors).
struct_opv(c,claz_structure_object,slot,copier_name,zlot_structure_object_copier_name).
struct_opv(c,claz_structure_object,slot,doc,zlot_structure_object_doc).
struct_opv(c,claz_structure_object,slot,element_type,zlot_structure_object_element_type).
struct_opv(c,claz_structure_object,slot,include,zlot_structure_object_include).
struct_opv(c,claz_structure_object,slot,inherited_accessor_alist,zlot_structure_object_inherited_accessor_alist).
struct_opv(c,claz_structure_object,slot,length,zlot_structure_object_length).
struct_opv(c,claz_structure_object,slot,name,zlot_structure_object_name).
struct_opv(c,claz_structure_object,slot,named,zlot_structure_object_named).
struct_opv(c,claz_structure_object,slot,null_lexenv_p,zlot_structure_object_null_lexenv_p).
struct_opv(c,claz_structure_object,slot,offset,zlot_structure_object_offset).
struct_opv(c,claz_structure_object,slot,predicate,zlot_structure_object_predicate).
struct_opv(c,claz_structure_object,slot,print_option,zlot_structure_object_print_option).
struct_opv(c,claz_structure_object,slot,printer_fname,zlot_structure_object_printer_fname).
struct_opv(c,claz_structure_object,slot,pure,zlot_structure_object_pure).
struct_opv(c,claz_structure_object,slot,slots,zlot_structure_object_slots).
struct_opv(c,claz_structure_object,slot,structure_class,zlot_structure_object_structure_class).
struct_opv(c,claz_structure_object,slot,type,zlot_structure_object_type).
struct_opv(c,claz_structure_object,subtypep,claz_slot_object).
struct_opv(c,claz_structure_object,subtypep,claz_structure_c33_object).
struct_opv(c,claz_structure_object,subtypep,claz_t).
struct_opv(c,claz_structure_object,super_priority,[claz_slot_object,claz_t]).
struct_opv(c,claz_structure_object,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(c,claz_structure_object,super_priority,[claz_t]).
struct_opv(c,claz_structure_slot_definition,classname,"STRUCTURE-SLOT-DEFINITION").
struct_opv(c,claz_structure_slot_definition,classof,claz_built_in_class).
struct_opv(c,claz_structure_slot_definition,name,"DEFSTRUCT-ACCESSOR-SYMBOL",zlot_structure_slot_definition_defstruct_accessor_symbol).
struct_opv(c,claz_structure_slot_definition,name,"INTERNAL-READER-FUNCTION",zlot_structure_slot_definition_internal_reader_function).
struct_opv(c,claz_structure_slot_definition,name,"INTERNAL-WRITER-FUNCTION",zlot_structure_slot_definition_internal_writer_function).
struct_opv(c,claz_structure_slot_definition,slot,defstruct_accessor_symbol,zlot_structure_slot_definition_defstruct_accessor_symbol).
struct_opv(c,claz_structure_slot_definition,slot,internal_reader_function,zlot_structure_slot_definition_internal_reader_function).
struct_opv(c,claz_structure_slot_definition,slot,internal_writer_function,zlot_structure_slot_definition_internal_writer_function).
struct_opv(c,claz_structure_slot_definition,subtypep,claz_slot_definition).
struct_opv(c,claz_structure_slot_definition,super_priority,[claz_slot_definition,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(c,claz_structure_stablehash,classname,"STRUCTURE-STABLEHASH").
struct_opv(c,claz_structure_stablehash,classof,claz_built_in_class).
struct_opv(c,claz_structure_stablehash,name,"HASHCODE",zlot_structure_stablehash_hashcode).
struct_opv(c,claz_structure_stablehash,slot,hashcode,zlot_structure_stablehash_hashcode).
struct_opv(c,claz_structure_stablehash,subtypep,claz_structure_object).
struct_opv(c,claz_structure_stablehash,super_priority,[claz_structure_object,claz_t]).
struct_opv(c,claz_super_class,classname,"SUPER-CLASS").
struct_opv(c,claz_super_class,classof,claz_built_in_class).
struct_opv(c,claz_super_class,name,"CLASSNAME",zlot_super_class_classname).
struct_opv(c,claz_super_class,name,"DIRECT-SUBCLASSES",zlot_super_class_direct_subclasses).
struct_opv(c,claz_super_class,slot,classname,zlot_super_class_classname).
struct_opv(c,claz_super_class,slot,direct_subclasses,zlot_super_class_direct_subclasses).
struct_opv(c,claz_super_class,subtypep,claz_metaobject).
struct_opv(c,claz_super_class,subtypep,claz_standard_stablehash).
struct_opv(c,claz_super_class,super_priority,[claz_standard_stablehash,claz_metaobject,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(c,claz_system_class,classname,"SYSTEM-CLASS").
struct_opv(c,claz_system_class,classof,claz_built_in_class).
struct_opv(c,claz_system_class,subtypep,claz_pcl_class).
struct_opv(c,claz_system_class,super_priority,[claz_pcl_class,claz_class,claz_dependent_update_mixin,claz_plist_mixin,claz_definition_source_mixin,claz_standard_specializer,claz_specializer,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(e,a,claz_simple_clos_warning,subtypep,claz_simple_condition).
struct_opv(e,a,claz_simple_clos_warning,super_priority,[claz_simple_condition,claz_clos_warning,claz_warning,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,a,claz_simple_gf_already_called_warning,subtypep,claz_simple_condition).
struct_opv(e,a,claz_simple_gf_already_called_warning,super_priority,[claz_simple_condition,claz_gf_already_called_warning,claz_clos_warning,claz_warning,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,a,claz_simple_gf_replacing_method_warning,subtypep,claz_simple_condition).
struct_opv(e,a,claz_simple_gf_replacing_method_warning,super_priority,[claz_simple_condition,claz_gf_replacing_method_warning,claz_clos_warning,claz_warning,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,a,claz_simple_reference_warning,subtypep,claz_reference_condition).
struct_opv(e,a,claz_simple_reference_warning,super_priority,[claz_reference_condition,claz_simple_warning,claz_simple_condition,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,a,claz_simple_style_warning,subtypep,claz_simple_condition).
struct_opv(e,a,claz_simple_style_warning,super_priority,[claz_simple_condition,claz_style_warning,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,a,claz_simple_style_warning,super_priority,[claz_simple_condition,claz_style_warning,claz_warning,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,a,claz_simple_warning,subtypep,claz_simple_condition).
struct_opv(e,a,claz_simple_warning,super_priority,[claz_simple_condition,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,a,claz_simple_warning,super_priority,[claz_simple_condition,claz_warning,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_abort_failure,subtypep,claz_control_error).
struct_opv(e,claz_abort_failure,super_priority,[claz_control_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_alien_stack_exhausted,subtypep,claz_storage_condition).
struct_opv(e,claz_alien_stack_exhausted,super_priority,[claz_storage_condition,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_ambiguous_var_name,subtypep,claz_debug_condition).
struct_opv(e,claz_ambiguous_var_name,super_priority,[claz_debug_condition,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_arg_count_error,classname,"ARG-COUNT-ERROR").
struct_opv(e,claz_arg_count_error,classof,claz_built_in_class).
struct_opv(e,claz_arg_count_error,name,"ARGS",zlot_arg_count_error_args).
struct_opv(e,claz_arg_count_error,name,"LAMBDA-LIST",zlot_arg_count_error_lambda_list).
struct_opv(e,claz_arg_count_error,name,"MAXIMUM",zlot_arg_count_error_maximum).
struct_opv(e,claz_arg_count_error,name,"MINIMUM",zlot_arg_count_error_minimum).
struct_opv(e,claz_arg_count_error,slot,args,zlot_arg_count_error_args).
struct_opv(e,claz_arg_count_error,slot,lambda_list,zlot_arg_count_error_lambda_list).
struct_opv(e,claz_arg_count_error,slot,maximum,zlot_arg_count_error_maximum).
struct_opv(e,claz_arg_count_error,slot,minimum,zlot_arg_count_error_minimum).
struct_opv(e,claz_arg_count_error,subtypep,claz_defmacro_lambda_list_bind_error).
struct_opv(e,claz_arg_count_error,super_priority,[claz_defmacro_lambda_list_bind_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_arg_count_program_error,classname,"ARG-COUNT-PROGRAM-ERROR").
struct_opv(e,claz_arg_count_program_error,classof,claz_built_in_class).
struct_opv(e,claz_arg_count_program_error,subtypep,claz_arg_count_error).
struct_opv(e,claz_arg_count_program_error,subtypep,claz_program_error).
struct_opv(e,claz_arg_count_program_error,super_priority,[claz_arg_count_error,claz_defmacro_lambda_list_bind_error,claz_program_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_argument_list_dotted,subtypep,claz_error).
struct_opv(e,claz_argument_list_dotted,subtypep,claz_program_error).
struct_opv(e,claz_argument_list_dotted,super_priority,[claz_program_error,claz_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_arguments_out_of_domain_error,classname,"ARGUMENTS-OUT-OF-DOMAIN-ERROR").
struct_opv(e,claz_arguments_out_of_domain_error,classof,claz_built_in_class).
struct_opv(e,claz_arguments_out_of_domain_error,subtypep,claz_arithmetic_error).
struct_opv(e,claz_arguments_out_of_domain_error,subtypep,claz_reference_condition).
struct_opv(e,claz_arguments_out_of_domain_error,super_priority,[claz_arithmetic_error,claz_error,claz_serious_condition,claz_reference_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_arithmetic_error,classname,"ARITHMETIC-ERROR").
struct_opv(e,claz_arithmetic_error,classof,claz_built_in_class).
struct_opv(e,claz_arithmetic_error,name,"OPERANDS",zlot_arithmetic_error_operands).
struct_opv(e,claz_arithmetic_error,name,"OPERATION",zlot_arithmetic_error_operation).
struct_opv(e,claz_arithmetic_error,slot,operands,zlot_arithmetic_error_operands).
struct_opv(e,claz_arithmetic_error,slot,operation,zlot_arithmetic_error_operation).
struct_opv(e,claz_arithmetic_error,subtypep,claz_error).
struct_opv(e,claz_arithmetic_error,subtypep,claz_lisp_error).
struct_opv(e,claz_arithmetic_error,super_priority,[claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_arithmetic_error,super_priority,[claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_array(claz_initial_element_mismatch),subtypep,claz_reference_condition).
struct_opv(e,claz_array(claz_initial_element_mismatch),subtypep,claz_simple_warning).
struct_opv(e,claz_array(claz_initial_element_mismatch),super_priority,[claz_reference_condition,claz_simple_warning,claz_simple_condition,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_asterisks_around_constant_variable_name,super_priority,[claz_dubious_asterisks_around_variable_name,claz_style_warning,claz_warning,claz_simple_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_asterisks_around_lexical_variable_name,super_priority,[claz_dubious_asterisks_around_variable_name,claz_style_warning,claz_warning,claz_simple_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_binding_stack_exhausted,subtypep,claz_storage_condition).
struct_opv(e,claz_binding_stack_exhausted,super_priority,[claz_storage_condition,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_bootstrap_package_not_found,subtypep,claz_condition).
struct_opv(e,claz_bootstrap_package_not_found,super_priority,[claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_bounding_indices_bad_error,classname,"BOUNDING-INDICES-BAD-ERROR").
struct_opv(e,claz_bounding_indices_bad_error,classof,claz_built_in_class).
struct_opv(e,claz_bounding_indices_bad_error,name,"OBJECT",zlot_bounding_indices_bad_error_object).
struct_opv(e,claz_bounding_indices_bad_error,slot,object,zlot_bounding_indices_bad_error_object).
struct_opv(e,claz_bounding_indices_bad_error,subtypep,claz_error).
struct_opv(e,claz_bounding_indices_bad_error,subtypep,claz_reference_condition).
struct_opv(e,claz_bounding_indices_bad_error,super_priority,[claz_reference_condition,claz_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_breakpoint_error,classname,"BREAKPOINT-ERROR").
struct_opv(e,claz_breakpoint_error,classof,claz_built_in_class).
struct_opv(e,claz_breakpoint_error,subtypep,claz_error).
struct_opv(e,claz_breakpoint_error,subtypep,claz_system_condition).
struct_opv(e,claz_breakpoint_error,super_priority,[claz_system_condition,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_bug,subtypep,claz_simple_error).
struct_opv(e,claz_bug,super_priority,[claz_simple_error,claz_simple_condition,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_c_string_decoding_error,classname,"C-STRING-DECODING-ERROR").
struct_opv(e,claz_c_string_decoding_error,classof,claz_built_in_class).
struct_opv(e,claz_c_string_decoding_error,subtypep,claz_character_decoding_error).
struct_opv(e,claz_c_string_decoding_error,super_priority,[claz_character_decoding_error,claz_character_coding_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_c_string_encoding_error,classname,"C-STRING-ENCODING-ERROR").
struct_opv(e,claz_c_string_encoding_error,classof,claz_built_in_class).
struct_opv(e,claz_c_string_encoding_error,subtypep,claz_character_encoding_error).
struct_opv(e,claz_c_string_encoding_error,super_priority,[claz_character_encoding_error,claz_character_coding_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_case_failure,subtypep,claz_error).
struct_opv(e,claz_case_failure,super_priority,[claz_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_cell_error,classname,"CELL-ERROR").
struct_opv(e,claz_cell_error,classof,claz_built_in_class).
struct_opv(e,claz_cell_error,name,"NAME",zlot_cell_error_name).
struct_opv(e,claz_cell_error,slot,name,zlot_cell_error_name).
struct_opv(e,claz_cell_error,subtypep,claz_error).
struct_opv(e,claz_cell_error,subtypep,claz_lisp_error).
struct_opv(e,claz_cell_error,super_priority,[claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_cell_error,super_priority,[claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_character_coding_error,classname,"CHARACTER-CODING-ERROR").
struct_opv(e,claz_character_coding_error,classof,claz_built_in_class).
struct_opv(e,claz_character_coding_error,name,"EXTERNAL-FORMAT",zlot_character_coding_error_external_format).
struct_opv(e,claz_character_coding_error,slot,external_format,zlot_character_coding_error_external_format).
struct_opv(e,claz_character_coding_error,subtypep,claz_error).
struct_opv(e,claz_character_coding_error,super_priority,[claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_character_decoding_error,classname,"CHARACTER-DECODING-ERROR").
struct_opv(e,claz_character_decoding_error,classof,claz_built_in_class).
struct_opv(e,claz_character_decoding_error,name,"OCTETS",zlot_character_decoding_error_octets).
struct_opv(e,claz_character_decoding_error,slot,octets,zlot_character_decoding_error_octets).
struct_opv(e,claz_character_decoding_error,subtypep,claz_character_coding_error).
struct_opv(e,claz_character_decoding_error,super_priority,[claz_character_coding_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_character_decoding_error_in_comment,classname,"CHARACTER-DECODING-ERROR-IN-COMMENT").
struct_opv(e,claz_character_decoding_error_in_comment,classof,claz_built_in_class).
struct_opv(e,claz_character_decoding_error_in_comment,name,"POSITION",zlot_character_decoding_error_in_comment_position).
struct_opv(e,claz_character_decoding_error_in_comment,name,"STREAM",zlot_character_decoding_error_in_comment_stream).
struct_opv(e,claz_character_decoding_error_in_comment,slot,position,zlot_character_decoding_error_in_comment_position).
struct_opv(e,claz_character_decoding_error_in_comment,slot,stream,zlot_character_decoding_error_in_comment_stream).
struct_opv(e,claz_character_decoding_error_in_comment,subtypep,claz_style_warning).
struct_opv(e,claz_character_decoding_error_in_comment,super_priority,[claz_style_warning,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_character_decoding_error_in_dispatch_macro_char_comment,classname,"CHARACTER-DECODING-ERROR-IN-DISPATCH-MACRO-CHAR-COMMENT").
struct_opv(e,claz_character_decoding_error_in_dispatch_macro_char_comment,classof,claz_built_in_class).
struct_opv(e,claz_character_decoding_error_in_dispatch_macro_char_comment,name,"DISP-CHAR",zlot_character_decoding_error_in_dispatch_macro_char_comment_disp_char).
struct_opv(e,claz_character_decoding_error_in_dispatch_macro_char_comment,name,"SUB-CHAR",zlot_character_decoding_error_in_dispatch_macro_char_comment_sub_char).
struct_opv(e,claz_character_decoding_error_in_dispatch_macro_char_comment,slot,disp_char,zlot_character_decoding_error_in_dispatch_macro_char_comment_disp_char).
struct_opv(e,claz_character_decoding_error_in_dispatch_macro_char_comment,slot,sub_char,zlot_character_decoding_error_in_dispatch_macro_char_comment_sub_char).
struct_opv(e,claz_character_decoding_error_in_dispatch_macro_char_comment,subtypep,claz_character_decoding_error_in_comment).
struct_opv(e,claz_character_decoding_error_in_dispatch_macro_char_comment,super_priority,[claz_character_decoding_error_in_comment,claz_style_warning,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_character_decoding_error_in_macro_char_comment,classname,"CHARACTER-DECODING-ERROR-IN-MACRO-CHAR-COMMENT").
struct_opv(e,claz_character_decoding_error_in_macro_char_comment,classof,claz_built_in_class).
struct_opv(e,claz_character_decoding_error_in_macro_char_comment,name,"CHAR",zlot_character_decoding_error_in_macro_char_comment_char).
struct_opv(e,claz_character_decoding_error_in_macro_char_comment,slot,char,zlot_character_decoding_error_in_macro_char_comment_char).
struct_opv(e,claz_character_decoding_error_in_macro_char_comment,subtypep,claz_character_decoding_error_in_comment).
struct_opv(e,claz_character_decoding_error_in_macro_char_comment,super_priority,[claz_character_decoding_error_in_comment,claz_style_warning,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_character_encoding_error,classname,"CHARACTER-ENCODING-ERROR").
struct_opv(e,claz_character_encoding_error,classof,claz_built_in_class).
struct_opv(e,claz_character_encoding_error,name,"CODE",zlot_character_encoding_error_code).
struct_opv(e,claz_character_encoding_error,slot,code,zlot_character_encoding_error_code).
struct_opv(e,claz_character_encoding_error,subtypep,claz_character_coding_error).
struct_opv(e,claz_character_encoding_error,super_priority,[claz_character_coding_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_character_out_of_range,subtypep,claz_octet_decoding_error).
struct_opv(e,claz_character_out_of_range,super_priority,[claz_octet_decoding_error,claz_character_decoding_error,claz_character_coding_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_charset_type_error,classname,"CHARSET-TYPE-ERROR").
struct_opv(e,claz_charset_type_error,classof,claz_built_in_class).
struct_opv(e,claz_charset_type_error,subtypep,claz_error).
struct_opv(e,claz_charset_type_error,super_priority,[claz_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_clos_warning,classname,"CLOS-WARNING").
struct_opv(e,claz_clos_warning,classof,claz_built_in_class).
struct_opv(e,claz_clos_warning,subtypep,claz_warning).
struct_opv(e,claz_clos_warning,super_priority,[claz_warning,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_closed_stream_error,classname,"CLOSED-STREAM-ERROR").
struct_opv(e,claz_closed_stream_error,classof,claz_built_in_class).
struct_opv(e,claz_closed_stream_error,subtypep,claz_stream_error).
struct_opv(e,claz_closed_stream_error,super_priority,[claz_stream_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_code_deletion_note,super_priority,[claz_simple_compiler_note,claz_simple_condition,claz_compiler_note,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_compiled_program_error,classname,"COMPILED-PROGRAM-ERROR").
struct_opv(e,claz_compiled_program_error,classof,claz_built_in_class).
struct_opv(e,claz_compiled_program_error,name,"MESSAGE",zlot_compiled_program_error_message).
struct_opv(e,claz_compiled_program_error,name,"SOURCE",zlot_compiled_program_error_source).
struct_opv(e,claz_compiled_program_error,slot,message,zlot_compiled_program_error_message).
struct_opv(e,claz_compiled_program_error,slot,source,zlot_compiled_program_error_source).
struct_opv(e,claz_compiled_program_error,subtypep,claz_program_error).
struct_opv(e,claz_compiled_program_error,super_priority,[claz_program_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_compiler_env_too_complex_error,classname,"COMPILER-ENVIRONMENT-TOO-COMPLEX-ERROR").
struct_opv(e,claz_compiler_env_too_complex_error,classof,claz_built_in_class).
struct_opv(e,claz_compiler_env_too_complex_error,subtypep,claz_simple_error).
struct_opv(e,claz_compiler_env_too_complex_error,super_priority,[claz_simple_error,claz_simple_condition,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_compiler_error,classname,"COMPILER-ERROR").
struct_opv(e,claz_compiler_error,classof,claz_built_in_class).
struct_opv(e,claz_compiler_error,subtypep,claz_encapsulated_condition).
struct_opv(e,claz_compiler_error,super_priority,[claz_encapsulated_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_compiler_error_context,classname,"COMPILER-ERROR-CONTEXT").
struct_opv(e,claz_compiler_error_context,classof,claz_built_in_class).
struct_opv(e,claz_compiler_error_context,name,"CONTEXT",zlot_compiler_error_context_context).
struct_opv(e,claz_compiler_error_context,name,"ENCLOSING-SOURCE",zlot_compiler_error_context_enclosing_source).
struct_opv(e,claz_compiler_error_context,name,"FILE-NAME",zlot_compiler_error_context_file_name).
struct_opv(e,claz_compiler_error_context,name,"FILE-POSITION",zlot_compiler_error_context_file_position).
struct_opv(e,claz_compiler_error_context,name,"LEXENV",zlot_compiler_error_context_lexenv).
struct_opv(e,claz_compiler_error_context,name,"ORIGINAL-SOURCE",zlot_compiler_error_context_original_source).
struct_opv(e,claz_compiler_error_context,name,"ORIGINAL-SOURCE-PATH",zlot_compiler_error_context_original_source_path).
struct_opv(e,claz_compiler_error_context,name,"SOURCE",zlot_compiler_error_context_source).
struct_opv(e,claz_compiler_error_context,slot,context,zlot_compiler_error_context_context).
struct_opv(e,claz_compiler_error_context,slot,enclosing_source,zlot_compiler_error_context_enclosing_source).
struct_opv(e,claz_compiler_error_context,slot,file_name,zlot_compiler_error_context_file_name).
struct_opv(e,claz_compiler_error_context,slot,file_position,zlot_compiler_error_context_file_position).
struct_opv(e,claz_compiler_error_context,slot,lexenv,zlot_compiler_error_context_lexenv).
struct_opv(e,claz_compiler_error_context,slot,original_source,zlot_compiler_error_context_original_source).
struct_opv(e,claz_compiler_error_context,slot,original_source_path,zlot_compiler_error_context_original_source_path).
struct_opv(e,claz_compiler_error_context,slot,source,zlot_compiler_error_context_source).
struct_opv(e,claz_compiler_error_context,subtypep,claz_structure_object).
struct_opv(e,claz_compiler_error_context,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(e,claz_compiler_macro_application_missed_warning,classname,"COMPILER-MACRO-APPLICATION-MISSED-WARNING").
struct_opv(e,claz_compiler_macro_application_missed_warning,classof,claz_built_in_class).
struct_opv(e,claz_compiler_macro_application_missed_warning,name,"COUNT",zlot_compiler_macro_application_missed_warning_count).
struct_opv(e,claz_compiler_macro_application_missed_warning,name,"FUNCTION",zlot_compiler_macro_application_missed_warning_function).
struct_opv(e,claz_compiler_macro_application_missed_warning,slot,count,zlot_compiler_macro_application_missed_warning_count).
struct_opv(e,claz_compiler_macro_application_missed_warning,slot,function,zlot_compiler_macro_application_missed_warning_function).
struct_opv(e,claz_compiler_macro_application_missed_warning,subtypep,claz_style_warning).
struct_opv(e,claz_compiler_macro_application_missed_warning,super_priority,[claz_style_warning,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_compiler_macro_keyword_problem,subtypep,claz_condition).
struct_opv(e,claz_compiler_macro_keyword_problem,super_priority,[claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_compiler_note,subtypep,claz_condition).
struct_opv(e,claz_compiler_note,super_priority,[claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_condition,classname,"CONDITION").
struct_opv(e,claz_condition,classof,claz_built_in_class).
struct_opv(e,claz_condition,name,"MESSAGE",zlot_condition_message).
struct_opv(e,claz_condition,returns,claz_string,zlot_condition_message).
struct_opv(e,claz_condition,slot,message,zlot_condition_message).
struct_opv(e,claz_condition,subtypep,claz_slot_object).
struct_opv(e,claz_condition,subtypep,claz_standard_object).
struct_opv(e,claz_condition,super_priority,[claz_slot_object,claz_t]).
struct_opv(e,claz_condition,super_priority,[claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_condition_class,classname,"CONDITION-CLASS").
struct_opv(e,claz_condition_class,classof,claz_built_in_class).
struct_opv(e,claz_condition_class,subtypep,claz_slot_class).
struct_opv(e,claz_condition_class,super_priority,[claz_slot_class,claz_pcl_class,claz_class,claz_dependent_update_mixin,claz_plist_mixin,claz_definition_source_mixin,claz_standard_specializer,claz_specializer,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(e,claz_condition_classoid,classname,"CONDITION-CLASSOID").
struct_opv(e,claz_condition_classoid,classof,claz_built_in_class).
struct_opv(e,claz_condition_classoid,name,"CLASS-SLOTS",zlot_condition_classoid_class_slots).
struct_opv(e,claz_condition_classoid,name,"CPL",zlot_condition_classoid_cpl).
struct_opv(e,claz_condition_classoid,name,"DIRECT-DEFAULT-INITARGS",zlot_condition_classoid_direct_default_initargs).
struct_opv(e,claz_condition_classoid,name,"HAIRY-SLOTS",zlot_condition_classoid_hairy_slots).
struct_opv(e,claz_condition_classoid,name,"REPORT",zlot_condition_classoid_report).
struct_opv(e,claz_condition_classoid,name,"SLOTS",zlot_condition_classoid_slots).
struct_opv(e,claz_condition_classoid,slot,class_slots,zlot_condition_classoid_class_slots).
struct_opv(e,claz_condition_classoid,slot,cpl,zlot_condition_classoid_cpl).
struct_opv(e,claz_condition_classoid,slot,direct_default_initargs,zlot_condition_classoid_direct_default_initargs).
struct_opv(e,claz_condition_classoid,slot,hairy_slots,zlot_condition_classoid_hairy_slots).
struct_opv(e,claz_condition_classoid,slot,report,zlot_condition_classoid_report).
struct_opv(e,claz_condition_classoid,slot,slots,zlot_condition_classoid_slots).
struct_opv(e,claz_condition_classoid,subtypep,claz_classoid).
struct_opv(e,claz_condition_classoid,super_priority,[claz_classoid,claz_ctype,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(e,claz_condition_direct_slot_definition,classname,"CONDITION-DIRECT-SLOT-DEFINITION").
struct_opv(e,claz_condition_direct_slot_definition,classof,claz_built_in_class).
struct_opv(e,claz_condition_direct_slot_definition,subtypep,claz_condition_slot_definition).
struct_opv(e,claz_condition_direct_slot_definition,subtypep,claz_direct_slot_definition).
struct_opv(e,claz_condition_direct_slot_definition,super_priority,[claz_condition_slot_definition,claz_direct_slot_definition,claz_slot_definition,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(e,claz_condition_effective_slot_definition,classname,"CONDITION-EFFECTIVE-SLOT-DEFINITION").
struct_opv(e,claz_condition_effective_slot_definition,classof,claz_built_in_class).
struct_opv(e,claz_condition_effective_slot_definition,subtypep,claz_condition_slot_definition).
struct_opv(e,claz_condition_effective_slot_definition,subtypep,claz_effective_slot_definition).
struct_opv(e,claz_condition_effective_slot_definition,super_priority,[claz_condition_slot_definition,claz_effective_slot_definition,claz_slot_definition,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(e,claz_condition_slot,classname,"CONDITION-SLOT").
struct_opv(e,claz_condition_slot,classof,claz_built_in_class).
struct_opv(e,claz_condition_slot,name,"ALLOCATION",zlot_condition_slot_allocation).
struct_opv(e,claz_condition_slot,name,"CELL",zlot_condition_slot_cell).
struct_opv(e,claz_condition_slot,name,"DOCUMENTATION",zlot_condition_slot_documentation).
struct_opv(e,claz_condition_slot,name,"INITARGS",zlot_condition_slot_initargs).
struct_opv(e,claz_condition_slot,name,"INITFORM",zlot_condition_slot_initform).
struct_opv(e,claz_condition_slot,name,"INITFORM-P",zlot_condition_slot_initform_p).
struct_opv(e,claz_condition_slot,name,"INITFUNCTION",zlot_condition_slot_initfunction).
struct_opv(e,claz_condition_slot,name,"NAME",zlot_condition_slot_name).
struct_opv(e,claz_condition_slot,name,"READERS",zlot_condition_slot_readers).
struct_opv(e,claz_condition_slot,name,"WRITERS",zlot_condition_slot_writers).
struct_opv(e,claz_condition_slot,slot,allocation,zlot_condition_slot_allocation).
struct_opv(e,claz_condition_slot,slot,cell,zlot_condition_slot_cell).
struct_opv(e,claz_condition_slot,slot,documentation,zlot_condition_slot_documentation).
struct_opv(e,claz_condition_slot,slot,initargs,zlot_condition_slot_initargs).
struct_opv(e,claz_condition_slot,slot,initform,zlot_condition_slot_initform).
struct_opv(e,claz_condition_slot,slot,initform_p,zlot_condition_slot_initform_p).
struct_opv(e,claz_condition_slot,slot,initfunction,zlot_condition_slot_initfunction).
struct_opv(e,claz_condition_slot,slot,name,zlot_condition_slot_name).
struct_opv(e,claz_condition_slot,slot,readers,zlot_condition_slot_readers).
struct_opv(e,claz_condition_slot,slot,writers,zlot_condition_slot_writers).
struct_opv(e,claz_condition_slot,subtypep,claz_structure_object).
struct_opv(e,claz_condition_slot,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(e,claz_condition_slot_definition,classname,"CONDITION-SLOT-DEFINITION").
struct_opv(e,claz_condition_slot_definition,classof,claz_built_in_class).
struct_opv(e,claz_condition_slot_definition,name,"ALLOCATION",zlot_condition_slot_definition_allocation).
struct_opv(e,claz_condition_slot_definition,name,"ALLOCATION-CLASS",zlot_condition_slot_definition_allocation_class).
struct_opv(e,claz_condition_slot_definition,slot,allocation,zlot_condition_slot_definition_allocation).
struct_opv(e,claz_condition_slot_definition,slot,allocation_class,zlot_condition_slot_definition_allocation_class).
struct_opv(e,claz_condition_slot_definition,subtypep,claz_slot_definition).
struct_opv(e,claz_condition_slot_definition,super_priority,[claz_slot_definition,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(e,claz_constant_modified,subtypep,claz_reference_condition).
struct_opv(e,claz_constant_modified,subtypep,claz_warning).
struct_opv(e,claz_constant_modified,super_priority,[claz_reference_condition,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_control_error,classname,"CONTROL-ERROR").
struct_opv(e,claz_control_error,classof,claz_built_in_class).
struct_opv(e,claz_control_error,subtypep,claz_error).
struct_opv(e,claz_control_error,subtypep,claz_lisp_error).
struct_opv(e,claz_control_error,super_priority,[claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_control_error,super_priority,[claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_control_stack_exhausted,subtypep,claz_storage_condition).
struct_opv(e,claz_control_stack_exhausted,super_priority,[claz_storage_condition,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_cpl_protocol_violation,subtypep,claz_error).
struct_opv(e,claz_cpl_protocol_violation,subtypep,claz_reference_condition).
struct_opv(e,claz_cpl_protocol_violation,super_priority,[claz_reference_condition,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_deadline_timeout,super_priority,[claz_timeout,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_debug_condition,classname,"DEBUG-CONDITION").
struct_opv(e,claz_debug_condition,classof,claz_built_in_class).
struct_opv(e,claz_debug_condition,subtypep,claz_serious_condition).
struct_opv(e,claz_debug_condition,super_priority,[claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_debug_error,classname,"DEBUG-ERROR").
struct_opv(e,claz_debug_error,classof,claz_built_in_class).
struct_opv(e,claz_debug_error,subtypep,claz_error).
struct_opv(e,claz_debug_error,super_priority,[claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_declaration_type_conflict_error,classname,"DECLARATION-TYPE-CONFLICT-ERROR").
struct_opv(e,claz_declaration_type_conflict_error,classof,claz_built_in_class).
struct_opv(e,claz_declaration_type_conflict_error,subtypep,claz_reference_condition).
struct_opv(e,claz_declaration_type_conflict_error,subtypep,claz_simple_error).
struct_opv(e,claz_declaration_type_conflict_error,super_priority,[claz_reference_condition,claz_simple_error,claz_simple_condition,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_defconstant_uneql,subtypep,claz_error).
struct_opv(e,claz_defconstant_uneql,subtypep,claz_reference_condition).
struct_opv(e,claz_defconstant_uneql,super_priority,[claz_reference_condition,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_defmacro_lambda_list_bind_error,classname,"DEFMACRO-LAMBDA-LIST-BIND-ERROR").
struct_opv(e,claz_defmacro_lambda_list_bind_error,classof,claz_built_in_class).
struct_opv(e,claz_defmacro_lambda_list_bind_error,name,"KIND",zlot_defmacro_lambda_list_bind_error_kind).
struct_opv(e,claz_defmacro_lambda_list_bind_error,name,"NAME",zlot_defmacro_lambda_list_bind_error_name).
struct_opv(e,claz_defmacro_lambda_list_bind_error,slot,kind,zlot_defmacro_lambda_list_bind_error_kind).
struct_opv(e,claz_defmacro_lambda_list_bind_error,slot,name,zlot_defmacro_lambda_list_bind_error_name).
struct_opv(e,claz_defmacro_lambda_list_bind_error,subtypep,claz_error).
struct_opv(e,claz_defmacro_lambda_list_bind_error,super_priority,[claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_defmacro_lambda_list_broken_key_list_error,classname,"DEFMACRO-LAMBDA-LIST-BROKEN-KEY-LIST-ERROR").
struct_opv(e,claz_defmacro_lambda_list_broken_key_list_error,classof,claz_built_in_class).
struct_opv(e,claz_defmacro_lambda_list_broken_key_list_error,name,"INFO",zlot_defmacro_lambda_list_broken_key_list_error_info).
struct_opv(e,claz_defmacro_lambda_list_broken_key_list_error,name,"PROBLEM",zlot_defmacro_lambda_list_broken_key_list_error_problem).
struct_opv(e,claz_defmacro_lambda_list_broken_key_list_error,slot,info,zlot_defmacro_lambda_list_broken_key_list_error_info).
struct_opv(e,claz_defmacro_lambda_list_broken_key_list_error,slot,problem,zlot_defmacro_lambda_list_broken_key_list_error_problem).
struct_opv(e,claz_defmacro_lambda_list_broken_key_list_error,subtypep,claz_defmacro_lambda_list_bind_error).
struct_opv(e,claz_defmacro_lambda_list_broken_key_list_error,super_priority,[claz_defmacro_lambda_list_bind_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_deprecated_eval_when_situations,subtypep,claz_style_warning).
struct_opv(e,claz_deprecated_eval_when_situations,super_priority,[claz_style_warning,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_deprecation_condition,classname,"DEPRECATION-CONDITION").
struct_opv(e,claz_deprecation_condition,classof,claz_built_in_class).
struct_opv(e,claz_deprecation_condition,name,"NAME",zlot_deprecation_condition_name).
struct_opv(e,claz_deprecation_condition,name,"NAMESPACE",zlot_deprecation_condition_namespace).
struct_opv(e,claz_deprecation_condition,name,"REPLACEMENTS",zlot_deprecation_condition_replacements).
struct_opv(e,claz_deprecation_condition,name,"RUNTIME-ERROR",zlot_deprecation_condition_runtime_error).
struct_opv(e,claz_deprecation_condition,name,"SOFTWARE",zlot_deprecation_condition_software).
struct_opv(e,claz_deprecation_condition,name,"VERSION",zlot_deprecation_condition_version).
struct_opv(e,claz_deprecation_condition,slot,name,zlot_deprecation_condition_name).
struct_opv(e,claz_deprecation_condition,slot,namespace,zlot_deprecation_condition_namespace).
struct_opv(e,claz_deprecation_condition,slot,replacements,zlot_deprecation_condition_replacements).
struct_opv(e,claz_deprecation_condition,slot,runtime_error,zlot_deprecation_condition_runtime_error).
struct_opv(e,claz_deprecation_condition,slot,software,zlot_deprecation_condition_software).
struct_opv(e,claz_deprecation_condition,slot,version,zlot_deprecation_condition_version).
struct_opv(e,claz_deprecation_condition,subtypep,claz_reference_condition).
struct_opv(e,claz_deprecation_condition,super_priority,[claz_reference_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_deprecation_error,classname,"DEPRECATION-ERROR").
struct_opv(e,claz_deprecation_error,classof,claz_built_in_class).
struct_opv(e,claz_deprecation_error,subtypep,claz_deprecation_condition).
struct_opv(e,claz_deprecation_error,subtypep,claz_error).
struct_opv(e,claz_deprecation_error,super_priority,[claz_error,claz_serious_condition,claz_deprecation_condition,claz_reference_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_division_by_zero,subtypep,claz_arithmetic_error).
struct_opv(e,claz_division_by_zero,super_priority,[claz_arithmetic_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_division_by_zero,super_priority,[claz_arithmetic_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_dubious_asterisks_around_variable_name,subtypep,claz_simple_condition).
struct_opv(e,claz_dubious_asterisks_around_variable_name,subtypep,claz_style_warning).
struct_opv(e,claz_dubious_asterisks_around_variable_name,super_priority,[claz_style_warning,claz_warning,claz_simple_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_duplicate_case_key_warning,classname,"DUPLICATE-CASE-KEY-WARNING").
struct_opv(e,claz_duplicate_case_key_warning,classof,claz_built_in_class).
struct_opv(e,claz_duplicate_case_key_warning,name,"CASE-KIND",zlot_duplicate_case_key_warning_case_kind).
struct_opv(e,claz_duplicate_case_key_warning,name,"KEY",zlot_duplicate_case_key_warning_key).
struct_opv(e,claz_duplicate_case_key_warning,name,"OCCURRENCES",zlot_duplicate_case_key_warning_occurrences).
struct_opv(e,claz_duplicate_case_key_warning,slot,case_kind,zlot_duplicate_case_key_warning_case_kind).
struct_opv(e,claz_duplicate_case_key_warning,slot,key,zlot_duplicate_case_key_warning_key).
struct_opv(e,claz_duplicate_case_key_warning,slot,occurrences,zlot_duplicate_case_key_warning_occurrences).
struct_opv(e,claz_duplicate_case_key_warning,subtypep,claz_style_warning).
struct_opv(e,claz_duplicate_case_key_warning,super_priority,[claz_style_warning,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_duplicate_definition,subtypep,claz_reference_condition).
struct_opv(e,claz_duplicate_definition,subtypep,claz_warning).
struct_opv(e,claz_duplicate_definition,super_priority,[claz_reference_condition,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_early_deprecation_warning,classname,"EARLY-DEPRECATION-WARNING").
struct_opv(e,claz_early_deprecation_warning,classof,claz_built_in_class).
struct_opv(e,claz_early_deprecation_warning,subtypep,claz_deprecation_condition).
struct_opv(e,claz_early_deprecation_warning,subtypep,claz_style_warning).
struct_opv(e,claz_early_deprecation_warning,super_priority,[claz_style_warning,claz_warning,claz_deprecation_condition,claz_reference_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_encapsulated_condition,classname,"ENCAPSULATED-CONDITION").
struct_opv(e,claz_encapsulated_condition,classof,claz_built_in_class).
struct_opv(e,claz_encapsulated_condition,name,"CONDITION",zlot_encapsulated_condition_condition).
struct_opv(e,claz_encapsulated_condition,slot,condition,zlot_encapsulated_condition_condition).
struct_opv(e,claz_encapsulated_condition,subtypep,claz_condition).
struct_opv(e,claz_encapsulated_condition,super_priority,[claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_end_of_file,subtypep,claz_stream_error).
struct_opv(e,claz_end_of_file,super_priority,[claz_stream_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_end_of_file,super_priority,[claz_stream_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_end_of_input_in_character,subtypep,claz_octet_decoding_error).
struct_opv(e,claz_end_of_input_in_character,super_priority,[claz_octet_decoding_error,claz_character_decoding_error,claz_character_coding_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_error,classname,"ERROR").
struct_opv(e,claz_error,classof,claz_built_in_class).
struct_opv(e,claz_error,name,"DATUM",zlot_error_datum).
struct_opv(e,claz_error,name,"EXPECTED-TYPE",zlot_error_expected_type).
struct_opv(e,claz_error,slot,datum,zlot_error_datum).
struct_opv(e,claz_error,slot,expected_type,zlot_error_expected_type).
struct_opv(e,claz_error,subtypep,claz_lisp_error).
struct_opv(e,claz_error,subtypep,claz_serious_condition).
struct_opv(e,claz_error,super_priority,[claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_error,super_priority,[claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_error,super_priority,[claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_error,super_priority,[claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_eval_error,classname,"EVAL-ERROR").
struct_opv(e,claz_eval_error,classof,claz_built_in_class).
struct_opv(e,claz_eval_error,subtypep,claz_encapsulated_condition).
struct_opv(e,claz_eval_error,super_priority,[claz_encapsulated_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_extension_failure,subtypep,claz_reference_condition).
struct_opv(e,claz_extension_failure,subtypep,claz_simple_error).
struct_opv(e,claz_extension_failure,super_priority,[claz_reference_condition,claz_simple_error,claz_simple_condition,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_fasl_header_missing,super_priority,[claz_invalid_fasl,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_fatal_compiler_error,classname,"FATAL-COMPILER-ERROR").
struct_opv(e,claz_fatal_compiler_error,classof,claz_built_in_class).
struct_opv(e,claz_fatal_compiler_error,subtypep,claz_encapsulated_condition).
struct_opv(e,claz_fatal_compiler_error,super_priority,[claz_encapsulated_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_ffi_exception,subtypep,claz_lisp_error).
struct_opv(e,claz_file_error,classname,"FILE-ERROR").
struct_opv(e,claz_file_error,classof,claz_built_in_class).
struct_opv(e,claz_file_error,name,"PATHNAME",zlot_file_error_pathname).
struct_opv(e,claz_file_error,slot,pathname,zlot_file_error_pathname).
struct_opv(e,claz_file_error,subtypep,claz_error).
struct_opv(e,claz_file_error,subtypep,claz_lisp_error).
struct_opv(e,claz_file_error,super_priority,[claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_file_error,super_priority,[claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_file_info,name,"STYLE-WARNING-TRACKER",zlot_file_info_style_warning_tracker).
struct_opv(e,claz_file_info,slot,style_warning_tracker,zlot_file_info_style_warning_tracker).
struct_opv(e,claz_final_deprecation_warning,classname,"FINAL-DEPRECATION-WARNING").
struct_opv(e,claz_final_deprecation_warning,classof,claz_built_in_class).
struct_opv(e,claz_final_deprecation_warning,subtypep,claz_deprecation_condition).
struct_opv(e,claz_final_deprecation_warning,subtypep,claz_warning).
struct_opv(e,claz_final_deprecation_warning,super_priority,[claz_warning,claz_deprecation_condition,claz_reference_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_find_method_length_mismatch,subtypep,claz_reference_condition).
struct_opv(e,claz_find_method_length_mismatch,subtypep,claz_simple_error).
struct_opv(e,claz_find_method_length_mismatch,super_priority,[claz_reference_condition,claz_simple_error,claz_simple_condition,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_floating_point_exception,classname,"FLOATING-POINT-EXCEPTION").
struct_opv(e,claz_floating_point_exception,classof,claz_built_in_class).
struct_opv(e,claz_floating_point_exception,name,"FLAGS",zlot_floating_point_exception_flags).
struct_opv(e,claz_floating_point_exception,slot,flags,zlot_floating_point_exception_flags).
struct_opv(e,claz_floating_point_exception,subtypep,claz_arithmetic_error).
struct_opv(e,claz_floating_point_exception,super_priority,[claz_arithmetic_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_floating_point_inexact,classname,"FLOATING-POINT-INEXACT").
struct_opv(e,claz_floating_point_inexact,classof,claz_built_in_class).
struct_opv(e,claz_floating_point_inexact,subtypep,claz_arithmetic_error).
struct_opv(e,claz_floating_point_inexact,super_priority,[claz_arithmetic_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_floating_point_inexact,super_priority,[claz_arithmetic_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_floating_point_invalid_operation,classname,"FLOATING-POINT-INVALID-OPERATION").
struct_opv(e,claz_floating_point_invalid_operation,classof,claz_built_in_class).
struct_opv(e,claz_floating_point_invalid_operation,subtypep,claz_arithmetic_error).
struct_opv(e,claz_floating_point_invalid_operation,super_priority,[claz_arithmetic_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_floating_point_invalid_operation,super_priority,[claz_arithmetic_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_floating_point_overflow,classname,"FLOATING-POINT-OVERFLOW").
struct_opv(e,claz_floating_point_overflow,classof,claz_built_in_class).
struct_opv(e,claz_floating_point_overflow,subtypep,claz_arithmetic_error).
struct_opv(e,claz_floating_point_overflow,super_priority,[claz_arithmetic_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_floating_point_overflow,super_priority,[claz_arithmetic_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_floating_point_underflow,classname,"FLOATING-POINT-UNDERFLOW").
struct_opv(e,claz_floating_point_underflow,classof,claz_built_in_class).
struct_opv(e,claz_floating_point_underflow,subtypep,claz_arithmetic_error).
struct_opv(e,claz_floating_point_underflow,super_priority,[claz_arithmetic_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_floating_point_underflow,super_priority,[claz_arithmetic_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_format_args_mismatch,subtypep,claz_reference_condition).
struct_opv(e,claz_format_args_mismatch,super_priority,[claz_reference_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_format_error,classname,"FORMAT-ERROR").
struct_opv(e,claz_format_error,classof,claz_built_in_class).
struct_opv(e,claz_format_error,name,"ARGS",zlot_format_error_args).
struct_opv(e,claz_format_error,name,"COMPLAINT",zlot_format_error_complaint).
struct_opv(e,claz_format_error,name,"CONTROL-STRING",zlot_format_error_control_string).
struct_opv(e,claz_format_error,name,"OFFSET",zlot_format_error_offset).
struct_opv(e,claz_format_error,name,"PRINT-BANNER",zlot_format_error_print_banner).
struct_opv(e,claz_format_error,name,"SECOND-RELATIVE",zlot_format_error_second_relative).
struct_opv(e,claz_format_error,slot,args,zlot_format_error_args).
struct_opv(e,claz_format_error,slot,complaint,zlot_format_error_complaint).
struct_opv(e,claz_format_error,slot,control_string,zlot_format_error_control_string).
struct_opv(e,claz_format_error,slot,offset,zlot_format_error_offset).
struct_opv(e,claz_format_error,slot,print_banner,zlot_format_error_print_banner).
struct_opv(e,claz_format_error,slot,second_relative,zlot_format_error_second_relative).
struct_opv(e,claz_format_error,subtypep,claz_error).
struct_opv(e,claz_format_error,subtypep,claz_reference_condition).
struct_opv(e,claz_format_error,super_priority,[claz_error,claz_serious_condition,claz_reference_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_format_too_few_args_warning,classname,"FORMAT-TOO-FEW-ARGS-WARNING").
struct_opv(e,claz_format_too_few_args_warning,classof,claz_built_in_class).
struct_opv(e,claz_format_too_few_args_warning,subtypep,claz_format_args_mismatch).
struct_opv(e,claz_format_too_few_args_warning,subtypep,claz_simple_warning).
struct_opv(e,claz_format_too_few_args_warning,super_priority,[claz_format_args_mismatch,claz_reference_condition,claz_simple_warning,claz_simple_condition,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_format_too_many_args_warning,classname,"FORMAT-TOO-MANY-ARGS-WARNING").
struct_opv(e,claz_format_too_many_args_warning,classof,claz_built_in_class).
struct_opv(e,claz_format_too_many_args_warning,subtypep,claz_format_args_mismatch).
struct_opv(e,claz_format_too_many_args_warning,subtypep,claz_simple_style_warning).
struct_opv(e,claz_format_too_many_args_warning,super_priority,[claz_format_args_mismatch,claz_reference_condition,claz_simple_style_warning,claz_simple_condition,claz_style_warning,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_frame_fun_mismatch,subtypep,claz_debug_error).
struct_opv(e,claz_frame_fun_mismatch,super_priority,[claz_debug_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_ftype_proclamation_mismatch,super_priority,[claz_proclamation_mismatch,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_ftype_proclamation_mismatch_error,classname,"FTYPE-PROCLAMATION-MISMATCH-ERROR").
struct_opv(e,claz_ftype_proclamation_mismatch_error,classof,claz_built_in_class).
struct_opv(e,claz_ftype_proclamation_mismatch_error,subtypep,claz_error).
struct_opv(e,claz_ftype_proclamation_mismatch_error,subtypep,claz_ftype_proclamation_mismatch).
struct_opv(e,claz_ftype_proclamation_mismatch_error,super_priority,[claz_error,claz_serious_condition,claz_ftype_proclamation_mismatch,claz_proclamation_mismatch,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_ftype_proclamation_mismatch_warning,classname,"FTYPE-PROCLAMATION-MISMATCH-WARNING").
struct_opv(e,claz_ftype_proclamation_mismatch_warning,classof,claz_built_in_class).
struct_opv(e,claz_ftype_proclamation_mismatch_warning,subtypep,claz_ftype_proclamation_mismatch).
struct_opv(e,claz_ftype_proclamation_mismatch_warning,subtypep,claz_style_warning).
struct_opv(e,claz_ftype_proclamation_mismatch_warning,super_priority,[claz_style_warning,claz_warning,claz_ftype_proclamation_mismatch,claz_proclamation_mismatch,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_function_redefinition_warning,classname,"FUNCTION-REDEFINITION-WARNING").
struct_opv(e,claz_function_redefinition_warning,classof,claz_built_in_class).
struct_opv(e,claz_function_redefinition_warning,name,"NEW-FUNCTION",zlot_function_redefinition_warning_new_function).
struct_opv(e,claz_function_redefinition_warning,slot,new_function,zlot_function_redefinition_warning_new_function).
struct_opv(e,claz_function_redefinition_warning,subtypep,claz_redefinition_warning).
struct_opv(e,claz_function_redefinition_warning,super_priority,[claz_redefinition_warning,claz_style_warning,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_generic_function_lambda_list_error,classname,"GENERIC-FUNCTION-LAMBDA-LIST-ERROR").
struct_opv(e,claz_generic_function_lambda_list_error,classof,claz_built_in_class).
struct_opv(e,claz_generic_function_lambda_list_error,subtypep,claz_reference_condition).
struct_opv(e,claz_generic_function_lambda_list_error,subtypep,claz_simple_program_error).
struct_opv(e,claz_generic_function_lambda_list_error,super_priority,[claz_reference_condition,claz_simple_program_error,claz_simple_condition,claz_program_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_gf_already_called_warning,classname,"GF-ALREADY-CALLED-WARNING").
struct_opv(e,claz_gf_already_called_warning,classof,claz_built_in_class).
struct_opv(e,claz_gf_already_called_warning,subtypep,claz_clos_warning).
struct_opv(e,claz_gf_already_called_warning,super_priority,[claz_clos_warning,claz_warning,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_gf_replacing_method_warning,classname,"GF-REPLACING-METHOD-WARNING").
struct_opv(e,claz_gf_replacing_method_warning,classof,claz_built_in_class).
struct_opv(e,claz_gf_replacing_method_warning,subtypep,claz_clos_warning).
struct_opv(e,claz_gf_replacing_method_warning,super_priority,[claz_clos_warning,claz_warning,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_heap_exhausted_error,classname,"HEAP-EXHAUSTED-ERROR").
struct_opv(e,claz_heap_exhausted_error,classof,claz_built_in_class).
struct_opv(e,claz_heap_exhausted_error,subtypep,claz_storage_condition).
struct_opv(e,claz_heap_exhausted_error,super_priority,[claz_storage_condition,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_illegal_monitor_state,subtypep,claz_program_error).
struct_opv(e,claz_implicit_generic_function_warning,classname,"IMPLICIT-GENERIC-FUNCTION-WARNING").
struct_opv(e,claz_implicit_generic_function_warning,classof,claz_built_in_class).
struct_opv(e,claz_implicit_generic_function_warning,name,"NAME",zlot_implicit_generic_function_warning_name).
struct_opv(e,claz_implicit_generic_function_warning,slot,name,zlot_implicit_generic_function_warning_name).
struct_opv(e,claz_implicit_generic_function_warning,subtypep,claz_style_warning).
struct_opv(e,claz_implicit_generic_function_warning,super_priority,[claz_style_warning,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_index_too_large_error,classname,"INDEX-TOO-LARGE-ERROR").
struct_opv(e,claz_index_too_large_error,classof,claz_built_in_class).
struct_opv(e,claz_index_too_large_error,subtypep,claz_error).
struct_opv(e,claz_index_too_large_error,super_priority,[claz_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_initarg_error,classname,"INITARG-ERROR").
struct_opv(e,claz_initarg_error,classof,claz_built_in_class).
struct_opv(e,claz_initarg_error,name,"CLASS",zlot_initarg_error_class).
struct_opv(e,claz_initarg_error,name,"INITARGS",zlot_initarg_error_initargs).
struct_opv(e,claz_initarg_error,slot,class,zlot_initarg_error_class).
struct_opv(e,claz_initarg_error,slot,initargs,zlot_initarg_error_initargs).
struct_opv(e,claz_initarg_error,subtypep,claz_program_error).
struct_opv(e,claz_initarg_error,subtypep,claz_reference_condition).
struct_opv(e,claz_initarg_error,super_priority,[claz_reference_condition,claz_program_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_inlining_dependency_failure,subtypep,claz_simple_style_warning).
struct_opv(e,claz_inlining_dependency_failure,super_priority,[claz_simple_style_warning,claz_simple_condition,claz_style_warning,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_input_error_in_compile_file,classname,"INPUT-ERROR-IN-COMPILE-FILE").
struct_opv(e,claz_input_error_in_compile_file,classof,claz_built_in_class).
struct_opv(e,claz_input_error_in_compile_file,name,"INVOKER",zlot_input_error_in_compile_file_invoker).
struct_opv(e,claz_input_error_in_compile_file,name,"LINE-C47-COL",zlot_input_error_in_compile_file_line_c47_col).
struct_opv(e,claz_input_error_in_compile_file,name,"POSITION",zlot_input_error_in_compile_file_position).
struct_opv(e,claz_input_error_in_compile_file,slot,invoker,zlot_input_error_in_compile_file_invoker).
struct_opv(e,claz_input_error_in_compile_file,slot,line_c47_col,zlot_input_error_in_compile_file_line_c47_col).
struct_opv(e,claz_input_error_in_compile_file,slot,position,zlot_input_error_in_compile_file_position).
struct_opv(e,claz_input_error_in_compile_file,subtypep,claz_encapsulated_condition).
struct_opv(e,claz_input_error_in_compile_file,subtypep,claz_reader_error).
struct_opv(e,claz_input_error_in_compile_file,super_priority,[claz_reader_error,claz_parse_error,claz_stream_error,claz_error,claz_serious_condition,claz_encapsulated_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_input_error_in_load,classname,"INPUT-ERROR-IN-LOAD").
struct_opv(e,claz_input_error_in_load,classof,claz_built_in_class).
struct_opv(e,claz_input_error_in_load,subtypep,claz_input_error_in_compile_file).
struct_opv(e,claz_input_error_in_load,super_priority,[claz_input_error_in_compile_file,claz_reader_error,claz_parse_error,claz_stream_error,claz_error,claz_serious_condition,claz_encapsulated_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_instance_structure_protocol_error,classname,"INSTANCE-STRUCTURE-PROTOCOL-ERROR").
struct_opv(e,claz_instance_structure_protocol_error,classof,claz_built_in_class).
struct_opv(e,claz_instance_structure_protocol_error,name,"FUN",zlot_instance_structure_protocol_error_fun).
struct_opv(e,claz_instance_structure_protocol_error,name,"SLOTD",zlot_instance_structure_protocol_error_slotd).
struct_opv(e,claz_instance_structure_protocol_error,slot,fun,zlot_instance_structure_protocol_error_fun).
struct_opv(e,claz_instance_structure_protocol_error,slot,slotd,zlot_instance_structure_protocol_error_slotd).
struct_opv(e,claz_instance_structure_protocol_error,subtypep,claz_error).
struct_opv(e,claz_instance_structure_protocol_error,subtypep,claz_reference_condition).
struct_opv(e,claz_instance_structure_protocol_error,super_priority,[claz_reference_condition,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_integrity_error,classname,"INTEGRITY-ERROR").
struct_opv(e,claz_integrity_error,classof,claz_built_in_class).
struct_opv(e,claz_integrity_error,subtypep,claz_prolog_error).
struct_opv(e,claz_interactive_interrupt,subtypep,claz_serious_condition).
struct_opv(e,claz_interactive_interrupt,subtypep,claz_system_condition).
struct_opv(e,claz_interactive_interrupt,super_priority,[claz_system_condition,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_interpreted_program_error,classname,"INTERPRETED-PROGRAM-ERROR").
struct_opv(e,claz_interpreted_program_error,classof,claz_built_in_class).
struct_opv(e,claz_interpreted_program_error,name,"FORM",zlot_interpreted_program_error_form).
struct_opv(e,claz_interpreted_program_error,slot,form,zlot_interpreted_program_error_form).
struct_opv(e,claz_interpreted_program_error,subtypep,claz_encapsulated_condition).
struct_opv(e,claz_interpreted_program_error,subtypep,claz_program_error).
struct_opv(e,claz_interpreted_program_error,subtypep,claz_simple_condition).
struct_opv(e,claz_interpreted_program_error,super_priority,[claz_program_error,claz_error,claz_serious_condition,claz_encapsulated_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_interpreted_program_error,super_priority,[claz_program_error,claz_error,claz_serious_condition,claz_simple_condition,claz_encapsulated_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_interpreter_env_too_complex_error,classname,"INTERPRETER-ENVIRONMENT-TOO-COMPLEX-ERROR").
struct_opv(e,claz_interpreter_env_too_complex_error,classof,claz_built_in_class).
struct_opv(e,claz_interpreter_env_too_complex_error,subtypep,claz_simple_error).
struct_opv(e,claz_interpreter_env_too_complex_error,super_priority,[claz_simple_error,claz_simple_condition,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_interpreter_unhandled_condition,classname,"INTERPRETER-UNHANDLED-CONDITION").
struct_opv(e,claz_interpreter_unhandled_condition,classof,claz_built_in_class).
struct_opv(e,claz_interpreter_unhandled_condition,name,"CONDITION",zlot_interpreter_unhandled_condition_condition).
struct_opv(e,claz_interpreter_unhandled_condition,returns,claz_t,zlot_interpreter_unhandled_condition_condition).
struct_opv(e,claz_interpreter_unhandled_condition,slot,condition,zlot_interpreter_unhandled_condition_condition).
struct_opv(e,claz_interrupt_condition,classname,"INTERRUPT-CONDITION").
struct_opv(e,claz_interrupt_condition,classof,claz_built_in_class).
struct_opv(e,claz_interrupt_condition,subtypep,claz_serious_condition).
struct_opv(e,claz_interrupt_condition,super_priority,[claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_interrupt_thread_error,classname,"INTERRUPT-THREAD-ERROR").
struct_opv(e,claz_interrupt_thread_error,classof,claz_built_in_class).
struct_opv(e,claz_interrupt_thread_error,subtypep,claz_thread_error).
struct_opv(e,claz_interrupt_thread_error,super_priority,[claz_thread_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_invalid_array(claz_error),classname,"INVALID-ARRAY-ERROR").
struct_opv(e,claz_invalid_array(claz_error),classof,claz_built_in_class).
struct_opv(e,claz_invalid_array(claz_error),subtypep,claz_error).
struct_opv(e,claz_invalid_array(claz_error),subtypep,claz_reference_condition).
struct_opv(e,claz_invalid_array(claz_error),super_priority,[claz_reference_condition,claz_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_invalid_array(claz_index_error),classname,"INVALID-ARRAY-INDEX-ERROR").
struct_opv(e,claz_invalid_array(claz_index_error),classof,claz_built_in_class).
struct_opv(e,claz_invalid_array(claz_index_error),name,"ARRAY",zlot_invalid_array_index_error_array).
struct_opv(e,claz_invalid_array(claz_index_error),name,"AXIS",zlot_invalid_array_index_error_axis).
struct_opv(e,claz_invalid_array(claz_index_error),slot,array,zlot_invalid_array_index_error_array).
struct_opv(e,claz_invalid_array(claz_index_error),slot,axis,zlot_invalid_array_index_error_axis).
struct_opv(e,claz_invalid_array(claz_index_error),subtypep,claz_error).
struct_opv(e,claz_invalid_array(claz_index_error),super_priority,[claz_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_invalid_control_stack_pointer,subtypep,claz_debug_error).
struct_opv(e,claz_invalid_control_stack_pointer,super_priority,[claz_debug_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_invalid_euc_jp_continuation_byte,subtypep,claz_octet_decoding_error).
struct_opv(e,claz_invalid_euc_jp_continuation_byte,super_priority,[claz_octet_decoding_error,claz_character_decoding_error,claz_character_coding_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_invalid_euc_jp_starter_byte,subtypep,claz_octet_decoding_error).
struct_opv(e,claz_invalid_euc_jp_starter_byte,super_priority,[claz_octet_decoding_error,claz_character_decoding_error,claz_character_coding_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_invalid_fasl,subtypep,claz_error).
struct_opv(e,claz_invalid_fasl,super_priority,[claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_invalid_fasl_features,super_priority,[claz_invalid_fasl,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_invalid_fasl_header,super_priority,[claz_invalid_fasl,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_invalid_fasl_implementation,super_priority,[claz_invalid_fasl,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_invalid_fasl_version,super_priority,[claz_invalid_fasl,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_invalid_gbk_continuation_byte,subtypep,claz_octet_decoding_error).
struct_opv(e,claz_invalid_gbk_continuation_byte,super_priority,[claz_octet_decoding_error,claz_character_decoding_error,claz_character_coding_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_invalid_gbk_starter_byte,subtypep,claz_octet_decoding_error).
struct_opv(e,claz_invalid_gbk_starter_byte,super_priority,[claz_octet_decoding_error,claz_character_decoding_error,claz_character_coding_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_invalid_method_initarg,subtypep,claz_simple_program_error).
struct_opv(e,claz_invalid_method_initarg,super_priority,[claz_simple_program_error,claz_simple_condition,claz_program_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_invalid_shift_jis_continuation_byte,subtypep,claz_octet_decoding_error).
struct_opv(e,claz_invalid_shift_jis_continuation_byte,super_priority,[claz_octet_decoding_error,claz_character_decoding_error,claz_character_coding_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_invalid_shift_jis_starter_byte,subtypep,claz_octet_decoding_error).
struct_opv(e,claz_invalid_shift_jis_starter_byte,super_priority,[claz_octet_decoding_error,claz_character_decoding_error,claz_character_coding_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_invalid_superclass,subtypep,claz_error).
struct_opv(e,claz_invalid_superclass,subtypep,claz_reference_condition).
struct_opv(e,claz_invalid_superclass,super_priority,[claz_reference_condition,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_invalid_utf8_continuation_byte,subtypep,claz_octet_decoding_error).
struct_opv(e,claz_invalid_utf8_continuation_byte,super_priority,[claz_octet_decoding_error,claz_character_decoding_error,claz_character_coding_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_invalid_utf8_starter_byte,subtypep,claz_octet_decoding_error).
struct_opv(e,claz_invalid_utf8_starter_byte,super_priority,[claz_octet_decoding_error,claz_character_decoding_error,claz_character_coding_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_invalid_value,subtypep,claz_debug_condition).
struct_opv(e,claz_invalid_value,super_priority,[claz_debug_condition,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_io_timeout,subtypep,claz_stream_error).
struct_opv(e,claz_io_timeout,super_priority,[claz_stream_error,claz_error,claz_timeout,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_join_thread_error,classname,"JOIN-THREAD-ERROR").
struct_opv(e,claz_join_thread_error,classof,claz_built_in_class).
struct_opv(e,claz_join_thread_error,name,"PROBLEM",zlot_join_thread_error_problem).
struct_opv(e,claz_join_thread_error,slot,problem,zlot_join_thread_error_problem).
struct_opv(e,claz_join_thread_error,subtypep,claz_thread_error).
struct_opv(e,claz_join_thread_error,super_priority,[claz_thread_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_keyword_error,classname,"KEYWORD-ERROR").
struct_opv(e,claz_keyword_error,classof,claz_built_in_class).
struct_opv(e,claz_keyword_error,subtypep,claz_error).
struct_opv(e,claz_keyword_error,subtypep,claz_program_error).
struct_opv(e,claz_keyword_error,super_priority,[claz_program_error,claz_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_lambda_list_unavailable,subtypep,claz_debug_condition).
struct_opv(e,claz_lambda_list_unavailable,super_priority,[claz_debug_condition,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_late_deprecation_warning,classname,"LATE-DEPRECATION-WARNING").
struct_opv(e,claz_late_deprecation_warning,classof,claz_built_in_class).
struct_opv(e,claz_late_deprecation_warning,subtypep,claz_deprecation_condition).
struct_opv(e,claz_late_deprecation_warning,subtypep,claz_warning).
struct_opv(e,claz_late_deprecation_warning,super_priority,[claz_warning,claz_deprecation_condition,claz_reference_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_layout_invalid,subtypep,claz_error).
struct_opv(e,claz_layout_invalid,super_priority,[claz_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_lexenv,name,"HANDLED-CONDITIONS",zlot_lexenv_handled_conditions).
struct_opv(e,claz_lexenv,slot,handled_conditions,zlot_lexenv_handled_conditions).
struct_opv(e,claz_lexical_env_too_complex,subtypep,claz_style_warning).
struct_opv(e,claz_lexical_env_too_complex,super_priority,[claz_style_warning,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_lisp_error,classname,"LISP-ERROR").
struct_opv(e,claz_lisp_error,classof,claz_built_in_class).
struct_opv(e,claz_lisp_error,subtypep,claz_serious_condition).
struct_opv(e,claz_local_argument_mismatch,subtypep,claz_reference_condition).
struct_opv(e,claz_local_argument_mismatch,subtypep,claz_simple_warning).
struct_opv(e,claz_local_argument_mismatch,super_priority,[claz_reference_condition,claz_simple_warning,claz_simple_condition,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_long_method_combination_error,classname,"LONG-METHOD-COMBINATION-ERROR").
struct_opv(e,claz_long_method_combination_error,classof,claz_built_in_class).
struct_opv(e,claz_long_method_combination_error,subtypep,claz_reference_condition).
struct_opv(e,claz_long_method_combination_error,subtypep,claz_simple_error).
struct_opv(e,claz_long_method_combination_error,super_priority,[claz_reference_condition,claz_simple_error,claz_simple_condition,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_macroexpand_hook_type_error,classname,"MACROEXPAND-HOOK-TYPE-ERROR").
struct_opv(e,claz_macroexpand_hook_type_error,classof,claz_built_in_class).
struct_opv(e,claz_macroexpand_hook_type_error,subtypep,claz_error).
struct_opv(e,claz_macroexpand_hook_type_error,super_priority,[claz_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_malformed_ascii,subtypep,claz_octet_decoding_error).
struct_opv(e,claz_malformed_ascii,super_priority,[claz_octet_decoding_error,claz_character_decoding_error,claz_character_coding_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_malformed_euc_jp,subtypep,claz_octet_decoding_error).
struct_opv(e,claz_malformed_euc_jp,super_priority,[claz_octet_decoding_error,claz_character_decoding_error,claz_character_coding_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_malformed_gbk,subtypep,claz_octet_decoding_error).
struct_opv(e,claz_malformed_gbk,super_priority,[claz_octet_decoding_error,claz_character_decoding_error,claz_character_coding_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_malformed_shift_jis,subtypep,claz_octet_decoding_error).
struct_opv(e,claz_malformed_shift_jis,super_priority,[claz_octet_decoding_error,claz_character_decoding_error,claz_character_coding_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_memory_fault_error,classname,"MEMORY-FAULT-ERROR").
struct_opv(e,claz_memory_fault_error,classof,claz_built_in_class).
struct_opv(e,claz_memory_fault_error,subtypep,claz_error).
struct_opv(e,claz_memory_fault_error,subtypep,claz_system_condition).
struct_opv(e,claz_memory_fault_error,super_priority,[claz_system_condition,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_metaobject_initialization_violation,subtypep,claz_reference_condition).
struct_opv(e,claz_metaobject_initialization_violation,subtypep,claz_simple_error).
struct_opv(e,claz_metaobject_initialization_violation,super_priority,[claz_reference_condition,claz_simple_error,claz_simple_condition,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_method_call_error,classname,"METHOD-CALL-ERROR").
struct_opv(e,claz_method_call_error,classof,claz_built_in_class).
struct_opv(e,claz_method_call_error,name,"ARGS",zlot_method_call_error_args).
struct_opv(e,claz_method_call_error,name,"GF",zlot_method_call_error_gf).
struct_opv(e,claz_method_call_error,name,"METHOD",zlot_method_call_error_method).
struct_opv(e,claz_method_call_error,slot,args,zlot_method_call_error_args).
struct_opv(e,claz_method_call_error,slot,gf,zlot_method_call_error_gf).
struct_opv(e,claz_method_call_error,slot,method,zlot_method_call_error_method).
struct_opv(e,claz_method_call_error,subtypep,claz_simple_error).
struct_opv(e,claz_method_call_error,super_priority,[claz_simple_error,claz_simple_condition,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_method_call_type_error,classname,"METHOD-CALL-TYPE-ERROR").
struct_opv(e,claz_method_call_type_error,classof,claz_built_in_class).
struct_opv(e,claz_method_call_type_error,subtypep,claz_method_call_error).
struct_opv(e,claz_method_call_type_error,subtypep,claz_simple_type_error).
struct_opv(e,claz_method_call_type_error,super_priority,[claz_simple_type_error,claz_method_call_error,claz_simple_error,claz_simple_condition,claz_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_missing_load_form,subtypep,claz_error).
struct_opv(e,claz_missing_load_form,super_priority,[claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_name_conflict,subtypep,claz_package_error).
struct_opv(e,claz_name_conflict,subtypep,claz_reference_condition).
struct_opv(e,claz_name_conflict,super_priority,[claz_reference_condition,claz_package_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_namestring_parse_error,classname,"NAMESTRING-PARSE-ERROR").
struct_opv(e,claz_namestring_parse_error,classof,claz_built_in_class).
struct_opv(e,claz_namestring_parse_error,name,"ARGS",zlot_namestring_parse_error_args).
struct_opv(e,claz_namestring_parse_error,name,"COMPLAINT",zlot_namestring_parse_error_complaint).
struct_opv(e,claz_namestring_parse_error,name,"NAMESTRING",zlot_namestring_parse_error_namestring).
struct_opv(e,claz_namestring_parse_error,name,"OFFSET",zlot_namestring_parse_error_offset).
struct_opv(e,claz_namestring_parse_error,slot,args,zlot_namestring_parse_error_args).
struct_opv(e,claz_namestring_parse_error,slot,complaint,zlot_namestring_parse_error_complaint).
struct_opv(e,claz_namestring_parse_error,slot,namestring,zlot_namestring_parse_error_namestring).
struct_opv(e,claz_namestring_parse_error,slot,offset,zlot_namestring_parse_error_offset).
struct_opv(e,claz_namestring_parse_error,subtypep,claz_parse_error).
struct_opv(e,claz_namestring_parse_error,super_priority,[claz_parse_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_new_value_specialization,subtypep,claz_error).
struct_opv(e,claz_new_value_specialization,subtypep,claz_reference_condition).
struct_opv(e,claz_new_value_specialization,super_priority,[claz_reference_condition,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_nil_array(claz_accessed_error),classname,"NIL-ARRAY-ACCESSED-ERROR").
struct_opv(e,claz_nil_array(claz_accessed_error),classof,claz_built_in_class).
struct_opv(e,claz_nil_array(claz_accessed_error),subtypep,claz_error).
struct_opv(e,claz_nil_array(claz_accessed_error),subtypep,claz_reference_condition).
struct_opv(e,claz_nil_array(claz_accessed_error),super_priority,[claz_reference_condition,claz_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_no_debug_blocks,subtypep,claz_debug_condition).
struct_opv(e,claz_no_debug_blocks,super_priority,[claz_debug_condition,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_no_debug_fun_returns,subtypep,claz_debug_condition).
struct_opv(e,claz_no_debug_fun_returns,super_priority,[claz_debug_condition,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_no_debug_vars,subtypep,claz_debug_condition).
struct_opv(e,claz_no_debug_vars,super_priority,[claz_debug_condition,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_no_primary_method,subtypep,claz_error).
struct_opv(e,claz_no_primary_method,subtypep,claz_reference_condition).
struct_opv(e,claz_no_primary_method,super_priority,[claz_reference_condition,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_obsolete_structure,subtypep,claz_error).
struct_opv(e,claz_obsolete_structure,super_priority,[claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_octet_decoding_error,classname,"OCTET-DECODING-ERROR").
struct_opv(e,claz_octet_decoding_error,classof,claz_built_in_class).
struct_opv(e,claz_octet_decoding_error,name,"ARRAY",zlot_octet_decoding_error_array).
struct_opv(e,claz_octet_decoding_error,name,"END",zlot_octet_decoding_error_end).
struct_opv(e,claz_octet_decoding_error,name,"EXTERNAL-FORMAT",zlot_octet_decoding_error_external_format).
struct_opv(e,claz_octet_decoding_error,name,"POSITION",zlot_octet_decoding_error_position).
struct_opv(e,claz_octet_decoding_error,name,"START",zlot_octet_decoding_error_start).
struct_opv(e,claz_octet_decoding_error,slot,array,zlot_octet_decoding_error_array).
struct_opv(e,claz_octet_decoding_error,slot,end,zlot_octet_decoding_error_end).
struct_opv(e,claz_octet_decoding_error,slot,external_format,zlot_octet_decoding_error_external_format).
struct_opv(e,claz_octet_decoding_error,slot,position,zlot_octet_decoding_error_position).
struct_opv(e,claz_octet_decoding_error,slot,start,zlot_octet_decoding_error_start).
struct_opv(e,claz_octet_decoding_error,subtypep,claz_character_decoding_error).
struct_opv(e,claz_octet_decoding_error,super_priority,[claz_character_decoding_error,claz_character_coding_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_octets_encoding_error,classname,"OCTETS-ENCODING-ERROR").
struct_opv(e,claz_octets_encoding_error,classof,claz_built_in_class).
struct_opv(e,claz_octets_encoding_error,name,"EXTERNAL-FORMAT",zlot_octets_encoding_error_external_format).
struct_opv(e,claz_octets_encoding_error,name,"POSITION",zlot_octets_encoding_error_position).
struct_opv(e,claz_octets_encoding_error,name,"STRING",zlot_octets_encoding_error_string).
struct_opv(e,claz_octets_encoding_error,slot,external_format,zlot_octets_encoding_error_external_format).
struct_opv(e,claz_octets_encoding_error,slot,position,zlot_octets_encoding_error_position).
struct_opv(e,claz_octets_encoding_error,slot,string,zlot_octets_encoding_error_string).
struct_opv(e,claz_octets_encoding_error,subtypep,claz_character_encoding_error).
struct_opv(e,claz_octets_encoding_error,super_priority,[claz_character_encoding_error,claz_character_coding_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_os_error,classname,"OS-ERROR").
struct_opv(e,claz_os_error,classof,claz_built_in_class).
struct_opv(e,claz_os_error,subtypep,claz_error).
struct_opv(e,claz_os_error,super_priority,[claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_overlong_utf8_sequence,subtypep,claz_octet_decoding_error).
struct_opv(e,claz_overlong_utf8_sequence,super_priority,[claz_octet_decoding_error,claz_character_decoding_error,claz_character_coding_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_package_at_variance,subtypep,claz_reference_condition).
struct_opv(e,claz_package_at_variance,subtypep,claz_simple_warning).
struct_opv(e,claz_package_at_variance,super_priority,[claz_reference_condition,claz_simple_warning,claz_simple_condition,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_package_at_variance_error,classname,"PACKAGE-AT-VARIANCE-ERROR").
struct_opv(e,claz_package_at_variance_error,classof,claz_built_in_class).
struct_opv(e,claz_package_at_variance_error,subtypep,claz_package_error).
struct_opv(e,claz_package_at_variance_error,subtypep,claz_reference_condition).
struct_opv(e,claz_package_at_variance_error,subtypep,claz_simple_condition).
struct_opv(e,claz_package_at_variance_error,super_priority,[claz_reference_condition,claz_simple_condition,claz_package_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_package_error,classname,"PACKAGE-ERROR").
struct_opv(e,claz_package_error,classof,claz_built_in_class).
struct_opv(e,claz_package_error,name,"PACKAGE",zlot_package_error_package).
struct_opv(e,claz_package_error,slot,package,zlot_package_error_package).
struct_opv(e,claz_package_error,subtypep,claz_error).
struct_opv(e,claz_package_error,subtypep,claz_lisp_error).
struct_opv(e,claz_package_error,super_priority,[claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_package_error,super_priority,[claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_package_lock_violation,subtypep,claz_package_error).
struct_opv(e,claz_package_lock_violation,subtypep,claz_reference_condition).
struct_opv(e,claz_package_lock_violation,subtypep,claz_simple_condition).
struct_opv(e,claz_package_lock_violation,super_priority,[claz_package_error,claz_error,claz_serious_condition,claz_reference_condition,claz_simple_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_package_locked_error,classname,"PACKAGE-LOCKED-ERROR").
struct_opv(e,claz_package_locked_error,classof,claz_built_in_class).
struct_opv(e,claz_package_locked_error,subtypep,claz_package_lock_violation).
struct_opv(e,claz_package_locked_error,super_priority,[claz_package_lock_violation,claz_package_error,claz_error,claz_serious_condition,claz_reference_condition,claz_simple_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_parse_deprecated_type,subtypep,claz_condition).
struct_opv(e,claz_parse_deprecated_type,super_priority,[claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_parse_error,classname,"PARSE-ERROR").
struct_opv(e,claz_parse_error,classof,claz_built_in_class).
struct_opv(e,claz_parse_error,subtypep,claz_error).
struct_opv(e,claz_parse_error,subtypep,claz_lisp_error).
struct_opv(e,claz_parse_error,super_priority,[claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_parse_error,super_priority,[claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_parse_unknown_type,subtypep,claz_condition).
struct_opv(e,claz_parse_unknown_type,super_priority,[claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_print_not_readable,subtypep,claz_error).
struct_opv(e,claz_print_not_readable,subtypep,claz_lisp_error).
struct_opv(e,claz_print_not_readable,super_priority,[claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_print_not_readable,super_priority,[claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_print_object_stream_specializer,subtypep,claz_reference_condition).
struct_opv(e,claz_print_object_stream_specializer,subtypep,claz_simple_warning).
struct_opv(e,claz_print_object_stream_specializer,super_priority,[claz_reference_condition,claz_simple_warning,claz_simple_condition,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_process,name,"ERROR",zlot_process_error).
struct_opv(e,claz_process,slot,error,zlot_process_error).
struct_opv(e,claz_processing_terminated,subtypep,claz_prolog_error).
struct_opv(e,claz_proclamation_mismatch,subtypep,claz_condition).
struct_opv(e,claz_proclamation_mismatch,super_priority,[claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_proclamation_mismatch,super_priority,[claz_proclamation_mismatch,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_proclamation_mismatch_warning,classname,"PROCLAMATION-MISMATCH-WARNING").
struct_opv(e,claz_proclamation_mismatch_warning,classof,claz_built_in_class).
struct_opv(e,claz_proclamation_mismatch_warning,subtypep,claz_proclamation_mismatch).
struct_opv(e,claz_proclamation_mismatch_warning,subtypep,claz_style_warning).
struct_opv(e,claz_proclamation_mismatch_warning,super_priority,[claz_style_warning,claz_warning,claz_proclamation_mismatch,claz_proclamation_mismatch,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_program_error,classname,"PROGRAM-ERROR").
struct_opv(e,claz_program_error,classof,claz_built_in_class).
struct_opv(e,claz_program_error,subtypep,claz_error).
struct_opv(e,claz_program_error,subtypep,claz_lisp_error).
struct_opv(e,claz_program_error,super_priority,[claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_program_error,super_priority,[claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_prolog_error,classname,"PROLOG-ERROR").
struct_opv(e,claz_prolog_error,classof,claz_built_in_class).
struct_opv(e,claz_protocol_unimplemented,subtypep,claz_error).
struct_opv(e,claz_protocol_unimplemented,subtypep,claz_reference_condition).
struct_opv(e,claz_protocol_unimplemented,super_priority,[claz_error,claz_error,claz_serious_condition,claz_reference_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_racf_malformed_input_exception,classname,"RACF-MALFORMED-INPUT-EXCEPTION").
struct_opv(e,claz_racf_malformed_input_exception,classof,claz_built_in_class).
struct_opv(e,claz_racf_malformed_input_exception,name,"CHARACTER",zlot_racf_malformed_input_exception_character).
struct_opv(e,claz_racf_malformed_input_exception,name,"CHARSET-NAME",zlot_racf_malformed_input_exception_charset_name).
struct_opv(e,claz_racf_malformed_input_exception,name,"POSITION",zlot_racf_malformed_input_exception_position).
struct_opv(e,claz_racf_malformed_input_exception,readonly,t,zlot_racf_malformed_input_exception_character).
struct_opv(e,claz_racf_malformed_input_exception,readonly,t,zlot_racf_malformed_input_exception_charset_name).
struct_opv(e,claz_racf_malformed_input_exception,readonly,t,zlot_racf_malformed_input_exception_position).
struct_opv(e,claz_racf_malformed_input_exception,returns,claz_char_code,zlot_racf_malformed_input_exception_character).
struct_opv(e,claz_racf_malformed_input_exception,returns,claz_integer,zlot_racf_malformed_input_exception_position).
struct_opv(e,claz_racf_malformed_input_exception,returns,claz_string,zlot_racf_malformed_input_exception_charset_name).
struct_opv(e,claz_racf_malformed_input_exception,slot,character,zlot_racf_malformed_input_exception_character).
struct_opv(e,claz_racf_malformed_input_exception,slot,charset_name,zlot_racf_malformed_input_exception_charset_name).
struct_opv(e,claz_racf_malformed_input_exception,slot,position,zlot_racf_malformed_input_exception_position).
struct_opv(e,claz_racf_malformed_input_exception,subtypep,claz_prolog_malformed_input_exception).
struct_opv(e,claz_reader_eof_error,classname,"READER-EOF-ERROR").
struct_opv(e,claz_reader_eof_error,classof,claz_built_in_class).
struct_opv(e,claz_reader_eof_error,name,"CONTEXT",zlot_reader_eof_error_context).
struct_opv(e,claz_reader_eof_error,slot,context,zlot_reader_eof_error_context).
struct_opv(e,claz_reader_eof_error,subtypep,claz_end_of_file).
struct_opv(e,claz_reader_eof_error,super_priority,[claz_end_of_file,claz_stream_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_reader_error,classname,"READER-ERROR").
struct_opv(e,claz_reader_error,classof,claz_built_in_class).
struct_opv(e,claz_reader_error,subtypep,claz_parse_error).
struct_opv(e,claz_reader_error,subtypep,claz_stream_error).
struct_opv(e,claz_reader_error,super_priority,[claz_parse_error,claz_stream_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_reader_error,super_priority,[claz_parse_error,claz_stream_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_reader_impossible_number_error,classname,"READER-IMPOSSIBLE-NUMBER-ERROR").
struct_opv(e,claz_reader_impossible_number_error,classof,claz_built_in_class).
struct_opv(e,claz_reader_impossible_number_error,name,"ERROR",zlot_reader_impossible_number_error_error).
struct_opv(e,claz_reader_impossible_number_error,slot,error,zlot_reader_impossible_number_error_error).
struct_opv(e,claz_reader_impossible_number_error,subtypep,claz_simple_reader_error).
struct_opv(e,claz_reader_impossible_number_error,super_priority,[claz_simple_reader_error,claz_reader_error,claz_parse_error,claz_stream_error,claz_error,claz_serious_condition,claz_simple_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_redefinition_warning,classname,"REDEFINITION-WARNING").
struct_opv(e,claz_redefinition_warning,classof,claz_built_in_class).
struct_opv(e,claz_redefinition_warning,name,"NAME",zlot_redefinition_warning_name).
struct_opv(e,claz_redefinition_warning,name,"NEW-LOCATION",zlot_redefinition_warning_new_location).
struct_opv(e,claz_redefinition_warning,slot,name,zlot_redefinition_warning_name).
struct_opv(e,claz_redefinition_warning,slot,new_location,zlot_redefinition_warning_new_location).
struct_opv(e,claz_redefinition_warning,subtypep,claz_style_warning).
struct_opv(e,claz_redefinition_warning,super_priority,[claz_style_warning,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_redefinition_with_defgeneric,subtypep,claz_redefinition_warning).
struct_opv(e,claz_redefinition_with_defgeneric,super_priority,[claz_redefinition_warning,claz_style_warning,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_redefinition_with_defmacro,subtypep,claz_function_redefinition_warning).
struct_opv(e,claz_redefinition_with_defmacro,super_priority,[claz_function_redefinition_warning,claz_redefinition_warning,claz_style_warning,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_redefinition_with_defmethod,subtypep,claz_redefinition_warning).
struct_opv(e,claz_redefinition_with_defmethod,super_priority,[claz_redefinition_warning,claz_style_warning,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_redefinition_with_deftransform,subtypep,claz_redefinition_warning).
struct_opv(e,claz_redefinition_with_deftransform,super_priority,[claz_redefinition_warning,claz_style_warning,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_redefinition_with_defun,subtypep,claz_function_redefinition_warning).
struct_opv(e,claz_redefinition_with_defun,super_priority,[claz_function_redefinition_warning,claz_redefinition_warning,claz_style_warning,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_reference_condition,classname,"REFERENCE-CONDITION").
struct_opv(e,claz_reference_condition,classof,claz_built_in_class).
struct_opv(e,claz_reference_condition,name,"REFERENCES",zlot_reference_condition_references).
struct_opv(e,claz_reference_condition,slot,references,zlot_reference_condition_references).
struct_opv(e,claz_reference_condition,subtypep,claz_condition).
struct_opv(e,claz_reference_condition,super_priority,[claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_restart,name,"ASSOCIATED-CONDITIONS",zlot_restart_associated_conditions).
struct_opv(e,claz_restart,slot,associated_conditions,zlot_restart_associated_conditions).
struct_opv(e,claz_same_file_redefinition_warning,classname,"SAME-FILE-REDEFINITION-WARNING").
struct_opv(e,claz_same_file_redefinition_warning,classof,claz_built_in_class).
struct_opv(e,claz_same_file_redefinition_warning,name,"NAME",zlot_same_file_redefinition_warning_name).
struct_opv(e,claz_same_file_redefinition_warning,slot,name,zlot_same_file_redefinition_warning_name).
struct_opv(e,claz_same_file_redefinition_warning,subtypep,claz_style_warning).
struct_opv(e,claz_same_file_redefinition_warning,super_priority,[claz_style_warning,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_save_condition,classname,"SAVE-CONDITION").
struct_opv(e,claz_save_condition,classof,claz_built_in_class).
struct_opv(e,claz_save_condition,subtypep,claz_reference_condition).
struct_opv(e,claz_save_condition,super_priority,[claz_reference_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_save_error,classname,"SAVE-ERROR").
struct_opv(e,claz_save_error,classof,claz_built_in_class).
struct_opv(e,claz_save_error,subtypep,claz_error).
struct_opv(e,claz_save_error,subtypep,claz_save_condition).
struct_opv(e,claz_save_error,super_priority,[claz_error,claz_serious_condition,claz_save_condition,claz_reference_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_save_with_multiple_threads_error,classname,"SAVE-WITH-MULTIPLE-THREADS-ERROR").
struct_opv(e,claz_save_with_multiple_threads_error,classof,claz_built_in_class).
struct_opv(e,claz_save_with_multiple_threads_error,name,"INTERACTIVE-THREAD",zlot_save_with_multiple_threads_error_interactive_thread).
struct_opv(e,claz_save_with_multiple_threads_error,name,"OTHER-THREADS",zlot_save_with_multiple_threads_error_other_threads).
struct_opv(e,claz_save_with_multiple_threads_error,slot,interactive_thread,zlot_save_with_multiple_threads_error_interactive_thread).
struct_opv(e,claz_save_with_multiple_threads_error,slot,other_threads,zlot_save_with_multiple_threads_error_other_threads).
struct_opv(e,claz_save_with_multiple_threads_error,subtypep,claz_save_error).
struct_opv(e,claz_save_with_multiple_threads_error,super_priority,[claz_save_error,claz_error,claz_serious_condition,claz_save_condition,claz_reference_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_serious_condition,classname,"SERIOUS-CONDITION").
struct_opv(e,claz_serious_condition,classof,claz_built_in_class).
struct_opv(e,claz_serious_condition,subtypep,claz_condition).
struct_opv(e,claz_serious_condition,super_priority,[claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_serious_condition,super_priority,[claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_simple_argument_list_dotted,subtypep,claz_simple_error).
struct_opv(e,claz_simple_argument_list_dotted,super_priority,[claz_simple_error,claz_simple_condition,claz_argument_list_dotted,claz_program_error,claz_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_simple_arithmetic_error,classname,"SIMPLE-ARITHMETIC-ERROR").
struct_opv(e,claz_simple_arithmetic_error,classof,claz_built_in_class).
struct_opv(e,claz_simple_arithmetic_error,subtypep,claz_arithmetic_error).
struct_opv(e,claz_simple_arithmetic_error,subtypep,claz_simple_error).
struct_opv(e,claz_simple_arithmetic_error,super_priority,[claz_simple_error,claz_simple_condition,claz_arithmetic_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_simple_cell_error,classname,"SIMPLE-CELL-ERROR").
struct_opv(e,claz_simple_cell_error,classof,claz_built_in_class).
struct_opv(e,claz_simple_cell_error,subtypep,claz_cell_error).
struct_opv(e,claz_simple_cell_error,subtypep,claz_simple_error).
struct_opv(e,claz_simple_cell_error,super_priority,[claz_simple_error,claz_simple_condition,claz_cell_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_simple_charset_type_error,classname,"SIMPLE-CHARSET-TYPE-ERROR").
struct_opv(e,claz_simple_charset_type_error,classof,claz_built_in_class).
struct_opv(e,claz_simple_charset_type_error,subtypep,claz_charset_type_error).
struct_opv(e,claz_simple_charset_type_error,subtypep,claz_simple_error).
struct_opv(e,claz_simple_charset_type_error,super_priority,[claz_simple_error,claz_simple_condition,claz_charset_type_error,claz_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_simple_clos_warning,classname,"SIMPLE-CLOS-WARNING").
struct_opv(e,claz_simple_clos_warning,classof,claz_built_in_class).
struct_opv(e,claz_simple_clos_warning,subtypep,claz_clos_warning).
struct_opv(e,claz_simple_compiler_note,subtypep,claz_simple_condition).
struct_opv(e,claz_simple_compiler_note,super_priority,[claz_simple_condition,claz_compiler_note,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_simple_condition,classname,"SIMPLE-CONDITION").
struct_opv(e,claz_simple_condition,classof,claz_built_in_class).
struct_opv(e,claz_simple_condition,name,"FORMAT-ARGUMENTS",zlot_simple_condition_format_arguments).
struct_opv(e,claz_simple_condition,name,"FORMAT-CONTROL",zlot_simple_condition_format_control).
struct_opv(e,claz_simple_condition,slot,format_arguments,zlot_simple_condition_format_arguments).
struct_opv(e,claz_simple_condition,slot,format_control,zlot_simple_condition_format_control).
struct_opv(e,claz_simple_condition,subtypep,claz_condition).
struct_opv(e,claz_simple_condition,super_priority,[claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_simple_condition,super_priority,[claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_simple_control_error,classname,"SIMPLE-CONTROL-ERROR").
struct_opv(e,claz_simple_control_error,classof,claz_built_in_class).
struct_opv(e,claz_simple_control_error,subtypep,claz_control_error).
struct_opv(e,claz_simple_control_error,subtypep,claz_simple_condition).
struct_opv(e,claz_simple_control_error,subtypep,claz_simple_error).
struct_opv(e,claz_simple_control_error,super_priority,[claz_simple_condition,claz_control_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_simple_control_error,super_priority,[claz_simple_error,claz_simple_condition,claz_control_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_simple_division_by_zero,subtypep,claz_simple_error).
struct_opv(e,claz_simple_division_by_zero,super_priority,[claz_simple_error,claz_simple_condition,claz_division_by_zero,claz_arithmetic_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_simple_end_of_file,subtypep,claz_simple_error).
struct_opv(e,claz_simple_end_of_file,super_priority,[claz_simple_error,claz_simple_condition,claz_end_of_file,claz_stream_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_simple_error,classname,"SIMPLE-ERROR").
struct_opv(e,claz_simple_error,classof,claz_built_in_class).
struct_opv(e,claz_simple_error,subtypep,claz_error).
struct_opv(e,claz_simple_error,subtypep,claz_lisp_error).
struct_opv(e,claz_simple_error,subtypep,claz_simple_condition).
struct_opv(e,claz_simple_error,super_priority,[claz_simple_condition,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_simple_error,super_priority,[claz_simple_condition,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_simple_file_error,classname,"SIMPLE-FILE-ERROR").
struct_opv(e,claz_simple_file_error,classof,claz_built_in_class).
struct_opv(e,claz_simple_file_error,subtypep,claz_file_error).
struct_opv(e,claz_simple_file_error,subtypep,claz_simple_condition).
struct_opv(e,claz_simple_file_error,subtypep,claz_simple_error).
struct_opv(e,claz_simple_file_error,super_priority,[claz_simple_condition,claz_file_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_simple_file_error,super_priority,[claz_simple_error,claz_simple_condition,claz_file_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_simple_floating_point_overflow,classname,"SIMPLE-FLOATING-POINT-OVERFLOW").
struct_opv(e,claz_simple_floating_point_overflow,classof,claz_built_in_class).
struct_opv(e,claz_simple_floating_point_overflow,subtypep,claz_floating_point_overflow).
struct_opv(e,claz_simple_floating_point_underflow,classname,"SIMPLE-FLOATING-POINT-UNDERFLOW").
struct_opv(e,claz_simple_floating_point_underflow,classof,claz_built_in_class).
struct_opv(e,claz_simple_floating_point_underflow,subtypep,claz_floating_point_underflow).
struct_opv(e,claz_simple_gf_already_called_warning,classname,"SIMPLE-GF-ALREADY-CALLED-WARNING").
struct_opv(e,claz_simple_gf_already_called_warning,classof,claz_built_in_class).
struct_opv(e,claz_simple_gf_already_called_warning,subtypep,claz_gf_already_called_warning).
struct_opv(e,claz_simple_gf_replacing_method_warning,classname,"SIMPLE-GF-REPLACING-METHOD-WARNING").
struct_opv(e,claz_simple_gf_replacing_method_warning,classof,claz_built_in_class).
struct_opv(e,claz_simple_gf_replacing_method_warning,subtypep,claz_gf_replacing_method_warning).
struct_opv(e,claz_simple_interrupt_condition,classname,"SIMPLE-INTERRUPT-CONDITION").
struct_opv(e,claz_simple_interrupt_condition,classof,claz_built_in_class).
struct_opv(e,claz_simple_interrupt_condition,subtypep,claz_interrupt_condition).
struct_opv(e,claz_simple_interrupt_condition,subtypep,claz_simple_condition).
struct_opv(e,claz_simple_interrupt_condition,super_priority,[claz_simple_condition,claz_interrupt_condition,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_simple_keyword_error,classname,"SIMPLE-KEYWORD-ERROR").
struct_opv(e,claz_simple_keyword_error,classof,claz_built_in_class).
struct_opv(e,claz_simple_keyword_error,subtypep,claz_keyword_error).
struct_opv(e,claz_simple_keyword_error,subtypep,claz_simple_error).
struct_opv(e,claz_simple_keyword_error,super_priority,[claz_simple_error,claz_simple_condition,claz_keyword_error,claz_program_error,claz_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_simple_missing_load_form,subtypep,claz_simple_error).
struct_opv(e,claz_simple_missing_load_form,super_priority,[claz_simple_error,claz_simple_condition,claz_missing_load_form,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_simple_os_error,classname,"SIMPLE-OS-ERROR").
struct_opv(e,claz_simple_os_error,classof,claz_built_in_class).
struct_opv(e,claz_simple_os_error,subtypep,claz_os_error).
struct_opv(e,claz_simple_os_error,subtypep,claz_simple_error).
struct_opv(e,claz_simple_os_error,super_priority,[claz_simple_error,claz_simple_condition,claz_os_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_simple_package_error,classname,"SIMPLE-PACKAGE-ERROR").
struct_opv(e,claz_simple_package_error,classof,claz_built_in_class).
struct_opv(e,claz_simple_package_error,subtypep,claz_package_error).
struct_opv(e,claz_simple_package_error,subtypep,claz_simple_condition).
struct_opv(e,claz_simple_package_error,subtypep,claz_simple_error).
struct_opv(e,claz_simple_package_error,super_priority,[claz_simple_condition,claz_package_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_simple_package_error,super_priority,[claz_simple_error,claz_simple_condition,claz_package_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_simple_parse_error,classname,"SIMPLE-PARSE-ERROR").
struct_opv(e,claz_simple_parse_error,classof,claz_built_in_class).
struct_opv(e,claz_simple_parse_error,subtypep,claz_parse_error).
struct_opv(e,claz_simple_parse_error,subtypep,claz_simple_condition).
struct_opv(e,claz_simple_parse_error,subtypep,claz_simple_error).
struct_opv(e,claz_simple_parse_error,super_priority,[claz_simple_condition,claz_parse_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_simple_parse_error,super_priority,[claz_simple_error,claz_simple_condition,claz_parse_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_simple_print_not_readable,subtypep,claz_simple_error).
struct_opv(e,claz_simple_print_not_readable,super_priority,[claz_simple_error,claz_simple_condition,claz_print_not_readable,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_simple_program_error,classname,"SIMPLE-PROGRAM-ERROR").
struct_opv(e,claz_simple_program_error,classof,claz_built_in_class).
struct_opv(e,claz_simple_program_error,subtypep,claz_program_error).
struct_opv(e,claz_simple_program_error,subtypep,claz_simple_condition).
struct_opv(e,claz_simple_program_error,subtypep,claz_simple_error).
struct_opv(e,claz_simple_program_error,super_priority,[claz_simple_condition,claz_program_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_simple_program_error,super_priority,[claz_simple_error,claz_simple_condition,claz_program_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_simple_reader_error,classname,"SIMPLE-READER-ERROR").
struct_opv(e,claz_simple_reader_error,classof,claz_built_in_class).
struct_opv(e,claz_simple_reader_error,subtypep,claz_reader_error).
struct_opv(e,claz_simple_reader_error,subtypep,claz_simple_condition).
struct_opv(e,claz_simple_reader_error,subtypep,claz_simple_error).
struct_opv(e,claz_simple_reader_error,super_priority,[claz_reader_error,claz_parse_error,claz_stream_error,claz_error,claz_serious_condition,claz_simple_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_simple_reader_error,super_priority,[claz_simple_error,claz_simple_condition,claz_reader_error,claz_parse_error,claz_stream_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_simple_reader_package_error,classname,"SIMPLE-READER-PACKAGE-ERROR").
struct_opv(e,claz_simple_reader_package_error,classof,claz_built_in_class).
struct_opv(e,claz_simple_reader_package_error,subtypep,claz_package_error).
struct_opv(e,claz_simple_reader_package_error,subtypep,claz_simple_reader_error).
struct_opv(e,claz_simple_reader_package_error,super_priority,[claz_simple_reader_error,claz_reader_error,claz_parse_error,claz_stream_error,claz_simple_condition,claz_package_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_simple_reference_error,classname,"SIMPLE-REFERENCE-ERROR").
struct_opv(e,claz_simple_reference_error,classof,claz_built_in_class).
struct_opv(e,claz_simple_reference_error,subtypep,claz_reference_condition).
struct_opv(e,claz_simple_reference_error,subtypep,claz_simple_error).
struct_opv(e,claz_simple_reference_error,super_priority,[claz_reference_condition,claz_simple_error,claz_simple_condition,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_simple_reference_warning,classname,"SIMPLE-REFERENCE-WARNING").
struct_opv(e,claz_simple_reference_warning,classof,claz_built_in_class).
struct_opv(e,claz_simple_reference_warning,subtypep,claz_simple_warning).
struct_opv(e,claz_simple_serious_condition,classname,"SIMPLE-SERIOUS-CONDITION").
struct_opv(e,claz_simple_serious_condition,classof,claz_built_in_class).
struct_opv(e,claz_simple_serious_condition,subtypep,claz_serious_condition).
struct_opv(e,claz_simple_serious_condition,subtypep,claz_simple_condition).
struct_opv(e,claz_simple_serious_condition,super_priority,[claz_simple_condition,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_simple_source_program_error,classname,"SIMPLE-SOURCE-PROGRAM-ERROR").
struct_opv(e,claz_simple_source_program_error,classof,claz_built_in_class).
struct_opv(e,claz_simple_source_program_error,subtypep,claz_simple_error).
struct_opv(e,claz_simple_source_program_error,subtypep,claz_source_program_error).
struct_opv(e,claz_simple_source_program_error,super_priority,[claz_simple_error,claz_simple_condition,claz_source_program_error,claz_program_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_simple_storage_condition,classname,"SIMPLE-STORAGE-CONDITION").
struct_opv(e,claz_simple_storage_condition,classof,claz_built_in_class).
struct_opv(e,claz_simple_storage_condition,subtypep,claz_simple_condition).
struct_opv(e,claz_simple_storage_condition,subtypep,claz_storage_condition).
struct_opv(e,claz_simple_storage_condition,super_priority,[claz_simple_condition,claz_storage_condition,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_simple_storage_condition,super_priority,[claz_storage_condition,claz_serious_condition,claz_simple_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_simple_stream_error,classname,"SIMPLE-STREAM-ERROR").
struct_opv(e,claz_simple_stream_error,classof,claz_built_in_class).
struct_opv(e,claz_simple_stream_error,subtypep,claz_simple_condition).
struct_opv(e,claz_simple_stream_error,subtypep,claz_simple_error).
struct_opv(e,claz_simple_stream_error,subtypep,claz_stream_error).
struct_opv(e,claz_simple_stream_error,super_priority,[claz_simple_condition,claz_stream_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_simple_stream_error,super_priority,[claz_simple_error,claz_simple_condition,claz_stream_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_simple_style_warning,classname,"SIMPLE-STYLE-WARNING").
struct_opv(e,claz_simple_style_warning,classof,claz_built_in_class).
struct_opv(e,claz_simple_style_warning,subtypep,claz_style_warning).
struct_opv(e,claz_simple_thread_error,classname,"SIMPLE-THREAD-ERROR").
struct_opv(e,claz_simple_thread_error,classof,claz_built_in_class).
struct_opv(e,claz_simple_thread_error,subtypep,claz_simple_condition).
struct_opv(e,claz_simple_thread_error,subtypep,claz_thread_error).
struct_opv(e,claz_simple_thread_error,super_priority,[claz_thread_error,claz_error,claz_serious_condition,claz_simple_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_simple_type_error,classname,"SIMPLE-TYPE-ERROR").
struct_opv(e,claz_simple_type_error,classof,claz_built_in_class).
struct_opv(e,claz_simple_type_error,subtypep,claz_error).
struct_opv(e,claz_simple_type_error,subtypep,claz_simple_condition).
struct_opv(e,claz_simple_type_error,super_priority,[claz_simple_condition,claz_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_simple_type_error,super_priority,[claz_simple_condition,claz_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_simple_unbound_slot,subtypep,claz_simple_error).
struct_opv(e,claz_simple_unbound_slot,super_priority,[claz_simple_error,claz_simple_condition,claz_unbound_slot,claz_cell_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_simple_unbound_variable,subtypep,claz_simple_error).
struct_opv(e,claz_simple_unbound_variable,super_priority,[claz_simple_error,claz_simple_condition,claz_unbound_variable,claz_cell_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_simple_undefined_function,subtypep,claz_simple_error).
struct_opv(e,claz_simple_undefined_function,super_priority,[claz_simple_error,claz_simple_condition,claz_undefined_function,claz_cell_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_simple_warning,classname,"SIMPLE-WARNING").
struct_opv(e,claz_simple_warning,classof,claz_built_in_class).
struct_opv(e,claz_simple_warning,subtypep,claz_warning).
struct_opv(e,claz_slotd_initialization_error,classname,"SLOTD-INITIALIZATION-ERROR").
struct_opv(e,claz_slotd_initialization_error,classof,claz_built_in_class).
struct_opv(e,claz_slotd_initialization_error,name,"INITARG",zlot_slotd_initialization_error_initarg).
struct_opv(e,claz_slotd_initialization_error,name,"KIND",zlot_slotd_initialization_error_kind).
struct_opv(e,claz_slotd_initialization_error,name,"VALUE",zlot_slotd_initialization_error_value).
struct_opv(e,claz_slotd_initialization_error,slot,initarg,zlot_slotd_initialization_error_initarg).
struct_opv(e,claz_slotd_initialization_error,slot,kind,zlot_slotd_initialization_error_kind).
struct_opv(e,claz_slotd_initialization_error,slot,value,zlot_slotd_initialization_error_value).
struct_opv(e,claz_slotd_initialization_error,subtypep,claz_error).
struct_opv(e,claz_slotd_initialization_error,subtypep,claz_reference_condition).
struct_opv(e,claz_slotd_initialization_error,super_priority,[claz_reference_condition,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_slotd_initialization_type_error,classname,"SLOTD-INITIALIZATION-TYPE-ERROR").
struct_opv(e,claz_slotd_initialization_type_error,classof,claz_built_in_class).
struct_opv(e,claz_slotd_initialization_type_error,name,"VALUE",zlot_slotd_initialization_type_error_value).
struct_opv(e,claz_slotd_initialization_type_error,slot,value,zlot_slotd_initialization_type_error_value).
struct_opv(e,claz_slotd_initialization_type_error,subtypep,claz_error).
struct_opv(e,claz_slotd_initialization_type_error,subtypep,claz_slotd_initialization_error).
struct_opv(e,claz_slotd_initialization_type_error,super_priority,[claz_slotd_initialization_error,claz_reference_condition,claz_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_source_program_error,classname,"SOURCE-PROGRAM-ERROR").
struct_opv(e,claz_source_program_error,classof,claz_built_in_class).
struct_opv(e,claz_source_program_error,name,"DETAIL",zlot_source_program_error_detail).
struct_opv(e,claz_source_program_error,name,"FORM",zlot_source_program_error_form).
struct_opv(e,claz_source_program_error,slot,detail,zlot_source_program_error_detail).
struct_opv(e,claz_source_program_error,slot,form,zlot_source_program_error_form).
struct_opv(e,claz_source_program_error,subtypep,claz_program_error).
struct_opv(e,claz_source_program_error,super_priority,[claz_program_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_special_form_function,super_priority,[claz_undefined_function,claz_cell_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_specialized_lambda_list_error,classname,"SPECIALIZED-LAMBDA-LIST-ERROR").
struct_opv(e,claz_specialized_lambda_list_error,classof,claz_built_in_class).
struct_opv(e,claz_specialized_lambda_list_error,subtypep,claz_reference_condition).
struct_opv(e,claz_specialized_lambda_list_error,subtypep,claz_simple_program_error).
struct_opv(e,claz_specialized_lambda_list_error,super_priority,[claz_reference_condition,claz_simple_program_error,claz_simple_condition,claz_program_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_standard_pprint_dispatch_table_modified_error,classname,"STANDARD-PPRINT-DISPATCH-TABLE-MODIFIED-ERROR").
struct_opv(e,claz_standard_pprint_dispatch_table_modified_error,classof,claz_built_in_class).
struct_opv(e,claz_standard_pprint_dispatch_table_modified_error,name,"OPERATION",zlot_standard_pprint_dispatch_table_modified_error_operation).
struct_opv(e,claz_standard_pprint_dispatch_table_modified_error,slot,operation,zlot_standard_pprint_dispatch_table_modified_error_operation).
struct_opv(e,claz_standard_pprint_dispatch_table_modified_error,subtypep,claz_error).
struct_opv(e,claz_standard_pprint_dispatch_table_modified_error,subtypep,claz_reference_condition).
struct_opv(e,claz_standard_pprint_dispatch_table_modified_error,super_priority,[claz_reference_condition,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_standard_readtable_modified_error,classname,"STANDARD-READTABLE-MODIFIED-ERROR").
struct_opv(e,claz_standard_readtable_modified_error,classof,claz_built_in_class).
struct_opv(e,claz_standard_readtable_modified_error,name,"OPERATION",zlot_standard_readtable_modified_error_operation).
struct_opv(e,claz_standard_readtable_modified_error,slot,operation,zlot_standard_readtable_modified_error_operation).
struct_opv(e,claz_standard_readtable_modified_error,subtypep,claz_error).
struct_opv(e,claz_standard_readtable_modified_error,subtypep,claz_reference_condition).
struct_opv(e,claz_standard_readtable_modified_error,super_priority,[claz_reference_condition,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_step_condition,classname,"STEP-CONDITION").
struct_opv(e,claz_step_condition,classof,claz_built_in_class).
struct_opv(e,claz_step_condition,name,"FORM",zlot_step_condition_form).
struct_opv(e,claz_step_condition,slot,form,zlot_step_condition_form).
struct_opv(e,claz_step_condition,subtypep,claz_condition).
struct_opv(e,claz_step_condition,super_priority,[claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_step_finished_condition,classname,"STEP-FINISHED-CONDITION").
struct_opv(e,claz_step_finished_condition,classof,claz_built_in_class).
struct_opv(e,claz_step_finished_condition,subtypep,claz_step_condition).
struct_opv(e,claz_step_finished_condition,super_priority,[claz_step_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_step_form_condition,classname,"STEP-FORM-CONDITION").
struct_opv(e,claz_step_form_condition,classof,claz_built_in_class).
struct_opv(e,claz_step_form_condition,name,"ARGS",zlot_step_form_condition_args).
struct_opv(e,claz_step_form_condition,slot,args,zlot_step_form_condition_args).
struct_opv(e,claz_step_form_condition,subtypep,claz_step_condition).
struct_opv(e,claz_step_form_condition,super_priority,[claz_step_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_step_result_condition,classname,"STEP-RESULT-CONDITION").
struct_opv(e,claz_step_result_condition,classof,claz_built_in_class).
struct_opv(e,claz_step_result_condition,name,"RESULT",zlot_step_result_condition_result).
struct_opv(e,claz_step_result_condition,slot,result,zlot_step_result_condition_result).
struct_opv(e,claz_step_result_condition,subtypep,claz_step_condition).
struct_opv(e,claz_step_result_condition,super_priority,[claz_step_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_step_values_condition,classname,"STEP-VALUES-CONDITION").
struct_opv(e,claz_step_values_condition,classof,claz_built_in_class).
struct_opv(e,claz_step_values_condition,subtypep,claz_step_result_condition).
struct_opv(e,claz_step_values_condition,super_priority,[claz_step_result_condition,claz_step_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_storage_condition,classname,"STORAGE-CONDITION").
struct_opv(e,claz_storage_condition,classof,claz_built_in_class).
struct_opv(e,claz_storage_condition,subtypep,claz_serious_condition).
struct_opv(e,claz_storage_condition,super_priority,[claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_storage_condition,super_priority,[claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_stream_decoding_error,classname,"STREAM-DECODING-ERROR").
struct_opv(e,claz_stream_decoding_error,classof,claz_built_in_class).
struct_opv(e,claz_stream_decoding_error,subtypep,claz_character_decoding_error).
struct_opv(e,claz_stream_decoding_error,subtypep,claz_stream_error).
struct_opv(e,claz_stream_decoding_error,super_priority,[claz_stream_error,claz_character_decoding_error,claz_character_coding_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_stream_encoding_error,classname,"STREAM-ENCODING-ERROR").
struct_opv(e,claz_stream_encoding_error,classof,claz_built_in_class).
struct_opv(e,claz_stream_encoding_error,subtypep,claz_character_encoding_error).
struct_opv(e,claz_stream_encoding_error,subtypep,claz_stream_error).
struct_opv(e,claz_stream_encoding_error,super_priority,[claz_stream_error,claz_character_encoding_error,claz_character_coding_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_stream_error,classname,"STREAM-ERROR").
struct_opv(e,claz_stream_error,classof,claz_built_in_class).
struct_opv(e,claz_stream_error,name,"CAUSE",zlot_stream_error_cause).
struct_opv(e,claz_stream_error,name,"STREAM",zlot_stream_error_stream).
struct_opv(e,claz_stream_error,readonly,t,zlot_stream_error_cause).
struct_opv(e,claz_stream_error,returns,claz_prolog_throwable,zlot_stream_error_cause).
struct_opv(e,claz_stream_error,slot,cause,zlot_stream_error_cause).
struct_opv(e,claz_stream_error,slot,stream,zlot_stream_error_stream).
struct_opv(e,claz_stream_error,subtypep,claz_error).
struct_opv(e,claz_stream_error,subtypep,claz_lisp_error).
struct_opv(e,claz_stream_error,super_priority,[claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_stream_error,super_priority,[claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_structure_initarg_not_keyword,subtypep,claz_reference_condition).
struct_opv(e,claz_structure_initarg_not_keyword,subtypep,claz_simple_style_warning).
struct_opv(e,claz_structure_initarg_not_keyword,super_priority,[claz_reference_condition,claz_simple_style_warning,claz_simple_condition,claz_style_warning,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_style_warning,classname,"STYLE-WARNING").
struct_opv(e,claz_style_warning,classof,claz_built_in_class).
struct_opv(e,claz_style_warning,subtypep,claz_reference_condition).
struct_opv(e,claz_style_warning,subtypep,claz_simple_style_warning).
struct_opv(e,claz_style_warning,subtypep,claz_warning).
struct_opv(e,claz_style_warning,super_priority,[claz_reference_condition,claz_simple_style_warning,claz_simple_condition,claz_style_warning,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_style_warning,super_priority,[claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_style_warning,super_priority,[claz_warning,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_symbol_package_locked_error,classname,"SYMBOL-PACKAGE-LOCKED-ERROR").
struct_opv(e,claz_symbol_package_locked_error,classof,claz_built_in_class).
struct_opv(e,claz_symbol_package_locked_error,name,"SYMBOL",zlot_symbol_package_locked_error_symbol).
struct_opv(e,claz_symbol_package_locked_error,slot,symbol,zlot_symbol_package_locked_error_symbol).
struct_opv(e,claz_symbol_package_locked_error,subtypep,claz_package_lock_violation).
struct_opv(e,claz_symbol_package_locked_error,super_priority,[claz_package_lock_violation,claz_package_error,claz_error,claz_serious_condition,claz_reference_condition,claz_simple_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_symbol_value_in_thread_error,classname,"SYMBOL-VALUE-IN-THREAD-ERROR").
struct_opv(e,claz_symbol_value_in_thread_error,classof,claz_built_in_class).
struct_opv(e,claz_symbol_value_in_thread_error,name,"INFO",zlot_symbol_value_in_thread_error_info).
struct_opv(e,claz_symbol_value_in_thread_error,slot,info,zlot_symbol_value_in_thread_error_info).
struct_opv(e,claz_symbol_value_in_thread_error,subtypep,claz_cell_error).
struct_opv(e,claz_symbol_value_in_thread_error,subtypep,claz_thread_error).
struct_opv(e,claz_symbol_value_in_thread_error,super_priority,[claz_cell_error,claz_thread_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_system_condition,classname,"SYSTEM-CONDITION").
struct_opv(e,claz_system_condition,classof,claz_built_in_class).
struct_opv(e,claz_system_condition,name,"ADDRESS",zlot_system_condition_address).
struct_opv(e,claz_system_condition,name,"CONTEXT",zlot_system_condition_context).
struct_opv(e,claz_system_condition,slot,address,zlot_system_condition_address).
struct_opv(e,claz_system_condition,slot,context,zlot_system_condition_context).
struct_opv(e,claz_system_condition,subtypep,claz_condition).
struct_opv(e,claz_system_condition,super_priority,[claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_thread_deadlock,subtypep,claz_thread_error).
struct_opv(e,claz_thread_deadlock,super_priority,[claz_thread_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_thread_destroyed,subtypep,claz_prolog_error).
struct_opv(e,claz_thread_error,classname,"THREAD-ERROR").
struct_opv(e,claz_thread_error,classof,claz_built_in_class).
struct_opv(e,claz_thread_error,name,"THREAD",zlot_thread_error_thread).
struct_opv(e,claz_thread_error,slot,thread,zlot_thread_error_thread).
struct_opv(e,claz_thread_error,subtypep,claz_error).
struct_opv(e,claz_thread_error,super_priority,[claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_timeout,subtypep,claz_serious_condition).
struct_opv(e,claz_timeout,super_priority,[claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_trace_info,name,"CONDITION",zlot_trace_info_condition).
struct_opv(e,claz_trace_info,name,"CONDITION-AFTER",zlot_trace_info_condition_after).
struct_opv(e,claz_trace_info,slot,condition,zlot_trace_info_condition).
struct_opv(e,claz_trace_info,slot,condition_after,zlot_trace_info_condition_after).
struct_opv(e,claz_unbound_slot,subtypep,claz_cell_error).
struct_opv(e,claz_unbound_slot,super_priority,[claz_cell_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_unbound_slot,super_priority,[claz_cell_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_unbound_variable,subtypep,claz_cell_error).
struct_opv(e,claz_unbound_variable,super_priority,[claz_cell_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_unbound_variable,super_priority,[claz_cell_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_undefined_alien_error,classname,"UNDEFINED-ALIEN-ERROR").
struct_opv(e,claz_undefined_alien_error,classof,claz_built_in_class).
struct_opv(e,claz_undefined_alien_error,subtypep,claz_cell_error).
struct_opv(e,claz_undefined_alien_error,super_priority,[claz_cell_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_undefined_alien_function_error,classname,"UNDEFINED-ALIEN-FUNCTION-ERROR").
struct_opv(e,claz_undefined_alien_function_error,classof,claz_built_in_class).
struct_opv(e,claz_undefined_alien_function_error,subtypep,claz_undefined_alien_error).
struct_opv(e,claz_undefined_alien_function_error,super_priority,[claz_undefined_alien_error,claz_cell_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_undefined_alien_style_warning,classname,"UNDEFINED-ALIEN-STYLE-WARNING").
struct_opv(e,claz_undefined_alien_style_warning,classof,claz_built_in_class).
struct_opv(e,claz_undefined_alien_style_warning,name,"SYMBOL",zlot_undefined_alien_style_warning_symbol).
struct_opv(e,claz_undefined_alien_style_warning,slot,symbol,zlot_undefined_alien_style_warning_symbol).
struct_opv(e,claz_undefined_alien_style_warning,subtypep,claz_style_warning).
struct_opv(e,claz_undefined_alien_style_warning,super_priority,[claz_style_warning,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_undefined_alien_variable_error,classname,"UNDEFINED-ALIEN-VARIABLE-ERROR").
struct_opv(e,claz_undefined_alien_variable_error,classof,claz_built_in_class).
struct_opv(e,claz_undefined_alien_variable_error,subtypep,claz_undefined_alien_error).
struct_opv(e,claz_undefined_alien_variable_error,super_priority,[claz_undefined_alien_error,claz_cell_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_undefined_function,subtypep,claz_cell_error).
struct_opv(e,claz_undefined_function,super_priority,[claz_cell_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_undefined_function,super_priority,[claz_cell_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_undefined_package,name,"ERROR",zlot_undefined_package_error).
struct_opv(e,claz_undefined_package,slot,error,zlot_undefined_package_error).
struct_opv(e,claz_undefined_warning,classname,"UNDEFINED-WARNING").
struct_opv(e,claz_undefined_warning,classof,claz_built_in_class).
struct_opv(e,claz_undefined_warning,name,"COUNT",zlot_undefined_warning_count).
struct_opv(e,claz_undefined_warning,name,"KIND",zlot_undefined_warning_kind).
struct_opv(e,claz_undefined_warning,name,"NAME",zlot_undefined_warning_name).
struct_opv(e,claz_undefined_warning,name,"WARNINGS",zlot_undefined_warning_warnings).
struct_opv(e,claz_undefined_warning,slot,count,zlot_undefined_warning_count).
struct_opv(e,claz_undefined_warning,slot,kind,zlot_undefined_warning_kind).
struct_opv(e,claz_undefined_warning,slot,name,zlot_undefined_warning_name).
struct_opv(e,claz_undefined_warning,slot,warnings,zlot_undefined_warning_warnings).
struct_opv(e,claz_undefined_warning,subtypep,claz_structure_c33_object).
struct_opv(e,claz_undefined_warning,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(e,claz_unhandled_debug_condition,classname,"UNHANDLED-DEBUG-CONDITION").
struct_opv(e,claz_unhandled_debug_condition,classof,claz_built_in_class).
struct_opv(e,claz_unhandled_debug_condition,name,"CONDITION",zlot_unhandled_debug_condition_condition).
struct_opv(e,claz_unhandled_debug_condition,slot,condition,zlot_unhandled_debug_condition_condition).
struct_opv(e,claz_unhandled_debug_condition,subtypep,claz_debug_error).
struct_opv(e,claz_unhandled_debug_condition,super_priority,[claz_debug_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_unknown_code_location,subtypep,claz_debug_error).
struct_opv(e,claz_unknown_code_location,super_priority,[claz_debug_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_unknown_debug_var,subtypep,claz_debug_error).
struct_opv(e,claz_unknown_debug_var,super_priority,[claz_debug_error,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_unset_funcallable_instance_function,subtypep,claz_reference_condition).
struct_opv(e,claz_unset_funcallable_instance_function,subtypep,claz_simple_error).
struct_opv(e,claz_unset_funcallable_instance_function,super_priority,[claz_reference_condition,claz_simple_error,claz_simple_condition,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_unsupported_operator,subtypep,claz_simple_error).
struct_opv(e,claz_unsupported_operator,super_priority,[claz_simple_error,claz_simple_condition,claz_error,claz_serious_condition,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_vop_parse,name,"CONDITIONAL-P",zlot_vop_parse_conditional_p).
struct_opv(e,claz_vop_parse,slot,conditional_p,zlot_vop_parse_conditional_p).
struct_opv(e,claz_warning,classname,"WARNING").
struct_opv(e,claz_warning,classof,claz_built_in_class).
struct_opv(e,claz_warning,subtypep,claz_condition).
struct_opv(e,claz_warning,subtypep,claz_reference_condition).
struct_opv(e,claz_warning,subtypep,claz_simple_warning).
struct_opv(e,claz_warning,super_priority,[claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_warning,super_priority,[claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,claz_warning,super_priority,[claz_reference_condition,claz_simple_warning,claz_simple_condition,claz_warning,claz_condition,claz_slot_object,claz_t]).
struct_opv(e,claz_wrong_number_of_arguments_exception,classname,"WRONG-NUMBER-OF-ARGUMENTS-EXCEPTION").
struct_opv(e,claz_wrong_number_of_arguments_exception,classof,claz_built_in_class).
struct_opv(e,claz_wrong_number_of_arguments_exception,name,"ACTUAL-ARGS",zlot_wrong_number_of_arguments_exception_actual_args).
struct_opv(e,claz_wrong_number_of_arguments_exception,name,"EXPECTED-MAX-ARGS",zlot_wrong_number_of_arguments_exception_expected_max_args).
struct_opv(e,claz_wrong_number_of_arguments_exception,name,"EXPECTED-MIN-ARGS",zlot_wrong_number_of_arguments_exception_expected_min_args).
struct_opv(e,claz_wrong_number_of_arguments_exception,name,"MESSAGE",zlot_wrong_number_of_arguments_exception_message).
struct_opv(e,claz_wrong_number_of_arguments_exception,name,"OPERATOR",zlot_wrong_number_of_arguments_exception_operator).
struct_opv(e,claz_wrong_number_of_arguments_exception,returns,claz_integer,zlot_wrong_number_of_arguments_exception_expected_max_args).
struct_opv(e,claz_wrong_number_of_arguments_exception,returns,claz_integer,zlot_wrong_number_of_arguments_exception_expected_min_args).
struct_opv(e,claz_wrong_number_of_arguments_exception,returns,claz_operator,zlot_wrong_number_of_arguments_exception_operator).
struct_opv(e,claz_wrong_number_of_arguments_exception,returns,claz_string,zlot_wrong_number_of_arguments_exception_message).
struct_opv(e,claz_wrong_number_of_arguments_exception,returns,claz_t,zlot_wrong_number_of_arguments_exception_actual_args).
struct_opv(e,claz_wrong_number_of_arguments_exception,slot,actual_args,zlot_wrong_number_of_arguments_exception_actual_args).
struct_opv(e,claz_wrong_number_of_arguments_exception,slot,expected_max_args,zlot_wrong_number_of_arguments_exception_expected_max_args).
struct_opv(e,claz_wrong_number_of_arguments_exception,slot,expected_min_args,zlot_wrong_number_of_arguments_exception_expected_min_args).
struct_opv(e,claz_wrong_number_of_arguments_exception,slot,message,zlot_wrong_number_of_arguments_exception_message).
struct_opv(e,claz_wrong_number_of_arguments_exception,slot,operator,zlot_wrong_number_of_arguments_exception_operator).
struct_opv(e,claz_wrong_number_of_arguments_exception,subtypep,claz_program_error).
struct_opv(e,cond,claz_simple_floating_point_overflow,subtypep,claz_simple_error).
struct_opv(e,cond,claz_simple_floating_point_overflow,super_priority,[claz_simple_error,claz_simple_condition,claz_floating_point_overflow,claz_arithmetic_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(e,cond,claz_simple_floating_point_underflow,subtypep,claz_simple_error).
struct_opv(e,cond,claz_simple_floating_point_underflow,super_priority,[claz_simple_error,claz_simple_condition,claz_floating_point_underflow,claz_arithmetic_error,claz_error,claz_serious_condition,claz_condition,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(n,claz_bignum,classname,"BIGNUM").
struct_opv(n,claz_bignum,classof,claz_built_in_class).
struct_opv(n,claz_bignum,name,"VALUE",zlot_bignum_value).
struct_opv(n,claz_bignum,readonly,t,zlot_bignum_value).
struct_opv(n,claz_bignum,returns,claz_prolog_big_integer,zlot_bignum_value).
struct_opv(n,claz_bignum,slot,value,zlot_bignum_value).
struct_opv(n,claz_bignum,subtypep,claz_integer).
struct_opv(n,claz_bignum,subtypep,claz_lisp_integer).
struct_opv(n,claz_bignum,super_priority,[claz_integer,claz_rational,claz_real,claz_number,claz_t]).
struct_opv(n,claz_complex,classname,"COMPLEX").
struct_opv(n,claz_complex,classof,claz_built_in_class).
struct_opv(n,claz_complex,name,"IMAGPART",zlot_complex_imagpart).
struct_opv(n,claz_complex,name,"REALPART",zlot_complex_realpart).
struct_opv(n,claz_complex,readonly,t,zlot_complex_imagpart).
struct_opv(n,claz_complex,readonly,t,zlot_complex_realpart).
struct_opv(n,claz_complex,returns,claz_t,zlot_complex_imagpart).
struct_opv(n,claz_complex,returns,claz_t,zlot_complex_realpart).
struct_opv(n,claz_complex,slot,imagpart,zlot_complex_imagpart).
struct_opv(n,claz_complex,slot,realpart,zlot_complex_realpart).
struct_opv(n,claz_complex,subtypep,claz_number).
struct_opv(n,claz_complex,subtypep,claz_t).
struct_opv(n,claz_complex,super_priority,[claz_number,claz_t]).
struct_opv(n,claz_double_float,classname,"DOUBLE-FLOAT").
struct_opv(n,claz_double_float,classof,claz_built_in_class).
struct_opv(n,claz_double_float,name,"VALUE",zlot_double_float_value).
struct_opv(n,claz_double_float,readonly,t,zlot_double_float_value).
struct_opv(n,claz_double_float,returns,claz_double,zlot_double_float_value).
struct_opv(n,claz_double_float,slot,value,zlot_double_float_value).
struct_opv(n,claz_double_float,subtypep,claz_float).
struct_opv(n,claz_double_float,subtypep,claz_t).
struct_opv(n,claz_double_float,super_priority,[claz_float,claz_real,claz_number,claz_t]).
struct_opv(n,claz_fixnum,classname,"FIXNUM").
struct_opv(n,claz_fixnum,classof,claz_built_in_class).
struct_opv(n,claz_fixnum,name,"VALUE",zlot_fixnum_value).
struct_opv(n,claz_fixnum,readonly,t,zlot_fixnum_value).
struct_opv(n,claz_fixnum,returns,claz_integer,zlot_fixnum_value).
struct_opv(n,claz_fixnum,slot,value,zlot_fixnum_value).
struct_opv(n,claz_fixnum,subtypep,claz_integer).
struct_opv(n,claz_fixnum,subtypep,claz_lisp_integer).
struct_opv(n,claz_fixnum,super_priority,[claz_integer,claz_rational,claz_real,claz_number,claz_t]).
struct_opv(n,claz_float,classname,"FLOAT").
struct_opv(n,claz_float,classof,claz_built_in_class).
struct_opv(n,claz_float,subtypep,claz_real).
struct_opv(n,claz_float,super_priority,[claz_real,claz_number,claz_t]).
struct_opv(n,claz_lisp_integer,classname,"LISP-INTEGER").
struct_opv(n,claz_lisp_integer,classof,claz_built_in_class).
struct_opv(n,claz_lisp_integer,subtypep,claz_t).
struct_opv(n,claz_random_class,classname,"RANDOM-CLASS").
struct_opv(n,claz_random_class,classof,claz_built_in_class).
struct_opv(n,claz_random_class,subtypep,claz_t).
struct_opv(n,claz_random_class,super_priority,[claz_t]).
struct_opv(n,claz_random_state,classname,"RANDOM-STATE").
struct_opv(n,claz_random_state,classof,claz_built_in_class).
struct_opv(n,claz_random_state,name,"RANDOM",zlot_random_state_random).
struct_opv(n,claz_random_state,name,"STATE",zlot_random_state_state).
struct_opv(n,claz_random_state,returns,claz_prolog_random,zlot_random_state_random).
struct_opv(n,claz_random_state,slot,random,zlot_random_state_random).
struct_opv(n,claz_random_state,slot,state,zlot_random_state_state).
struct_opv(n,claz_random_state,subtypep,claz_structure_object).
struct_opv(n,claz_random_state,subtypep,claz_t).
struct_opv(n,claz_random_state,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(n,claz_random_state,super_priority,[claz_t]).
struct_opv(n,claz_ratio,classname,"RATIO").
struct_opv(n,claz_ratio,classof,claz_built_in_class).
struct_opv(n,claz_ratio,name,"DENOMINATOR",zlot_ratio_denominator).
struct_opv(n,claz_ratio,name,"NUMERATOR",zlot_ratio_numerator).
struct_opv(n,claz_ratio,returns,claz_prolog_big_integer,zlot_ratio_denominator).
struct_opv(n,claz_ratio,returns,claz_prolog_big_integer,zlot_ratio_numerator).
struct_opv(n,claz_ratio,slot,denominator,zlot_ratio_denominator).
struct_opv(n,claz_ratio,slot,numerator,zlot_ratio_numerator).
struct_opv(n,claz_ratio,subtypep,claz_rational).
struct_opv(n,claz_ratio,subtypep,claz_t).
struct_opv(n,claz_ratio,super_priority,[claz_rational,claz_real,claz_number,claz_t]).
struct_opv(n,claz_rational,classname,"RATIONAL").
struct_opv(n,claz_rational,classof,claz_built_in_class).
struct_opv(n,claz_rational,subtypep,claz_real).
struct_opv(n,claz_rational,super_priority,[claz_real,claz_number,claz_t]).
struct_opv(n,claz_single_float,classname,"SINGLE-FLOAT").
struct_opv(n,claz_single_float,classof,claz_built_in_class).
struct_opv(n,claz_single_float,name,"VALUE",zlot_single_float_value).
struct_opv(n,claz_single_float,readonly,t,zlot_single_float_value).
struct_opv(n,claz_single_float,returns,claz_float,zlot_single_float_value).
struct_opv(n,claz_single_float,slot,value,zlot_single_float_value).
struct_opv(n,claz_single_float,subtypep,claz_float).
struct_opv(n,claz_single_float,subtypep,claz_t).
struct_opv(n,claz_single_float,super_priority,[claz_float,claz_real,claz_number,claz_t]).
struct_opv(o,claz_cons,classname,"CONS").
struct_opv(o,claz_cons,classof,claz_built_in_class).
struct_opv(o,claz_cons,name,"CAR",zlot_cons_car).
struct_opv(o,claz_cons,name,"CDR",zlot_cons_cdr).
struct_opv(o,claz_cons,returns,claz_t,zlot_cons_car).
struct_opv(o,claz_cons,returns,claz_t,zlot_cons_cdr).
struct_opv(o,claz_cons,slot,car,zlot_cons_car).
struct_opv(o,claz_cons,slot,cdr,zlot_cons_cdr).
struct_opv(o,claz_cons,subtypep,claz_list).
struct_opv(o,claz_cons,subtypep,claz_t).
struct_opv(o,claz_cons,super_priority,[claz_list,claz_sequence,claz_t]).
struct_opv(o,claz_cons_type,classname,"CONS-TYPE").
struct_opv(o,claz_cons_type,classof,claz_built_in_class).
struct_opv(o,claz_cons_type,name,"CAR-TYPE",zlot_cons_type_car_type).
struct_opv(o,claz_cons_type,name,"CDR-TYPE",zlot_cons_type_cdr_type).
struct_opv(o,claz_cons_type,name,"CLASS-INFO",zlot_cons_type_class_info).
struct_opv(o,claz_cons_type,slot,car_type,zlot_cons_type_car_type).
struct_opv(o,claz_cons_type,slot,cdr_type,zlot_cons_type_cdr_type).
struct_opv(o,claz_cons_type,slot,class_info,zlot_cons_type_class_info).
struct_opv(o,claz_cons_type,subtypep,claz_ctype).
struct_opv(o,claz_cons_type,super_priority,[claz_ctype,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(o,claz_lisp_thread,classname,"LISP-THREAD").
struct_opv(o,claz_lisp_thread,classof,claz_built_in_class).
struct_opv(o,claz_lisp_thread,name,"CATCH-TAGS",zlot_lisp_thread_catch_tags).
struct_opv(o,claz_lisp_thread,name,"DESTROYED",zlot_lisp_thread_destroyed).
struct_opv(o,claz_lisp_thread,name,"FFI-THREAD",zlot_lisp_thread_ffi_thread).
struct_opv(o,claz_lisp_thread,name,"NAME",zlot_lisp_thread_name).
struct_opv(o,claz_lisp_thread,name,"PENDING",zlot_lisp_thread_pending).
struct_opv(o,claz_lisp_thread,name,"SAVED-SPECIALS",zlot_lisp_thread_saved_specials).
struct_opv(o,claz_lisp_thread,name,"SPARE-STACK-SEGMENT",zlot_lisp_thread_spare_stack_segment).
struct_opv(o,claz_lisp_thread,name,"SPECIALS",zlot_lisp_thread_specials).
struct_opv(o,claz_lisp_thread,name,"STACK",zlot_lisp_thread_stack).
struct_opv(o,claz_lisp_thread,name,"STACK-PTR",zlot_lisp_thread_stack_ptr).
struct_opv(o,claz_lisp_thread,name,"THREAD-INTERRUPTED",zlot_lisp_thread_thread_interrupted).
struct_opv(o,claz_lisp_thread,name,"THREAD-VALUE",zlot_lisp_thread_thread_value).
struct_opv(o,claz_lisp_thread,name,"THREAD-VALUES",zlot_lisp_thread_thread_values).
struct_opv(o,claz_lisp_thread,name,"TOP-STACK-SEGMENT",zlot_lisp_thread_top_stack_segment).
struct_opv(o,claz_lisp_thread,name,"WRAPPER",zlot_lisp_thread_wrapper).
struct_opv(o,claz_lisp_thread,readonly,t,zlot_lisp_thread_ffi_thread).
struct_opv(o,claz_lisp_thread,readonly,t,zlot_lisp_thread_name).
struct_opv(o,claz_lisp_thread,returns,claz_boolean,zlot_lisp_thread_destroyed).
struct_opv(o,claz_lisp_thread,returns,claz_boolean,zlot_lisp_thread_thread_interrupted).
struct_opv(o,claz_lisp_thread,returns,claz_integer,zlot_lisp_thread_stack_ptr).
struct_opv(o,claz_lisp_thread,returns,claz_lisp_thread_stack_segment,zlot_lisp_thread_spare_stack_segment).
struct_opv(o,claz_lisp_thread,returns,claz_lisp_thread_stack_segment,zlot_lisp_thread_top_stack_segment).
struct_opv(o,claz_lisp_thread,returns,claz_list,zlot_lisp_thread_thread_values).
struct_opv(o,claz_lisp_thread,returns,claz_prolog_thread,zlot_lisp_thread_ffi_thread).
struct_opv(o,claz_lisp_thread,returns,claz_simple_vector(claz_prolog_object),zlot_lisp_thread_stack).
struct_opv(o,claz_lisp_thread,returns,claz_simple_vector(claz_special_binding),zlot_lisp_thread_specials).
struct_opv(o,claz_lisp_thread,returns,claz_special_bindings_mark,zlot_lisp_thread_saved_specials).
struct_opv(o,claz_lisp_thread,returns,claz_symbol,zlot_lisp_thread_wrapper).
struct_opv(o,claz_lisp_thread,returns,claz_t,zlot_lisp_thread_catch_tags).
struct_opv(o,claz_lisp_thread,returns,claz_t,zlot_lisp_thread_name).
struct_opv(o,claz_lisp_thread,returns,claz_t,zlot_lisp_thread_pending).
struct_opv(o,claz_lisp_thread,returns,claz_t,zlot_lisp_thread_thread_value).
struct_opv(o,claz_lisp_thread,slot,catch_tags,zlot_lisp_thread_catch_tags).
struct_opv(o,claz_lisp_thread,slot,destroyed,zlot_lisp_thread_destroyed).
struct_opv(o,claz_lisp_thread,slot,ffi_thread,zlot_lisp_thread_ffi_thread).
struct_opv(o,claz_lisp_thread,slot,name,zlot_lisp_thread_name).
struct_opv(o,claz_lisp_thread,slot,pending,zlot_lisp_thread_pending).
struct_opv(o,claz_lisp_thread,slot,saved_specials,zlot_lisp_thread_saved_specials).
struct_opv(o,claz_lisp_thread,slot,spare_stack_segment,zlot_lisp_thread_spare_stack_segment).
struct_opv(o,claz_lisp_thread,slot,specials,zlot_lisp_thread_specials).
struct_opv(o,claz_lisp_thread,slot,stack,zlot_lisp_thread_stack).
struct_opv(o,claz_lisp_thread,slot,stack_ptr,zlot_lisp_thread_stack_ptr).
struct_opv(o,claz_lisp_thread,slot,thread_interrupted,zlot_lisp_thread_thread_interrupted).
struct_opv(o,claz_lisp_thread,slot,thread_value,zlot_lisp_thread_thread_value).
struct_opv(o,claz_lisp_thread,slot,thread_values,zlot_lisp_thread_thread_values).
struct_opv(o,claz_lisp_thread,slot,top_stack_segment,zlot_lisp_thread_top_stack_segment).
struct_opv(o,claz_lisp_thread,slot,wrapper,zlot_lisp_thread_wrapper).
struct_opv(o,claz_lisp_thread,subtypep,claz_t).
struct_opv(o,claz_lisp_thread_stack_marker,classname,"LISP-THREAD-STACK-MARKER").
struct_opv(o,claz_lisp_thread_stack_marker,classof,claz_built_in_class).
struct_opv(o,claz_lisp_thread_stack_marker,name,"NUM-ARGS",zlot_lisp_thread_stack_marker_num_args).
struct_opv(o,claz_lisp_thread_stack_marker,readonly,t,zlot_lisp_thread_stack_marker_num_args).
struct_opv(o,claz_lisp_thread_stack_marker,returns,claz_integer,zlot_lisp_thread_stack_marker_num_args).
struct_opv(o,claz_lisp_thread_stack_marker,slot,num_args,zlot_lisp_thread_stack_marker_num_args).
struct_opv(o,claz_lisp_thread_stack_segment,classname,"LISP-THREAD-STACK-SEGMENT").
struct_opv(o,claz_lisp_thread_stack_segment,classof,claz_built_in_class).
struct_opv(o,claz_lisp_thread_stack_segment,name,"NEXT",zlot_lisp_thread_stack_segment_next).
struct_opv(o,claz_lisp_thread_stack_segment,name,"STACK",zlot_lisp_thread_stack_segment_stack).
struct_opv(o,claz_lisp_thread_stack_segment,name,"STACK-PTR",zlot_lisp_thread_stack_segment_stack_ptr).
struct_opv(o,claz_lisp_thread_stack_segment,readonly,t,zlot_lisp_thread_stack_segment_next).
struct_opv(o,claz_lisp_thread_stack_segment,readonly,t,zlot_lisp_thread_stack_segment_stack).
struct_opv(o,claz_lisp_thread_stack_segment,returns,claz_integer,zlot_lisp_thread_stack_segment_stack_ptr).
struct_opv(o,claz_lisp_thread_stack_segment,returns,claz_lisp_thread_stack_segment,zlot_lisp_thread_stack_segment_next).
struct_opv(o,claz_lisp_thread_stack_segment,returns,claz_simple_vector(claz_prolog_object),zlot_lisp_thread_stack_segment_stack).
struct_opv(o,claz_lisp_thread_stack_segment,slot,next,zlot_lisp_thread_stack_segment_next).
struct_opv(o,claz_lisp_thread_stack_segment,slot,stack,zlot_lisp_thread_stack_segment_stack).
struct_opv(o,claz_lisp_thread_stack_segment,slot,stack_ptr,zlot_lisp_thread_stack_segment_stack_ptr).
struct_opv(o,claz_list,classname,"LIST").
struct_opv(o,claz_list,classof,claz_built_in_class).
struct_opv(o,claz_list,subtypep,claz_sequence).
struct_opv(o,claz_list,super_priority,[claz_sequence,claz_t]).
struct_opv(o,claz_readtable,classname,"READTABLE").
struct_opv(o,claz_readtable,classof,claz_built_in_class).
struct_opv(o,claz_readtable,name,"CHARACTER-ATTRIBUTE-ARRAY",zlot_readtable_character_attribute_array).
struct_opv(o,claz_readtable,name,"CHARACTER-ATTRIBUTE-HASH-TABLE",zlot_readtable_character_attribute_hash_table).
struct_opv(o,claz_readtable,name,"CHARACTER-MACRO-ARRAY",zlot_readtable_character_macro_array).
struct_opv(o,claz_readtable,name,"CHARACTER-MACRO-HASH-TABLE",zlot_readtable_character_macro_hash_table).
struct_opv(o,claz_readtable,name,"DISPATCH-TABLES",zlot_readtable_dispatch_tables).
struct_opv(o,claz_readtable,name,"READER-MACRO-FUNCTIONS",zlot_readtable_reader_macro_functions).
struct_opv(o,claz_readtable,name,"READTABLE-CASE",zlot_readtable_readtable_case).
struct_opv(o,claz_readtable,name,"READTABLE-NORMALIZATION",zlot_readtable_readtable_normalization).
struct_opv(o,claz_readtable,name,"SYNTAX",zlot_readtable_syntax).
struct_opv(o,claz_readtable,readonly,t,zlot_readtable_dispatch_tables).
struct_opv(o,claz_readtable,readonly,t,zlot_readtable_reader_macro_functions).
struct_opv(o,claz_readtable,readonly,t,zlot_readtable_syntax).
struct_opv(o,claz_readtable,returns,claz_char_hash_map(claz_prolog_byte),zlot_readtable_syntax).
struct_opv(o,claz_readtable,returns,claz_char_hash_map(claz_readtable_dispatch_table),zlot_readtable_dispatch_tables).
struct_opv(o,claz_readtable,returns,claz_char_hash_map(claz_t),zlot_readtable_reader_macro_functions).
struct_opv(o,claz_readtable,returns,claz_t,zlot_readtable_readtable_case).
struct_opv(o,claz_readtable,slot,character_attribute_array,zlot_readtable_character_attribute_array).
struct_opv(o,claz_readtable,slot,character_attribute_hash_table,zlot_readtable_character_attribute_hash_table).
struct_opv(o,claz_readtable,slot,character_macro_array,zlot_readtable_character_macro_array).
struct_opv(o,claz_readtable,slot,character_macro_hash_table,zlot_readtable_character_macro_hash_table).
struct_opv(o,claz_readtable,slot,dispatch_tables,zlot_readtable_dispatch_tables).
struct_opv(o,claz_readtable,slot,reader_macro_functions,zlot_readtable_reader_macro_functions).
struct_opv(o,claz_readtable,slot,readtable_case,zlot_readtable_readtable_case).
struct_opv(o,claz_readtable,slot,readtable_normalization,zlot_readtable_readtable_normalization).
struct_opv(o,claz_readtable,slot,syntax,zlot_readtable_syntax).
struct_opv(o,claz_readtable,subtypep,claz_structure_object).
struct_opv(o,claz_readtable,subtypep,claz_t).
struct_opv(o,claz_readtable,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(o,claz_readtable,super_priority,[claz_t]).
struct_opv(o,claz_readtable_dispatch_table,classname,"READTABLE-DISPATCH-TABLE").
struct_opv(o,claz_readtable_dispatch_table,classof,claz_built_in_class).
struct_opv(o,claz_readtable_dispatch_table,name,"FUNCTIONS",zlot_readtable_dispatch_table_functions).
struct_opv(o,claz_readtable_dispatch_table,readonly,t,zlot_readtable_dispatch_table_functions).
struct_opv(o,claz_readtable_dispatch_table,returns,claz_char_hash_map(claz_t),zlot_readtable_dispatch_table_functions).
struct_opv(o,claz_readtable_dispatch_table,slot,functions,zlot_readtable_dispatch_table_functions).
struct_opv(o,claz_special_operator,classname,"SPECIAL-OPERATOR").
struct_opv(o,claz_special_operator,classof,claz_built_in_class).
struct_opv(o,claz_special_operator,name,"CALL-COUNT",zlot_special_operator_call_count).
struct_opv(o,claz_special_operator,name,"HOT-COUNT",zlot_special_operator_hot_count).
struct_opv(o,claz_special_operator,returns,claz_integer,zlot_special_operator_call_count).
struct_opv(o,claz_special_operator,returns,claz_integer,zlot_special_operator_hot_count).
struct_opv(o,claz_special_operator,slot,call_count,zlot_special_operator_call_count).
struct_opv(o,claz_special_operator,slot,hot_count,zlot_special_operator_hot_count).
struct_opv(o,claz_special_operator,subtypep,claz_operator).
struct_opv(o,claz_symbol,classname,"SYMBOL").
struct_opv(o,claz_symbol,classof,claz_built_in_class).
struct_opv(o,claz_symbol,name,"FLAGS",zlot_symbol_flags).
struct_opv(o,claz_symbol,name,"FUNCTION",zlot_symbol_function).
struct_opv(o,claz_symbol,name,"HASH",zlot_symbol_hash).
struct_opv(o,claz_symbol,name,"NAME",zlot_symbol_name).
struct_opv(o,claz_symbol,name,"PACKAGE",zlot_symbol_package).
struct_opv(o,claz_symbol,name,"PROPERTY-LIST",zlot_symbol_property_list).
struct_opv(o,claz_symbol,name,"SPECIAL-INDEX",zlot_symbol_special_index).
struct_opv(o,claz_symbol,name,"VALUE",zlot_symbol_value).
struct_opv(o,claz_symbol,predicate,symbol_value,zlot_symbol_value).
struct_opv(o,claz_symbol,readonly,t,zlot_symbol_name).
struct_opv(o,claz_symbol,returns,claz_bitmask,zlot_symbol_flags).
struct_opv(o,claz_symbol,returns,claz_integer,zlot_symbol_hash).
struct_opv(o,claz_symbol,returns,claz_integer,zlot_symbol_special_index).
struct_opv(o,claz_symbol,returns,claz_list,zlot_symbol_property_list).
struct_opv(o,claz_symbol,returns,claz_simple_string,zlot_symbol_name).
struct_opv(o,claz_symbol,returns,claz_t,zlot_symbol_function).
struct_opv(o,claz_symbol,returns,claz_t,zlot_symbol_package).
struct_opv(o,claz_symbol,returns,claz_t,zlot_symbol_value).
struct_opv(o,claz_symbol,slot,flags,zlot_symbol_flags).
struct_opv(o,claz_symbol,slot,function,zlot_symbol_function).
struct_opv(o,claz_symbol,slot,hash,zlot_symbol_hash).
struct_opv(o,claz_symbol,slot,name,zlot_symbol_name).
struct_opv(o,claz_symbol,slot,package,zlot_symbol_package).
struct_opv(o,claz_symbol,slot,property_list,zlot_symbol_property_list).
struct_opv(o,claz_symbol,slot,special_index,zlot_symbol_special_index).
struct_opv(o,claz_symbol,slot,value,zlot_symbol_value).
struct_opv(o,claz_symbol,subtypep,claz_t).
struct_opv(o,claz_symbol,super_priority,[claz_t]).
struct_opv(o,claz_symbol_macro,classname,"SYMBOL-MACRO").
struct_opv(o,claz_symbol_macro,classof,claz_built_in_class).
struct_opv(o,claz_symbol_macro,name,"EXPANSION",zlot_symbol_macro_expansion).
struct_opv(o,claz_symbol_macro,returns,claz_t,zlot_symbol_macro_expansion).
struct_opv(o,claz_symbol_macro,slot,expansion,zlot_symbol_macro_expansion).
struct_opv(o,claz_symbol_macro,subtypep,claz_t).
struct_opv(o,claz_t,classname,"T").
struct_opv(o,claz_t,classof,claz_built_in_class).
struct_opv(o,claz_t,super_priority,[]).
struct_opv(o,claz_thread,classname,"THREAD").
struct_opv(o,claz_thread,classof,claz_built_in_class).
struct_opv(o,claz_thread,name,"ALIVE-P",zlot_thread_alive_p).
struct_opv(o,claz_thread,name,"EPHEMERAL-P",zlot_thread_ephemeral_p).
struct_opv(o,claz_thread,name,"INTERRUPTIONS",zlot_thread_interruptions).
struct_opv(o,claz_thread,name,"INTERRUPTIONS-LOCK",zlot_thread_interruptions_lock).
struct_opv(o,claz_thread,name,"NAME",zlot_thread_name).
struct_opv(o,claz_thread,name,"OS-THREAD",zlot_thread_os_thread).
struct_opv(o,claz_thread,name,"RESULT",zlot_thread_result).
struct_opv(o,claz_thread,name,"RESULT-LOCK",zlot_thread_result_lock).
struct_opv(o,claz_thread,name,"WAITING-FOR",zlot_thread_waiting_for).
struct_opv(o,claz_thread,slot,alive_p,zlot_thread_alive_p).
struct_opv(o,claz_thread,slot,ephemeral_p,zlot_thread_ephemeral_p).
struct_opv(o,claz_thread,slot,interruptions,zlot_thread_interruptions).
struct_opv(o,claz_thread,slot,interruptions_lock,zlot_thread_interruptions_lock).
struct_opv(o,claz_thread,slot,name,zlot_thread_name).
struct_opv(o,claz_thread,slot,os_thread,zlot_thread_os_thread).
struct_opv(o,claz_thread,slot,result,zlot_thread_result).
struct_opv(o,claz_thread,slot,result_lock,zlot_thread_result_lock).
struct_opv(o,claz_thread,slot,waiting_for,zlot_thread_waiting_for).
struct_opv(o,claz_thread,subtypep,claz_structure_object).
struct_opv(o,claz_thread,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(s,claz_ansi_stream,classname,"ANSI-STREAM").
struct_opv(s,claz_ansi_stream,classof,claz_built_in_class).
struct_opv(s,claz_ansi_stream,name,"BIN",zlot_ansi_stream_bin).
struct_opv(s,claz_ansi_stream,name,"BOUT",zlot_ansi_stream_bout).
struct_opv(s,claz_ansi_stream,name,"CIN-BUFFER",zlot_ansi_stream_cin_buffer).
struct_opv(s,claz_ansi_stream,name,"IN",zlot_ansi_stream_in).
struct_opv(s,claz_ansi_stream,name,"IN-BUFFER",zlot_ansi_stream_in_buffer).
struct_opv(s,claz_ansi_stream,name,"IN-INDEX",zlot_ansi_stream_in_index).
struct_opv(s,claz_ansi_stream,name,"INPUT-CHAR-POS",zlot_ansi_stream_input_char_pos).
struct_opv(s,claz_ansi_stream,name,"MISC",zlot_ansi_stream_misc).
struct_opv(s,claz_ansi_stream,name,"N-BIN",zlot_ansi_stream_n_bin).
struct_opv(s,claz_ansi_stream,name,"OUT",zlot_ansi_stream_out).
struct_opv(s,claz_ansi_stream,name,"SOUT",zlot_ansi_stream_sout).
struct_opv(s,claz_ansi_stream,slot,bin,zlot_ansi_stream_bin).
struct_opv(s,claz_ansi_stream,slot,bout,zlot_ansi_stream_bout).
struct_opv(s,claz_ansi_stream,slot,cin_buffer,zlot_ansi_stream_cin_buffer).
struct_opv(s,claz_ansi_stream,slot,in,zlot_ansi_stream_in).
struct_opv(s,claz_ansi_stream,slot,in_buffer,zlot_ansi_stream_in_buffer).
struct_opv(s,claz_ansi_stream,slot,in_index,zlot_ansi_stream_in_index).
struct_opv(s,claz_ansi_stream,slot,input_char_pos,zlot_ansi_stream_input_char_pos).
struct_opv(s,claz_ansi_stream,slot,misc,zlot_ansi_stream_misc).
struct_opv(s,claz_ansi_stream,slot,n_bin,zlot_ansi_stream_n_bin).
struct_opv(s,claz_ansi_stream,slot,out,zlot_ansi_stream_out).
struct_opv(s,claz_ansi_stream,slot,sout,zlot_ansi_stream_sout).
struct_opv(s,claz_ansi_stream,subtypep,claz_stream).
struct_opv(s,claz_ansi_stream,subtypep,claz_structure_object).
struct_opv(s,claz_ansi_stream,super_priority,[claz_stream,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(s,claz_broadcast_stream,classname,"BROADCAST-STREAM").
struct_opv(s,claz_broadcast_stream,classof,claz_built_in_class).
struct_opv(s,claz_broadcast_stream,name,"BOUT",zlot_broadcast_stream_bout).
struct_opv(s,claz_broadcast_stream,name,"MISC",zlot_broadcast_stream_misc).
struct_opv(s,claz_broadcast_stream,name,"OUT",zlot_broadcast_stream_out).
struct_opv(s,claz_broadcast_stream,name,"SOUT",zlot_broadcast_stream_sout).
struct_opv(s,claz_broadcast_stream,name,"STREAMS",zlot_broadcast_stream_streams).
struct_opv(s,claz_broadcast_stream,readonly,t,zlot_broadcast_stream_streams).
struct_opv(s,claz_broadcast_stream,returns,claz_simple_vector(claz_stream),zlot_broadcast_stream_streams).
struct_opv(s,claz_broadcast_stream,slot,bout,zlot_broadcast_stream_bout).
struct_opv(s,claz_broadcast_stream,slot,misc,zlot_broadcast_stream_misc).
struct_opv(s,claz_broadcast_stream,slot,out,zlot_broadcast_stream_out).
struct_opv(s,claz_broadcast_stream,slot,sout,zlot_broadcast_stream_sout).
struct_opv(s,claz_broadcast_stream,slot,streams,zlot_broadcast_stream_streams).
struct_opv(s,claz_broadcast_stream,subtypep,claz_ansi_stream).
struct_opv(s,claz_broadcast_stream,subtypep,claz_stream).
struct_opv(s,claz_broadcast_stream,super_priority,[claz_ansi_stream,claz_stream,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(s,claz_broadcast_stream,super_priority,[claz_stream,claz_t]).
struct_opv(s,claz_byte_array_input_stream,classname,"BYTE-ARRAY-INPUT-STREAM").
struct_opv(s,claz_byte_array_input_stream,classof,claz_built_in_class).
struct_opv(s,claz_byte_array_input_stream,name,"BYTE-ARRAY-INPUT-STREAM",zlot_byte_array_input_stream_byte_array_input_stream).
struct_opv(s,claz_byte_array_input_stream,readonly,t,zlot_byte_array_input_stream_byte_array_input_stream).
struct_opv(s,claz_byte_array_input_stream,returns,claz_prolog_byte_array_input_stream,zlot_byte_array_input_stream_byte_array_input_stream).
struct_opv(s,claz_byte_array_input_stream,slot,byte_array_input_stream,zlot_byte_array_input_stream_byte_array_input_stream).
struct_opv(s,claz_byte_array_input_stream,subtypep,claz_stream).
struct_opv(s,claz_byte_array_output_stream,classname,"BYTE-ARRAY-OUTPUT-STREAM").
struct_opv(s,claz_byte_array_output_stream,classof,claz_built_in_class).
struct_opv(s,claz_byte_array_output_stream,name,"BYTE-ARRAY-OUTPUT-STREAM",zlot_byte_array_output_stream_byte_array_output_stream).
struct_opv(s,claz_byte_array_output_stream,readonly,t,zlot_byte_array_output_stream_byte_array_output_stream).
struct_opv(s,claz_byte_array_output_stream,returns,claz_prolog_byte_array_output_stream,zlot_byte_array_output_stream_byte_array_output_stream).
struct_opv(s,claz_byte_array_output_stream,slot,byte_array_output_stream,zlot_byte_array_output_stream_byte_array_output_stream).
struct_opv(s,claz_byte_array_output_stream,subtypep,claz_stream).
struct_opv(s,claz_capitalize_first_stream,classname,"CAPITALIZE-FIRST-STREAM").
struct_opv(s,claz_capitalize_first_stream,classof,claz_built_in_class).
struct_opv(s,claz_capitalize_first_stream,name,"VIRGIN",zlot_capitalize_first_stream_virgin).
struct_opv(s,claz_capitalize_first_stream,returns,claz_boolean,zlot_capitalize_first_stream_virgin).
struct_opv(s,claz_capitalize_first_stream,slot,virgin,zlot_capitalize_first_stream_virgin).
struct_opv(s,claz_capitalize_first_stream,subtypep,claz_case_frob_stream).
struct_opv(s,claz_capitalize_stream,classname,"CAPITALIZE-STREAM").
struct_opv(s,claz_capitalize_stream,classof,claz_built_in_class).
struct_opv(s,claz_capitalize_stream,name,"IN-WORD",zlot_capitalize_stream_in_word).
struct_opv(s,claz_capitalize_stream,returns,claz_boolean,zlot_capitalize_stream_in_word).
struct_opv(s,claz_capitalize_stream,slot,in_word,zlot_capitalize_stream_in_word).
struct_opv(s,claz_capitalize_stream,subtypep,claz_case_frob_stream).
struct_opv(s,claz_case_frob_stream,classname,"CASE-FROB-STREAM").
struct_opv(s,claz_case_frob_stream,classof,claz_built_in_class).
struct_opv(s,claz_case_frob_stream,name,"MISC",zlot_case_frob_stream_misc).
struct_opv(s,claz_case_frob_stream,name,"TARGET",zlot_case_frob_stream_target).
struct_opv(s,claz_case_frob_stream,readonly,t,zlot_case_frob_stream_target).
struct_opv(s,claz_case_frob_stream,returns,claz_stream,zlot_case_frob_stream_target).
struct_opv(s,claz_case_frob_stream,slot,misc,zlot_case_frob_stream_misc).
struct_opv(s,claz_case_frob_stream,slot,target,zlot_case_frob_stream_target).
struct_opv(s,claz_case_frob_stream,subtypep,claz_ansi_stream).
struct_opv(s,claz_case_frob_stream,subtypep,claz_stream).
struct_opv(s,claz_case_frob_stream,super_priority,[claz_ansi_stream,claz_stream,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(s,claz_concatenated_stream,classname,"CONCATENATED-STREAM").
struct_opv(s,claz_concatenated_stream,classof,claz_built_in_class).
struct_opv(s,claz_concatenated_stream,name,"BIN",zlot_concatenated_stream_bin).
struct_opv(s,claz_concatenated_stream,name,"IN",zlot_concatenated_stream_in).
struct_opv(s,claz_concatenated_stream,name,"MISC",zlot_concatenated_stream_misc).
struct_opv(s,claz_concatenated_stream,name,"N-BIN",zlot_concatenated_stream_n_bin).
struct_opv(s,claz_concatenated_stream,name,"STREAMS",zlot_concatenated_stream_streams).
struct_opv(s,claz_concatenated_stream,returns,claz_t,zlot_concatenated_stream_streams).
struct_opv(s,claz_concatenated_stream,slot,bin,zlot_concatenated_stream_bin).
struct_opv(s,claz_concatenated_stream,slot,in,zlot_concatenated_stream_in).
struct_opv(s,claz_concatenated_stream,slot,misc,zlot_concatenated_stream_misc).
struct_opv(s,claz_concatenated_stream,slot,n_bin,zlot_concatenated_stream_n_bin).
struct_opv(s,claz_concatenated_stream,slot,streams,zlot_concatenated_stream_streams).
struct_opv(s,claz_concatenated_stream,subtypep,claz_ansi_stream).
struct_opv(s,claz_concatenated_stream,subtypep,claz_stream).
struct_opv(s,claz_concatenated_stream,super_priority,[claz_ansi_stream,claz_stream,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(s,claz_concatenated_stream,super_priority,[claz_stream,claz_t]).
struct_opv(s,claz_describe_stream,classname,"DESCRIBE-STREAM").
struct_opv(s,claz_describe_stream,classof,claz_built_in_class).
struct_opv(s,claz_describe_stream,subtypep,claz_fill_stream).
struct_opv(s,claz_describe_stream,super_priority,[claz_fill_stream,claz_fundamental_character_output_stream,claz_fundamental_output_stream,claz_fundamental_character_stream,claz_fundamental_stream,claz_stream,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(s,claz_downcase_stream,classname,"DOWNCASE-STREAM").
struct_opv(s,claz_downcase_stream,classof,claz_built_in_class).
struct_opv(s,claz_downcase_stream,subtypep,claz_case_frob_stream).
struct_opv(s,claz_echo_stream,classname,"ECHO-STREAM").
struct_opv(s,claz_echo_stream,classof,claz_built_in_class).
struct_opv(s,claz_echo_stream,name,"BIN",zlot_echo_stream_bin).
struct_opv(s,claz_echo_stream,name,"IN",zlot_echo_stream_in).
struct_opv(s,claz_echo_stream,name,"MISC",zlot_echo_stream_misc).
struct_opv(s,claz_echo_stream,name,"N-BIN",zlot_echo_stream_n_bin).
struct_opv(s,claz_echo_stream,name,"OUT",zlot_echo_stream_out).
struct_opv(s,claz_echo_stream,name,"UNREAD-CHAR",zlot_echo_stream_unread_char).
struct_opv(s,claz_echo_stream,name,"UNREAD-STUFF",zlot_echo_stream_unread_stuff).
struct_opv(s,claz_echo_stream,readonly,t,zlot_echo_stream_in).
struct_opv(s,claz_echo_stream,readonly,t,zlot_echo_stream_out).
struct_opv(s,claz_echo_stream,returns,claz_integer,zlot_echo_stream_unread_char).
struct_opv(s,claz_echo_stream,returns,claz_stream,zlot_echo_stream_in).
struct_opv(s,claz_echo_stream,returns,claz_stream,zlot_echo_stream_out).
struct_opv(s,claz_echo_stream,slot,bin,zlot_echo_stream_bin).
struct_opv(s,claz_echo_stream,slot,in,zlot_echo_stream_in).
struct_opv(s,claz_echo_stream,slot,misc,zlot_echo_stream_misc).
struct_opv(s,claz_echo_stream,slot,n_bin,zlot_echo_stream_n_bin).
struct_opv(s,claz_echo_stream,slot,out,zlot_echo_stream_out).
struct_opv(s,claz_echo_stream,slot,unread_char,zlot_echo_stream_unread_char).
struct_opv(s,claz_echo_stream,slot,unread_stuff,zlot_echo_stream_unread_stuff).
struct_opv(s,claz_echo_stream,subtypep,claz_stream).
struct_opv(s,claz_echo_stream,subtypep,claz_two_way_stream).
struct_opv(s,claz_echo_stream,super_priority,[claz_stream,claz_t]).
struct_opv(s,claz_echo_stream,super_priority,[claz_two_way_stream,claz_ansi_stream,claz_stream,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(s,claz_fd_stream,classname,"FD-STREAM").
struct_opv(s,claz_fd_stream,classof,claz_built_in_class).
struct_opv(s,claz_fd_stream,name,"BIVALENT-P",zlot_fd_stream_bivalent_p).
struct_opv(s,claz_fd_stream,name,"BUFFERING",zlot_fd_stream_buffering).
struct_opv(s,claz_fd_stream,name,"CHAR-SIZE",zlot_fd_stream_char_size).
struct_opv(s,claz_fd_stream,name,"DELETE-ORIGINAL",zlot_fd_stream_delete_original).
struct_opv(s,claz_fd_stream,name,"DUAL-CHANNEL-P",zlot_fd_stream_dual_channel_p).
struct_opv(s,claz_fd_stream,name,"ELEMENT-SIZE",zlot_fd_stream_element_size).
struct_opv(s,claz_fd_stream,name,"ELEMENT-TYPE",zlot_fd_stream_element_type).
struct_opv(s,claz_fd_stream,name,"EOF-FORCED-P",zlot_fd_stream_eof_forced_p).
struct_opv(s,claz_fd_stream,name,"EXTERNAL-FORMAT",zlot_fd_stream_external_format).
struct_opv(s,claz_fd_stream,name,"FD",zlot_fd_stream_fd).
struct_opv(s,claz_fd_stream,name,"FD-TYPE",zlot_fd_stream_fd_type).
struct_opv(s,claz_fd_stream,name,"FILE",zlot_fd_stream_file).
struct_opv(s,claz_fd_stream,name,"HANDLER",zlot_fd_stream_handler).
struct_opv(s,claz_fd_stream,name,"IBUF",zlot_fd_stream_ibuf).
struct_opv(s,claz_fd_stream,name,"INSTEAD",zlot_fd_stream_instead).
struct_opv(s,claz_fd_stream,name,"LISTEN",zlot_fd_stream_listen).
struct_opv(s,claz_fd_stream,name,"MISC",zlot_fd_stream_misc).
struct_opv(s,claz_fd_stream,name,"NAME",zlot_fd_stream_name).
struct_opv(s,claz_fd_stream,name,"OBUF",zlot_fd_stream_obuf).
struct_opv(s,claz_fd_stream,name,"ORIGINAL",zlot_fd_stream_original).
struct_opv(s,claz_fd_stream,name,"OUTPUT-BYTES",zlot_fd_stream_output_bytes).
struct_opv(s,claz_fd_stream,name,"OUTPUT-COLUMN",zlot_fd_stream_output_column).
struct_opv(s,claz_fd_stream,name,"OUTPUT-QUEUE",zlot_fd_stream_output_queue).
struct_opv(s,claz_fd_stream,name,"PATHNAME",zlot_fd_stream_pathname).
struct_opv(s,claz_fd_stream,name,"SERVE-EVENTS",zlot_fd_stream_serve_events).
struct_opv(s,claz_fd_stream,name,"TIMEOUT",zlot_fd_stream_timeout).
struct_opv(s,claz_fd_stream,slot,bivalent_p,zlot_fd_stream_bivalent_p).
struct_opv(s,claz_fd_stream,slot,buffering,zlot_fd_stream_buffering).
struct_opv(s,claz_fd_stream,slot,char_size,zlot_fd_stream_char_size).
struct_opv(s,claz_fd_stream,slot,delete_original,zlot_fd_stream_delete_original).
struct_opv(s,claz_fd_stream,slot,dual_channel_p,zlot_fd_stream_dual_channel_p).
struct_opv(s,claz_fd_stream,slot,element_size,zlot_fd_stream_element_size).
struct_opv(s,claz_fd_stream,slot,element_type,zlot_fd_stream_element_type).
struct_opv(s,claz_fd_stream,slot,eof_forced_p,zlot_fd_stream_eof_forced_p).
struct_opv(s,claz_fd_stream,slot,external_format,zlot_fd_stream_external_format).
struct_opv(s,claz_fd_stream,slot,fd,zlot_fd_stream_fd).
struct_opv(s,claz_fd_stream,slot,fd_type,zlot_fd_stream_fd_type).
struct_opv(s,claz_fd_stream,slot,file,zlot_fd_stream_file).
struct_opv(s,claz_fd_stream,slot,handler,zlot_fd_stream_handler).
struct_opv(s,claz_fd_stream,slot,ibuf,zlot_fd_stream_ibuf).
struct_opv(s,claz_fd_stream,slot,instead,zlot_fd_stream_instead).
struct_opv(s,claz_fd_stream,slot,listen,zlot_fd_stream_listen).
struct_opv(s,claz_fd_stream,slot,misc,zlot_fd_stream_misc).
struct_opv(s,claz_fd_stream,slot,name,zlot_fd_stream_name).
struct_opv(s,claz_fd_stream,slot,obuf,zlot_fd_stream_obuf).
struct_opv(s,claz_fd_stream,slot,original,zlot_fd_stream_original).
struct_opv(s,claz_fd_stream,slot,output_bytes,zlot_fd_stream_output_bytes).
struct_opv(s,claz_fd_stream,slot,output_column,zlot_fd_stream_output_column).
struct_opv(s,claz_fd_stream,slot,output_queue,zlot_fd_stream_output_queue).
struct_opv(s,claz_fd_stream,slot,pathname,zlot_fd_stream_pathname).
struct_opv(s,claz_fd_stream,slot,serve_events,zlot_fd_stream_serve_events).
struct_opv(s,claz_fd_stream,slot,timeout,zlot_fd_stream_timeout).
struct_opv(s,claz_fd_stream,subtypep,claz_ansi_stream).
struct_opv(s,claz_fd_stream,subtypep,claz_file_stream).
struct_opv(s,claz_fd_stream,super_priority,[claz_file_stream,claz_ansi_stream,claz_stream,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(s,claz_file_stream,classname,"FILE-STREAM").
struct_opv(s,claz_file_stream,classof,claz_built_in_class).
struct_opv(s,claz_file_stream,name,"BYTES-PER-UNIT",zlot_file_stream_bytes_per_unit).
struct_opv(s,claz_file_stream,name,"PATHNAME",zlot_file_stream_pathname).
struct_opv(s,claz_file_stream,name,"RACF",zlot_file_stream_racf).
struct_opv(s,claz_file_stream,readonly,t,zlot_file_stream_bytes_per_unit).
struct_opv(s,claz_file_stream,readonly,t,zlot_file_stream_pathname).
struct_opv(s,claz_file_stream,readonly,t,zlot_file_stream_racf).
struct_opv(s,claz_file_stream,returns,claz_integer,zlot_file_stream_bytes_per_unit).
struct_opv(s,claz_file_stream,returns,claz_pathname,zlot_file_stream_pathname).
struct_opv(s,claz_file_stream,returns,claz_random_access_character_file,zlot_file_stream_racf).
struct_opv(s,claz_file_stream,slot,bytes_per_unit,zlot_file_stream_bytes_per_unit).
struct_opv(s,claz_file_stream,slot,pathname,zlot_file_stream_pathname).
struct_opv(s,claz_file_stream,slot,racf,zlot_file_stream_racf).
struct_opv(s,claz_file_stream,subtypep,claz_stream).
struct_opv(s,claz_file_stream,super_priority,[claz_stream,claz_t]).
struct_opv(s,claz_fill_pointer_output_stream,classname,"FILL-POINTER-OUTPUT-STREAM").
struct_opv(s,claz_fill_pointer_output_stream,classof,claz_built_in_class).
struct_opv(s,claz_fill_pointer_output_stream,name,"MISC",zlot_fill_pointer_output_stream_misc).
struct_opv(s,claz_fill_pointer_output_stream,name,"OUT",zlot_fill_pointer_output_stream_out).
struct_opv(s,claz_fill_pointer_output_stream,name,"SOUT",zlot_fill_pointer_output_stream_sout).
struct_opv(s,claz_fill_pointer_output_stream,name,"STRING",zlot_fill_pointer_output_stream_string).
struct_opv(s,claz_fill_pointer_output_stream,name,"STRING-BUFFER",zlot_fill_pointer_output_stream_string_buffer).
struct_opv(s,claz_fill_pointer_output_stream,returns,claz_complex_string,zlot_fill_pointer_output_stream_string_buffer).
struct_opv(s,claz_fill_pointer_output_stream,slot,misc,zlot_fill_pointer_output_stream_misc).
struct_opv(s,claz_fill_pointer_output_stream,slot,out,zlot_fill_pointer_output_stream_out).
struct_opv(s,claz_fill_pointer_output_stream,slot,sout,zlot_fill_pointer_output_stream_sout).
struct_opv(s,claz_fill_pointer_output_stream,slot,string,zlot_fill_pointer_output_stream_string).
struct_opv(s,claz_fill_pointer_output_stream,slot,string_buffer,zlot_fill_pointer_output_stream_string_buffer).
struct_opv(s,claz_fill_pointer_output_stream,subtypep,claz_ansi_stream).
struct_opv(s,claz_fill_pointer_output_stream,subtypep,claz_stream).
struct_opv(s,claz_fill_pointer_output_stream,subtypep,claz_string_stream).
struct_opv(s,claz_fill_pointer_output_stream,super_priority,[claz_string_stream,claz_ansi_stream,claz_stream,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(s,claz_fill_stream,classname,"FILL-STREAM").
struct_opv(s,claz_fill_stream,classof,claz_built_in_class).
struct_opv(s,claz_fill_stream,name,"BUFFER",zlot_fill_stream_buffer).
struct_opv(s,claz_fill_stream,name,"CURRENT-INDENT",zlot_fill_stream_current_indent).
struct_opv(s,claz_fill_stream,name,"INDENT-VAR",zlot_fill_stream_indent_var).
struct_opv(s,claz_fill_stream,name,"INSIDE-SEXP",zlot_fill_stream_inside_sexp).
struct_opv(s,claz_fill_stream,name,"PENDING-INDENT",zlot_fill_stream_pending_indent).
struct_opv(s,claz_fill_stream,name,"PENDING-SPACE",zlot_fill_stream_pending_space).
struct_opv(s,claz_fill_stream,name,"SEXP-INDENT",zlot_fill_stream_sexp_indent).
struct_opv(s,claz_fill_stream,name,"TARGET-STREAM",zlot_fill_stream_target_stream).
struct_opv(s,claz_fill_stream,slot,buffer,zlot_fill_stream_buffer).
struct_opv(s,claz_fill_stream,slot,current_indent,zlot_fill_stream_current_indent).
struct_opv(s,claz_fill_stream,slot,indent_var,zlot_fill_stream_indent_var).
struct_opv(s,claz_fill_stream,slot,inside_sexp,zlot_fill_stream_inside_sexp).
struct_opv(s,claz_fill_stream,slot,pending_indent,zlot_fill_stream_pending_indent).
struct_opv(s,claz_fill_stream,slot,pending_space,zlot_fill_stream_pending_space).
struct_opv(s,claz_fill_stream,slot,sexp_indent,zlot_fill_stream_sexp_indent).
struct_opv(s,claz_fill_stream,slot,target_stream,zlot_fill_stream_target_stream).
struct_opv(s,claz_fill_stream,subtypep,claz_fundamental_character_output_stream).
struct_opv(s,claz_fill_stream,super_priority,[claz_fundamental_character_output_stream,claz_fundamental_output_stream,claz_fundamental_character_stream,claz_fundamental_stream,claz_stream,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(s,claz_form_tracking_stream,classname,"FORM-TRACKING-STREAM").
struct_opv(s,claz_form_tracking_stream,classof,claz_built_in_class).
struct_opv(s,claz_form_tracking_stream,name,"FORM-START-BYTE-POS",zlot_form_tracking_stream_form_start_byte_pos).
struct_opv(s,claz_form_tracking_stream,name,"FORM-START-CHAR-POS",zlot_form_tracking_stream_form_start_char_pos).
struct_opv(s,claz_form_tracking_stream,name,"INPUT-CHAR-POS",zlot_form_tracking_stream_input_char_pos).
struct_opv(s,claz_form_tracking_stream,name,"LAST-NEWLINE",zlot_form_tracking_stream_last_newline).
struct_opv(s,claz_form_tracking_stream,name,"MISC",zlot_form_tracking_stream_misc).
struct_opv(s,claz_form_tracking_stream,name,"NEWLINES",zlot_form_tracking_stream_newlines).
struct_opv(s,claz_form_tracking_stream,name,"OBSERVER",zlot_form_tracking_stream_observer).
struct_opv(s,claz_form_tracking_stream,slot,form_start_byte_pos,zlot_form_tracking_stream_form_start_byte_pos).
struct_opv(s,claz_form_tracking_stream,slot,form_start_char_pos,zlot_form_tracking_stream_form_start_char_pos).
struct_opv(s,claz_form_tracking_stream,slot,input_char_pos,zlot_form_tracking_stream_input_char_pos).
struct_opv(s,claz_form_tracking_stream,slot,last_newline,zlot_form_tracking_stream_last_newline).
struct_opv(s,claz_form_tracking_stream,slot,misc,zlot_form_tracking_stream_misc).
struct_opv(s,claz_form_tracking_stream,slot,newlines,zlot_form_tracking_stream_newlines).
struct_opv(s,claz_form_tracking_stream,slot,observer,zlot_form_tracking_stream_observer).
struct_opv(s,claz_form_tracking_stream,subtypep,claz_fd_stream).
struct_opv(s,claz_form_tracking_stream,super_priority,[claz_fd_stream,claz_file_stream,claz_ansi_stream,claz_stream,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(s,claz_fundamental_binary_input_stream,classname,"FUNDAMENTAL-BINARY-INPUT-STREAM").
struct_opv(s,claz_fundamental_binary_input_stream,classof,claz_built_in_class).
struct_opv(s,claz_fundamental_binary_input_stream,subtypep,claz_fundamental_binary_stream).
struct_opv(s,claz_fundamental_binary_input_stream,subtypep,claz_fundamental_input_stream).
struct_opv(s,claz_fundamental_binary_input_stream,super_priority,[claz_fundamental_input_stream,claz_fundamental_binary_stream,claz_fundamental_stream,claz_standard_object,claz_slot_object,claz_stream,claz_t]).
struct_opv(s,claz_fundamental_binary_input_stream,super_priority,[claz_fundamental_input_stream,claz_fundamental_binary_stream,claz_fundamental_stream,claz_stream,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(s,claz_fundamental_binary_output_stream,classname,"FUNDAMENTAL-BINARY-OUTPUT-STREAM").
struct_opv(s,claz_fundamental_binary_output_stream,classof,claz_built_in_class).
struct_opv(s,claz_fundamental_binary_output_stream,subtypep,claz_fundamental_binary_stream).
struct_opv(s,claz_fundamental_binary_output_stream,subtypep,claz_fundamental_output_stream).
struct_opv(s,claz_fundamental_binary_output_stream,super_priority,[claz_fundamental_output_stream,claz_fundamental_binary_stream,claz_fundamental_stream,claz_standard_object,claz_slot_object,claz_stream,claz_t]).
struct_opv(s,claz_fundamental_binary_output_stream,super_priority,[claz_fundamental_output_stream,claz_fundamental_binary_stream,claz_fundamental_stream,claz_stream,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(s,claz_fundamental_binary_stream,classname,"FUNDAMENTAL-BINARY-STREAM").
struct_opv(s,claz_fundamental_binary_stream,classof,claz_built_in_class).
struct_opv(s,claz_fundamental_binary_stream,subtypep,claz_fundamental_stream).
struct_opv(s,claz_fundamental_binary_stream,super_priority,[claz_fundamental_stream,claz_standard_object,claz_slot_object,claz_stream,claz_t]).
struct_opv(s,claz_fundamental_binary_stream,super_priority,[claz_fundamental_stream,claz_stream,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(s,claz_fundamental_character_input_stream,classname,"FUNDAMENTAL-CHARACTER-INPUT-STREAM").
struct_opv(s,claz_fundamental_character_input_stream,classof,claz_built_in_class).
struct_opv(s,claz_fundamental_character_input_stream,name,"LASTCHAR",zlot_fundamental_character_input_stream_lastchar).
struct_opv(s,claz_fundamental_character_input_stream,slot,lastchar,zlot_fundamental_character_input_stream_lastchar).
struct_opv(s,claz_fundamental_character_input_stream,subtypep,claz_fundamental_character_stream).
struct_opv(s,claz_fundamental_character_input_stream,subtypep,claz_fundamental_input_stream).
struct_opv(s,claz_fundamental_character_input_stream,super_priority,[claz_fundamental_input_stream,claz_fundamental_character_stream,claz_fundamental_stream,claz_standard_object,claz_slot_object,claz_stream,claz_t]).
struct_opv(s,claz_fundamental_character_input_stream,super_priority,[claz_fundamental_input_stream,claz_fundamental_character_stream,claz_fundamental_stream,claz_stream,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(s,claz_fundamental_character_output_stream,classname,"FUNDAMENTAL-CHARACTER-OUTPUT-STREAM").
struct_opv(s,claz_fundamental_character_output_stream,classof,claz_built_in_class).
struct_opv(s,claz_fundamental_character_output_stream,subtypep,claz_fundamental_character_stream).
struct_opv(s,claz_fundamental_character_output_stream,subtypep,claz_fundamental_output_stream).
struct_opv(s,claz_fundamental_character_output_stream,super_priority,[claz_fundamental_output_stream,claz_fundamental_character_stream,claz_fundamental_stream,claz_standard_object,claz_slot_object,claz_stream,claz_t]).
struct_opv(s,claz_fundamental_character_output_stream,super_priority,[claz_fundamental_output_stream,claz_fundamental_character_stream,claz_fundamental_stream,claz_stream,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(s,claz_fundamental_character_stream,classname,"FUNDAMENTAL-CHARACTER-STREAM").
struct_opv(s,claz_fundamental_character_stream,classof,claz_built_in_class).
struct_opv(s,claz_fundamental_character_stream,subtypep,claz_fundamental_stream).
struct_opv(s,claz_fundamental_character_stream,super_priority,[claz_fundamental_stream,claz_standard_object,claz_slot_object,claz_stream,claz_t]).
struct_opv(s,claz_fundamental_character_stream,super_priority,[claz_fundamental_stream,claz_stream,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(s,claz_fundamental_input_stream,classname,"FUNDAMENTAL-INPUT-STREAM").
struct_opv(s,claz_fundamental_input_stream,classof,claz_built_in_class).
struct_opv(s,claz_fundamental_input_stream,subtypep,claz_fundamental_stream).
struct_opv(s,claz_fundamental_input_stream,super_priority,[claz_fundamental_stream,claz_standard_object,claz_slot_object,claz_stream,claz_t]).
struct_opv(s,claz_fundamental_input_stream,super_priority,[claz_fundamental_stream,claz_stream,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(s,claz_fundamental_output_stream,classname,"FUNDAMENTAL-OUTPUT-STREAM").
struct_opv(s,claz_fundamental_output_stream,classof,claz_built_in_class).
struct_opv(s,claz_fundamental_output_stream,subtypep,claz_fundamental_stream).
struct_opv(s,claz_fundamental_output_stream,super_priority,[claz_fundamental_stream,claz_standard_object,claz_slot_object,claz_stream,claz_t]).
struct_opv(s,claz_fundamental_output_stream,super_priority,[claz_fundamental_stream,claz_stream,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(s,claz_fundamental_stream,classname,"FUNDAMENTAL-STREAM").
struct_opv(s,claz_fundamental_stream,classof,claz_built_in_class).
struct_opv(s,claz_fundamental_stream,name,"FASL",zlot_fundamental_stream_fasl).
struct_opv(s,claz_fundamental_stream,name,"OPEN",zlot_fundamental_stream_open).
struct_opv(s,claz_fundamental_stream,name,"OPEN-P",zlot_fundamental_stream_open_p).
struct_opv(s,claz_fundamental_stream,name,"PENL",zlot_fundamental_stream_penl).
struct_opv(s,claz_fundamental_stream,slot,fasl,zlot_fundamental_stream_fasl).
struct_opv(s,claz_fundamental_stream,slot,open,zlot_fundamental_stream_open).
struct_opv(s,claz_fundamental_stream,slot,open_p,zlot_fundamental_stream_open_p).
struct_opv(s,claz_fundamental_stream,slot,penl,zlot_fundamental_stream_penl).
struct_opv(s,claz_fundamental_stream,subtypep,claz_standard_object).
struct_opv(s,claz_fundamental_stream,subtypep,claz_stream).
struct_opv(s,claz_fundamental_stream,super_priority,[claz_standard_object,claz_slot_object,claz_stream,claz_t]).
struct_opv(s,claz_fundamental_stream,super_priority,[claz_stream,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(s,claz_j_zip_output_stream,classname,"J-ZIP-OUTPUT-STREAM").
struct_opv(s,claz_j_zip_output_stream,classof,claz_built_in_class).
struct_opv(s,claz_jar_stream,classname,"JAR-STREAM").
struct_opv(s,claz_jar_stream,classof,claz_built_in_class).
struct_opv(s,claz_jar_stream,name,"BYTES-PER-UNIT",zlot_jar_stream_bytes_per_unit).
struct_opv(s,claz_jar_stream,name,"INPUT",zlot_jar_stream_input).
struct_opv(s,claz_jar_stream,name,"PATHNAME",zlot_jar_stream_pathname).
struct_opv(s,claz_jar_stream,name,"READER",zlot_jar_stream_reader).
struct_opv(s,claz_jar_stream,readonly,t,zlot_jar_stream_bytes_per_unit).
struct_opv(s,claz_jar_stream,readonly,t,zlot_jar_stream_input).
struct_opv(s,claz_jar_stream,readonly,t,zlot_jar_stream_pathname).
struct_opv(s,claz_jar_stream,readonly,t,zlot_jar_stream_reader).
struct_opv(s,claz_jar_stream,returns,claz_integer,zlot_jar_stream_bytes_per_unit).
struct_opv(s,claz_jar_stream,returns,claz_pathname,zlot_jar_stream_pathname).
struct_opv(s,claz_jar_stream,returns,claz_prolog_input_stream,zlot_jar_stream_input).
struct_opv(s,claz_jar_stream,returns,claz_prolog_reader,zlot_jar_stream_reader).
struct_opv(s,claz_jar_stream,slot,bytes_per_unit,zlot_jar_stream_bytes_per_unit).
struct_opv(s,claz_jar_stream,slot,input,zlot_jar_stream_input).
struct_opv(s,claz_jar_stream,slot,pathname,zlot_jar_stream_pathname).
struct_opv(s,claz_jar_stream,slot,reader,zlot_jar_stream_reader).
struct_opv(s,claz_jar_stream,subtypep,claz_stream).
struct_opv(s,claz_pretty_stream,classname,"PRETTY-STREAM").
struct_opv(s,claz_pretty_stream,classof,claz_built_in_class).
struct_opv(s,claz_pretty_stream,name,"BLOCKS",zlot_pretty_stream_blocks).
struct_opv(s,claz_pretty_stream,name,"BUFFER",zlot_pretty_stream_buffer).
struct_opv(s,claz_pretty_stream,name,"BUFFER-FILL-POINTER",zlot_pretty_stream_buffer_fill_pointer).
struct_opv(s,claz_pretty_stream,name,"BUFFER-OFFSET",zlot_pretty_stream_buffer_offset).
struct_opv(s,claz_pretty_stream,name,"BUFFER-START-COLUMN",zlot_pretty_stream_buffer_start_column).
struct_opv(s,claz_pretty_stream,name,"CHAR-OUT-ONESHOT-HOOK",zlot_pretty_stream_char_out_oneshot_hook).
struct_opv(s,claz_pretty_stream,name,"LINE-LENGTH",zlot_pretty_stream_line_length).
struct_opv(s,claz_pretty_stream,name,"LINE-NUMBER",zlot_pretty_stream_line_number).
struct_opv(s,claz_pretty_stream,name,"PENDING-BLOCKS",zlot_pretty_stream_pending_blocks).
struct_opv(s,claz_pretty_stream,name,"PREFIX",zlot_pretty_stream_prefix).
struct_opv(s,claz_pretty_stream,name,"PRINT-LINES",zlot_pretty_stream_print_lines).
struct_opv(s,claz_pretty_stream,name,"QUEUE-HEAD",zlot_pretty_stream_queue_head).
struct_opv(s,claz_pretty_stream,name,"QUEUE-TAIL",zlot_pretty_stream_queue_tail).
struct_opv(s,claz_pretty_stream,name,"SUFFIX",zlot_pretty_stream_suffix).
struct_opv(s,claz_pretty_stream,name,"TARGET",zlot_pretty_stream_target).
struct_opv(s,claz_pretty_stream,slot,blocks,zlot_pretty_stream_blocks).
struct_opv(s,claz_pretty_stream,slot,buffer,zlot_pretty_stream_buffer).
struct_opv(s,claz_pretty_stream,slot,buffer_fill_pointer,zlot_pretty_stream_buffer_fill_pointer).
struct_opv(s,claz_pretty_stream,slot,buffer_offset,zlot_pretty_stream_buffer_offset).
struct_opv(s,claz_pretty_stream,slot,buffer_start_column,zlot_pretty_stream_buffer_start_column).
struct_opv(s,claz_pretty_stream,slot,char_out_oneshot_hook,zlot_pretty_stream_char_out_oneshot_hook).
struct_opv(s,claz_pretty_stream,slot,line_length,zlot_pretty_stream_line_length).
struct_opv(s,claz_pretty_stream,slot,line_number,zlot_pretty_stream_line_number).
struct_opv(s,claz_pretty_stream,slot,pending_blocks,zlot_pretty_stream_pending_blocks).
struct_opv(s,claz_pretty_stream,slot,prefix,zlot_pretty_stream_prefix).
struct_opv(s,claz_pretty_stream,slot,print_lines,zlot_pretty_stream_print_lines).
struct_opv(s,claz_pretty_stream,slot,queue_head,zlot_pretty_stream_queue_head).
struct_opv(s,claz_pretty_stream,slot,queue_tail,zlot_pretty_stream_queue_tail).
struct_opv(s,claz_pretty_stream,slot,suffix,zlot_pretty_stream_suffix).
struct_opv(s,claz_pretty_stream,slot,target,zlot_pretty_stream_target).
struct_opv(s,claz_pretty_stream,subtypep,claz_ansi_stream).
struct_opv(s,claz_pretty_stream,super_priority,[claz_ansi_stream,claz_stream,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(s,claz_prolog_byte_array_input_stream,classname,"PROLOG-BYTE-ARRAY-INPUT-STREAM").
struct_opv(s,claz_prolog_byte_array_input_stream,classof,claz_built_in_class).
struct_opv(s,claz_prolog_byte_array_output_stream,classname,"PROLOG-BYTE-ARRAY-OUTPUT-STREAM").
struct_opv(s,claz_prolog_byte_array_output_stream,classof,claz_built_in_class).
struct_opv(s,claz_prolog_input_stream,classname,"PROLOG-INPUT-STREAM").
struct_opv(s,claz_prolog_input_stream,classof,claz_built_in_class).
struct_opv(s,claz_prolog_output_stream,classname,"PROLOG-OUTPUT-STREAM").
struct_opv(s,claz_prolog_output_stream,classof,claz_built_in_class).
struct_opv(s,claz_prolog_pushback_input_stream,classname,"PROLOG-PUSHBACK-INPUT-STREAM").
struct_opv(s,claz_prolog_pushback_input_stream,classof,claz_built_in_class).
struct_opv(s,claz_random_access_character_file,classname,"RANDOM-ACCESS-CHARACTER-FILE").
struct_opv(s,claz_random_access_character_file,classof,claz_built_in_class).
struct_opv(s,claz_random_access_character_file,name,"BBUF",zlot_random_access_character_file_bbuf).
struct_opv(s,claz_random_access_character_file,name,"BBUF-IS-DIRTY",zlot_random_access_character_file_bbuf_is_dirty).
struct_opv(s,claz_random_access_character_file,name,"BBUF-IS-READABLE",zlot_random_access_character_file_bbuf_is_readable).
struct_opv(s,claz_random_access_character_file,name,"BBUFPOS",zlot_random_access_character_file_bbufpos).
struct_opv(s,claz_random_access_character_file,name,"CDEC",zlot_random_access_character_file_cdec).
struct_opv(s,claz_random_access_character_file,name,"CENC",zlot_random_access_character_file_cenc).
struct_opv(s,claz_random_access_character_file,name,"CSET",zlot_random_access_character_file_cset).
struct_opv(s,claz_random_access_character_file,name,"FCN",zlot_random_access_character_file_fcn).
struct_opv(s,claz_random_access_character_file,name,"INPUT-STREAM",zlot_random_access_character_file_input_stream).
struct_opv(s,claz_random_access_character_file,name,"OUTPUT-STREAM",zlot_random_access_character_file_output_stream).
struct_opv(s,claz_random_access_character_file,name,"READER",zlot_random_access_character_file_reader).
struct_opv(s,claz_random_access_character_file,name,"SHORT-BYTE-BUF",zlot_random_access_character_file_short_byte_buf).
struct_opv(s,claz_random_access_character_file,name,"SINGLE-CHAR-BUF",zlot_random_access_character_file_single_char_buf).
struct_opv(s,claz_random_access_character_file,name,"WRITER",zlot_random_access_character_file_writer).
struct_opv(s,claz_random_access_character_file,returns,claz_boolean,zlot_random_access_character_file_bbuf_is_dirty).
struct_opv(s,claz_random_access_character_file,returns,claz_boolean,zlot_random_access_character_file_bbuf_is_readable).
struct_opv(s,claz_random_access_character_file,returns,claz_long,zlot_random_access_character_file_bbufpos).
struct_opv(s,claz_random_access_character_file,returns,claz_prolog_byte_buffer,zlot_random_access_character_file_bbuf).
struct_opv(s,claz_random_access_character_file,returns,claz_prolog_byte_buffer,zlot_random_access_character_file_short_byte_buf).
struct_opv(s,claz_random_access_character_file,returns,claz_prolog_char_buffer,zlot_random_access_character_file_single_char_buf).
struct_opv(s,claz_random_access_character_file,returns,claz_prolog_charset,zlot_random_access_character_file_cset).
struct_opv(s,claz_random_access_character_file,returns,claz_prolog_charset_decoder,zlot_random_access_character_file_cdec).
struct_opv(s,claz_random_access_character_file,returns,claz_prolog_charset_encoder,zlot_random_access_character_file_cenc).
struct_opv(s,claz_random_access_character_file,returns,claz_prolog_file_channel,zlot_random_access_character_file_fcn).
struct_opv(s,claz_random_access_character_file,returns,claz_random_access_input_stream,zlot_random_access_character_file_input_stream).
struct_opv(s,claz_random_access_character_file,returns,claz_random_access_output_stream,zlot_random_access_character_file_output_stream).
struct_opv(s,claz_random_access_character_file,returns,claz_random_access_reader,zlot_random_access_character_file_reader).
struct_opv(s,claz_random_access_character_file,returns,claz_random_access_writer,zlot_random_access_character_file_writer).
struct_opv(s,claz_random_access_character_file,slot,bbuf,zlot_random_access_character_file_bbuf).
struct_opv(s,claz_random_access_character_file,slot,bbuf_is_dirty,zlot_random_access_character_file_bbuf_is_dirty).
struct_opv(s,claz_random_access_character_file,slot,bbuf_is_readable,zlot_random_access_character_file_bbuf_is_readable).
struct_opv(s,claz_random_access_character_file,slot,bbufpos,zlot_random_access_character_file_bbufpos).
struct_opv(s,claz_random_access_character_file,slot,cdec,zlot_random_access_character_file_cdec).
struct_opv(s,claz_random_access_character_file,slot,cenc,zlot_random_access_character_file_cenc).
struct_opv(s,claz_random_access_character_file,slot,cset,zlot_random_access_character_file_cset).
struct_opv(s,claz_random_access_character_file,slot,fcn,zlot_random_access_character_file_fcn).
struct_opv(s,claz_random_access_character_file,slot,input_stream,zlot_random_access_character_file_input_stream).
struct_opv(s,claz_random_access_character_file,slot,output_stream,zlot_random_access_character_file_output_stream).
struct_opv(s,claz_random_access_character_file,slot,reader,zlot_random_access_character_file_reader).
struct_opv(s,claz_random_access_character_file,slot,short_byte_buf,zlot_random_access_character_file_short_byte_buf).
struct_opv(s,claz_random_access_character_file,slot,single_char_buf,zlot_random_access_character_file_single_char_buf).
struct_opv(s,claz_random_access_character_file,slot,writer,zlot_random_access_character_file_writer).
struct_opv(s,claz_random_access_input_stream,classname,"RANDOM-ACCESS-INPUT-STREAM").
struct_opv(s,claz_random_access_input_stream,classof,claz_built_in_class).
struct_opv(s,claz_random_access_input_stream,name,"READ-BUF",zlot_random_access_input_stream_read_buf).
struct_opv(s,claz_random_access_input_stream,name,"THIS-0",zlot_random_access_input_stream_this_0).
struct_opv(s,claz_random_access_input_stream,readonly,t,zlot_random_access_input_stream_this_0).
struct_opv(s,claz_random_access_input_stream,returns,claz_random_access_character_file,zlot_random_access_input_stream_this_0).
struct_opv(s,claz_random_access_input_stream,returns,claz_simple_vector(claz_unsigned_byte8),zlot_random_access_input_stream_read_buf).
struct_opv(s,claz_random_access_input_stream,slot,read_buf,zlot_random_access_input_stream_read_buf).
struct_opv(s,claz_random_access_input_stream,slot,this_0,zlot_random_access_input_stream_this_0).
struct_opv(s,claz_random_access_output_stream,classname,"RANDOM-ACCESS-OUTPUT-STREAM").
struct_opv(s,claz_random_access_output_stream,classof,claz_built_in_class).
struct_opv(s,claz_random_access_output_stream,name,"THIS-0",zlot_random_access_output_stream_this_0).
struct_opv(s,claz_random_access_output_stream,name,"WRITE-BUF",zlot_random_access_output_stream_write_buf).
struct_opv(s,claz_random_access_output_stream,readonly,t,zlot_random_access_output_stream_this_0).
struct_opv(s,claz_random_access_output_stream,returns,claz_random_access_character_file,zlot_random_access_output_stream_this_0).
struct_opv(s,claz_random_access_output_stream,returns,claz_simple_vector(claz_unsigned_byte8),zlot_random_access_output_stream_write_buf).
struct_opv(s,claz_random_access_output_stream,slot,this_0,zlot_random_access_output_stream_this_0).
struct_opv(s,claz_random_access_output_stream,slot,write_buf,zlot_random_access_output_stream_write_buf).
struct_opv(s,claz_random_access_reader,classname,"RANDOM-ACCESS-READER").
struct_opv(s,claz_random_access_reader,classof,claz_built_in_class).
struct_opv(s,claz_random_access_reader,name,"READ-BUF",zlot_random_access_reader_read_buf).
struct_opv(s,claz_random_access_reader,name,"THIS-0",zlot_random_access_reader_this_0).
struct_opv(s,claz_random_access_reader,readonly,t,zlot_random_access_reader_this_0).
struct_opv(s,claz_random_access_reader,returns,claz_random_access_character_file,zlot_random_access_reader_this_0).
struct_opv(s,claz_random_access_reader,returns,claz_simple_vector(claz_char_code),zlot_random_access_reader_read_buf).
struct_opv(s,claz_random_access_reader,slot,read_buf,zlot_random_access_reader_read_buf).
struct_opv(s,claz_random_access_reader,slot,this_0,zlot_random_access_reader_this_0).
struct_opv(s,claz_random_access_writer,classname,"RANDOM-ACCESS-WRITER").
struct_opv(s,claz_random_access_writer,classof,claz_built_in_class).
struct_opv(s,claz_random_access_writer,name,"THIS-0",zlot_random_access_writer_this_0).
struct_opv(s,claz_random_access_writer,readonly,t,zlot_random_access_writer_this_0).
struct_opv(s,claz_random_access_writer,returns,claz_random_access_character_file,zlot_random_access_writer_this_0).
struct_opv(s,claz_random_access_writer,slot,this_0,zlot_random_access_writer_this_0).
struct_opv(s,claz_slime_input_stream,classname,"SLIME-INPUT-STREAM").
struct_opv(s,claz_slime_input_stream,classof,claz_built_in_class).
struct_opv(s,claz_slime_input_stream,name,"F",zlot_slime_input_stream_f).
struct_opv(s,claz_slime_input_stream,name,"LENGTH",zlot_slime_input_stream_length).
struct_opv(s,claz_slime_input_stream,name,"OSTREAM",zlot_slime_input_stream_ostream).
struct_opv(s,claz_slime_input_stream,name,"S",zlot_slime_input_stream_s).
struct_opv(s,claz_slime_input_stream,readonly,t,zlot_slime_input_stream_f).
struct_opv(s,claz_slime_input_stream,readonly,t,zlot_slime_input_stream_ostream).
struct_opv(s,claz_slime_input_stream,returns,claz_function,zlot_slime_input_stream_f).
struct_opv(s,claz_slime_input_stream,returns,claz_integer,zlot_slime_input_stream_length).
struct_opv(s,claz_slime_input_stream,returns,claz_stream,zlot_slime_input_stream_ostream).
struct_opv(s,claz_slime_input_stream,returns,claz_string,zlot_slime_input_stream_s).
struct_opv(s,claz_slime_input_stream,slot,f,zlot_slime_input_stream_f).
struct_opv(s,claz_slime_input_stream,slot,length,zlot_slime_input_stream_length).
struct_opv(s,claz_slime_input_stream,slot,ostream,zlot_slime_input_stream_ostream).
struct_opv(s,claz_slime_input_stream,slot,s,zlot_slime_input_stream_s).
struct_opv(s,claz_slime_input_stream,subtypep,claz_stream).
struct_opv(s,claz_slime_output_stream,classname,"SLIME-OUTPUT-STREAM").
struct_opv(s,claz_slime_output_stream,classof,claz_built_in_class).
struct_opv(s,claz_slime_output_stream,name,"F",zlot_slime_output_stream_f).
struct_opv(s,claz_slime_output_stream,name,"STRING-WRITER",zlot_slime_output_stream_string_writer).
struct_opv(s,claz_slime_output_stream,readonly,t,zlot_slime_output_stream_f).
struct_opv(s,claz_slime_output_stream,readonly,t,zlot_slime_output_stream_string_writer).
struct_opv(s,claz_slime_output_stream,returns,claz_function,zlot_slime_output_stream_f).
struct_opv(s,claz_slime_output_stream,returns,claz_prolog_string_writer,zlot_slime_output_stream_string_writer).
struct_opv(s,claz_slime_output_stream,slot,f,zlot_slime_output_stream_f).
struct_opv(s,claz_slime_output_stream,slot,string_writer,zlot_slime_output_stream_string_writer).
struct_opv(s,claz_slime_output_stream,subtypep,claz_stream).
struct_opv(s,claz_socket_stream,classname,"SOCKET-STREAM").
struct_opv(s,claz_socket_stream,classof,claz_built_in_class).
struct_opv(s,claz_socket_stream,name,"SOCKET",zlot_socket_stream_socket).
struct_opv(s,claz_socket_stream,readonly,t,zlot_socket_stream_socket).
struct_opv(s,claz_socket_stream,returns,claz_prolog_socket,zlot_socket_stream_socket).
struct_opv(s,claz_socket_stream,slot,socket,zlot_socket_stream_socket).
struct_opv(s,claz_socket_stream,subtypep,claz_two_way_stream).
struct_opv(s,claz_stream,classname,"STREAM").
struct_opv(s,claz_stream,classof,claz_built_in_class).
struct_opv(s,claz_stream,name,"CHAR-POS",zlot_stream_char_pos).
struct_opv(s,claz_stream,name,"ELEMENT-TYPE",zlot_stream_element_type).
struct_opv(s,claz_stream,name,"ENCODING",zlot_stream_encoding).
struct_opv(s,claz_stream,name,"EOL-CHAR",zlot_stream_eol_char).
struct_opv(s,claz_stream,name,"EOL-STYLE",zlot_stream_eol_style).
struct_opv(s,claz_stream,name,"EXTERNAL-FORMAT",zlot_stream_external_format).
struct_opv(s,claz_stream,name,"IN",zlot_stream_in).
struct_opv(s,claz_stream,name,"INTERACTIVE",zlot_stream_interactive).
struct_opv(s,claz_stream,name,"IS-BINARY-STREAM",zlot_stream_is_binary_stream).
struct_opv(s,claz_stream,name,"IS-CHARACTER-STREAM",zlot_stream_is_character_stream).
struct_opv(s,claz_stream,name,"IS-INPUT-STREAM",zlot_stream_is_input_stream).
struct_opv(s,claz_stream,name,"IS-OUTPUT-STREAM",zlot_stream_is_output_stream).
struct_opv(s,claz_stream,name,"LAST-CHAR",zlot_stream_last_char).
struct_opv(s,claz_stream,name,"LINE-NUMBER",zlot_stream_line_number).
struct_opv(s,claz_stream,name,"OFFSET",zlot_stream_offset).
struct_opv(s,claz_stream,name,"OPEN",zlot_stream_open).
struct_opv(s,claz_stream,name,"OUT",zlot_stream_out).
struct_opv(s,claz_stream,name,"PAST-END",zlot_stream_past_end).
struct_opv(s,claz_stream,name,"READER",zlot_stream_reader).
struct_opv(s,claz_stream,name,"WRITER",zlot_stream_writer).
struct_opv(s,claz_stream,returns,claz_boolean,zlot_stream_interactive).
struct_opv(s,claz_stream,returns,claz_boolean,zlot_stream_is_binary_stream).
struct_opv(s,claz_stream,returns,claz_boolean,zlot_stream_is_character_stream).
struct_opv(s,claz_stream,returns,claz_boolean,zlot_stream_is_input_stream).
struct_opv(s,claz_stream,returns,claz_boolean,zlot_stream_is_output_stream).
struct_opv(s,claz_stream,returns,claz_boolean,zlot_stream_open).
struct_opv(s,claz_stream,returns,claz_boolean,zlot_stream_past_end).
struct_opv(s,claz_stream,returns,claz_char_code,zlot_stream_eol_char).
struct_opv(s,claz_stream,returns,claz_char_code,zlot_stream_last_char).
struct_opv(s,claz_stream,returns,claz_integer,zlot_stream_char_pos).
struct_opv(s,claz_stream,returns,claz_integer,zlot_stream_line_number).
struct_opv(s,claz_stream,returns,claz_integer,zlot_stream_offset).
struct_opv(s,claz_stream,returns,claz_prolog_input_stream,zlot_stream_in).
struct_opv(s,claz_stream,returns,claz_prolog_output_stream,zlot_stream_out).
struct_opv(s,claz_stream,returns,claz_prolog_pushback_reader,zlot_stream_reader).
struct_opv(s,claz_stream,returns,claz_prolog_writer,zlot_stream_writer).
struct_opv(s,claz_stream,returns,claz_stream_eol_style,zlot_stream_eol_style).
struct_opv(s,claz_stream,returns,claz_string,zlot_stream_encoding).
struct_opv(s,claz_stream,returns,claz_t,zlot_stream_element_type).
struct_opv(s,claz_stream,returns,claz_t,zlot_stream_external_format).
struct_opv(s,claz_stream,slot,char_pos,zlot_stream_char_pos).
struct_opv(s,claz_stream,slot,element_type,zlot_stream_element_type).
struct_opv(s,claz_stream,slot,encoding,zlot_stream_encoding).
struct_opv(s,claz_stream,slot,eol_char,zlot_stream_eol_char).
struct_opv(s,claz_stream,slot,eol_style,zlot_stream_eol_style).
struct_opv(s,claz_stream,slot,external_format,zlot_stream_external_format).
struct_opv(s,claz_stream,slot,in,zlot_stream_in).
struct_opv(s,claz_stream,slot,interactive,zlot_stream_interactive).
struct_opv(s,claz_stream,slot,is_binary_stream,zlot_stream_is_binary_stream).
struct_opv(s,claz_stream,slot,is_character_stream,zlot_stream_is_character_stream).
struct_opv(s,claz_stream,slot,is_input_stream,zlot_stream_is_input_stream).
struct_opv(s,claz_stream,slot,is_output_stream,zlot_stream_is_output_stream).
struct_opv(s,claz_stream,slot,last_char,zlot_stream_last_char).
struct_opv(s,claz_stream,slot,line_number,zlot_stream_line_number).
struct_opv(s,claz_stream,slot,offset,zlot_stream_offset).
struct_opv(s,claz_stream,slot,open,zlot_stream_open).
struct_opv(s,claz_stream,slot,out,zlot_stream_out).
struct_opv(s,claz_stream,slot,past_end,zlot_stream_past_end).
struct_opv(s,claz_stream,slot,reader,zlot_stream_reader).
struct_opv(s,claz_stream,slot,writer,zlot_stream_writer).
struct_opv(s,claz_stream,subtypep,claz_structure_object).
struct_opv(s,claz_stream,subtypep,claz_t).
struct_opv(s,claz_stream,super_priority,[claz_t]).
struct_opv(s,claz_string_input_stream,classname,"STRING-INPUT-STREAM").
struct_opv(s,claz_string_input_stream,classof,claz_built_in_class).
struct_opv(s,claz_string_input_stream,name,"CURRENT",zlot_string_input_stream_current).
struct_opv(s,claz_string_input_stream,name,"END",zlot_string_input_stream_end).
struct_opv(s,claz_string_input_stream,name,"IN",zlot_string_input_stream_in).
struct_opv(s,claz_string_input_stream,name,"MISC",zlot_string_input_stream_misc).
struct_opv(s,claz_string_input_stream,name,"START",zlot_string_input_stream_start).
struct_opv(s,claz_string_input_stream,name,"STRING",zlot_string_input_stream_string).
struct_opv(s,claz_string_input_stream,name,"STRING-READER",zlot_string_input_stream_string_reader).
struct_opv(s,claz_string_input_stream,name,"SUB-STRING",zlot_string_input_stream_sub_string).
struct_opv(s,claz_string_input_stream,readonly,t,zlot_string_input_stream_start).
struct_opv(s,claz_string_input_stream,readonly,t,zlot_string_input_stream_string_reader).
struct_opv(s,claz_string_input_stream,readonly,t,zlot_string_input_stream_sub_string).
struct_opv(s,claz_string_input_stream,returns,claz_integer,zlot_string_input_stream_start).
struct_opv(s,claz_string_input_stream,returns,claz_prolog_string_reader,zlot_string_input_stream_string_reader).
struct_opv(s,claz_string_input_stream,returns,claz_string,zlot_string_input_stream_sub_string).
struct_opv(s,claz_string_input_stream,slot,current,zlot_string_input_stream_current).
struct_opv(s,claz_string_input_stream,slot,end,zlot_string_input_stream_end).
struct_opv(s,claz_string_input_stream,slot,in,zlot_string_input_stream_in).
struct_opv(s,claz_string_input_stream,slot,misc,zlot_string_input_stream_misc).
struct_opv(s,claz_string_input_stream,slot,start,zlot_string_input_stream_start).
struct_opv(s,claz_string_input_stream,slot,string,zlot_string_input_stream_string).
struct_opv(s,claz_string_input_stream,slot,string_reader,zlot_string_input_stream_string_reader).
struct_opv(s,claz_string_input_stream,slot,sub_string,zlot_string_input_stream_sub_string).
struct_opv(s,claz_string_input_stream,subtypep,claz_ansi_stream).
struct_opv(s,claz_string_input_stream,subtypep,claz_stream).
struct_opv(s,claz_string_input_stream,subtypep,claz_string_stream).
struct_opv(s,claz_string_input_stream,super_priority,[claz_string_stream,claz_ansi_stream,claz_stream,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(s,claz_string_output_stream,classname,"STRING-OUTPUT-STREAM").
struct_opv(s,claz_string_output_stream,classof,claz_built_in_class).
struct_opv(s,claz_string_output_stream,name,"BUFFER",zlot_string_output_stream_buffer).
struct_opv(s,claz_string_output_stream,name,"ELEMENT-TYPE",zlot_string_output_stream_element_type).
struct_opv(s,claz_string_output_stream,name,"INDEX",zlot_string_output_stream_index).
struct_opv(s,claz_string_output_stream,name,"INDEX-CACHE",zlot_string_output_stream_index_cache).
struct_opv(s,claz_string_output_stream,name,"MISC",zlot_string_output_stream_misc).
struct_opv(s,claz_string_output_stream,name,"NEXT",zlot_string_output_stream_next).
struct_opv(s,claz_string_output_stream,name,"OUT",zlot_string_output_stream_out).
struct_opv(s,claz_string_output_stream,name,"POINTER",zlot_string_output_stream_pointer).
struct_opv(s,claz_string_output_stream,name,"PREV",zlot_string_output_stream_prev).
struct_opv(s,claz_string_output_stream,name,"SOUT",zlot_string_output_stream_sout).
struct_opv(s,claz_string_output_stream,name,"STRING-WRITER",zlot_string_output_stream_string_writer).
struct_opv(s,claz_string_output_stream,readonly,t,zlot_string_output_stream_string_writer).
struct_opv(s,claz_string_output_stream,returns,claz_seekable_string_writer,zlot_string_output_stream_string_writer).
struct_opv(s,claz_string_output_stream,slot,buffer,zlot_string_output_stream_buffer).
struct_opv(s,claz_string_output_stream,slot,element_type,zlot_string_output_stream_element_type).
struct_opv(s,claz_string_output_stream,slot,index,zlot_string_output_stream_index).
struct_opv(s,claz_string_output_stream,slot,index_cache,zlot_string_output_stream_index_cache).
struct_opv(s,claz_string_output_stream,slot,misc,zlot_string_output_stream_misc).
struct_opv(s,claz_string_output_stream,slot,next,zlot_string_output_stream_next).
struct_opv(s,claz_string_output_stream,slot,out,zlot_string_output_stream_out).
struct_opv(s,claz_string_output_stream,slot,pointer,zlot_string_output_stream_pointer).
struct_opv(s,claz_string_output_stream,slot,prev,zlot_string_output_stream_prev).
struct_opv(s,claz_string_output_stream,slot,sout,zlot_string_output_stream_sout).
struct_opv(s,claz_string_output_stream,slot,string_writer,zlot_string_output_stream_string_writer).
struct_opv(s,claz_string_output_stream,subtypep,claz_ansi_stream).
struct_opv(s,claz_string_output_stream,subtypep,claz_stream).
struct_opv(s,claz_string_output_stream,subtypep,claz_string_stream).
struct_opv(s,claz_string_output_stream,super_priority,[claz_string_stream,claz_ansi_stream,claz_stream,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(s,claz_string_stream,classname,"STRING-STREAM").
struct_opv(s,claz_string_stream,classof,claz_built_in_class).
struct_opv(s,claz_string_stream,subtypep,claz_stream).
struct_opv(s,claz_string_stream,super_priority,[claz_stream,claz_t]).
struct_opv(s,claz_synonym_stream,classname,"SYNONYM-STREAM").
struct_opv(s,claz_synonym_stream,classof,claz_built_in_class).
struct_opv(s,claz_synonym_stream,name,"MISC",zlot_synonym_stream_misc).
struct_opv(s,claz_synonym_stream,name,"SYMBOL",zlot_synonym_stream_symbol).
struct_opv(s,claz_synonym_stream,readonly,t,zlot_synonym_stream_stream_name).
struct_opv(s,claz_synonym_stream,returns,claz_symbol,zlot_synonym_stream_symbol).
struct_opv(s,claz_synonym_stream,slot,misc,zlot_synonym_stream_misc).
struct_opv(s,claz_synonym_stream,slot,symbol,zlot_synonym_stream_symbol).
struct_opv(s,claz_synonym_stream,subtypep,claz_ansi_stream).
struct_opv(s,claz_synonym_stream,subtypep,claz_stream).
struct_opv(s,claz_synonym_stream,super_priority,[claz_ansi_stream,claz_stream,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(s,claz_synonym_stream,super_priority,[claz_stream,claz_t]).
struct_opv(s,claz_two_way_stream,classname,"TWO-WAY-STREAM").
struct_opv(s,claz_two_way_stream,classof,claz_built_in_class).
struct_opv(s,claz_two_way_stream,name,"BIN",zlot_two_way_stream_bin).
struct_opv(s,claz_two_way_stream,name,"BOUT",zlot_two_way_stream_bout).
struct_opv(s,claz_two_way_stream,name,"IN",zlot_two_way_stream_in).
struct_opv(s,claz_two_way_stream,name,"INPUT-STREAM",zlot_two_way_stream_input_stream).
struct_opv(s,claz_two_way_stream,name,"MISC",zlot_two_way_stream_misc).
struct_opv(s,claz_two_way_stream,name,"N-BIN",zlot_two_way_stream_n_bin).
struct_opv(s,claz_two_way_stream,name,"OUT",zlot_two_way_stream_out).
struct_opv(s,claz_two_way_stream,name,"OUTPUT-STREAM",zlot_two_way_stream_output_stream).
struct_opv(s,claz_two_way_stream,name,"SOUT",zlot_two_way_stream_sout).
struct_opv(s,claz_two_way_stream,readonly,t,zlot_two_way_stream_in).
struct_opv(s,claz_two_way_stream,readonly,t,zlot_two_way_stream_out).
struct_opv(s,claz_two_way_stream,returns,claz_stream,zlot_two_way_stream_in).
struct_opv(s,claz_two_way_stream,returns,claz_stream,zlot_two_way_stream_out).
struct_opv(s,claz_two_way_stream,slot,bin,zlot_two_way_stream_bin).
struct_opv(s,claz_two_way_stream,slot,bout,zlot_two_way_stream_bout).
struct_opv(s,claz_two_way_stream,slot,in,zlot_two_way_stream_in).
struct_opv(s,claz_two_way_stream,slot,input_stream,zlot_two_way_stream_input_stream).
struct_opv(s,claz_two_way_stream,slot,misc,zlot_two_way_stream_misc).
struct_opv(s,claz_two_way_stream,slot,n_bin,zlot_two_way_stream_n_bin).
struct_opv(s,claz_two_way_stream,slot,out,zlot_two_way_stream_out).
struct_opv(s,claz_two_way_stream,slot,output_stream,zlot_two_way_stream_output_stream).
struct_opv(s,claz_two_way_stream,slot,sout,zlot_two_way_stream_sout).
struct_opv(s,claz_two_way_stream,subtypep,claz_ansi_stream).
struct_opv(s,claz_two_way_stream,subtypep,claz_stream).
struct_opv(s,claz_two_way_stream,super_priority,[claz_ansi_stream,claz_stream,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(s,claz_two_way_stream,super_priority,[claz_stream,claz_t]).
struct_opv(s,claz_upcase_stream,classname,"UPCASE-STREAM").
struct_opv(s,claz_upcase_stream,classof,claz_built_in_class).
struct_opv(s,claz_upcase_stream,subtypep,claz_case_frob_stream).
struct_opv(s,claz_url_stream,classname,"URL-STREAM").
struct_opv(s,claz_url_stream,classof,claz_built_in_class).
struct_opv(s,claz_url_stream,name,"BYTES-PER-UNIT",zlot_url_stream_bytes_per_unit).
struct_opv(s,claz_url_stream,name,"INPUT",zlot_url_stream_input).
struct_opv(s,claz_url_stream,name,"PATHNAME",zlot_url_stream_pathname).
struct_opv(s,claz_url_stream,name,"READER",zlot_url_stream_reader).
struct_opv(s,claz_url_stream,readonly,t,zlot_url_stream_bytes_per_unit).
struct_opv(s,claz_url_stream,readonly,t,zlot_url_stream_input).
struct_opv(s,claz_url_stream,readonly,t,zlot_url_stream_pathname).
struct_opv(s,claz_url_stream,readonly,t,zlot_url_stream_reader).
struct_opv(s,claz_url_stream,returns,claz_integer,zlot_url_stream_bytes_per_unit).
struct_opv(s,claz_url_stream,returns,claz_pathname,zlot_url_stream_pathname).
struct_opv(s,claz_url_stream,returns,claz_prolog_input_stream,zlot_url_stream_input).
struct_opv(s,claz_url_stream,returns,claz_prolog_reader,zlot_url_stream_reader).
struct_opv(s,claz_url_stream,slot,bytes_per_unit,zlot_url_stream_bytes_per_unit).
struct_opv(s,claz_url_stream,slot,input,zlot_url_stream_input).
struct_opv(s,claz_url_stream,slot,pathname,zlot_url_stream_pathname).
struct_opv(s,claz_url_stream,slot,reader,zlot_url_stream_reader).
struct_opv(s,claz_url_stream,subtypep,claz_stream).


struct_opv(z,claz_abort_failure,classname,"ABORT-FAILURE").
struct_opv(z,claz_abort_failure,classof,claz_built_in_class).
struct_opv(z,claz_abstract_lexenv,classname,"ABSTRACT-LEXENV").
struct_opv(z,claz_abstract_lexenv,classof,claz_built_in_class).
struct_opv(z,claz_abstract_lexenv,subtypep,claz_structure_object).
struct_opv(z,claz_abstract_lexenv,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_accessor_dfun_info,classname,"ACCESSOR-DFUN-INFO").
struct_opv(z,claz_accessor_dfun_info,classof,claz_built_in_class).
struct_opv(z,claz_accessor_dfun_info,name,"ACCESSOR-TYPE",zlot_accessor_dfun_info_accessor_type).
struct_opv(z,claz_accessor_dfun_info,slot,accessor_type,zlot_accessor_dfun_info_accessor_type).
struct_opv(z,claz_accessor_dfun_info,subtypep,claz_dfun_info).
struct_opv(z,claz_accessor_dfun_info,super_priority,[claz_dfun_info,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_accessor_method,classname,"ACCESSOR-METHOD").
struct_opv(z,claz_accessor_method,classof,claz_built_in_class).
struct_opv(z,claz_accessor_method,name,"SLOT-NAME",zlot_accessor_method_slot_name).
struct_opv(z,claz_accessor_method,slot,slot_name,zlot_accessor_method_slot_name).
struct_opv(z,claz_accessor_method,subtypep,claz_standard_method).
struct_opv(z,claz_accessor_method,super_priority,[claz_standard_method,claz_plist_mixin,claz_definition_source_mixin,claz_method,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(z,claz_alien_alien_value_type,classname,"ALIEN-ALIEN-VALUE-TYPE").
struct_opv(z,claz_alien_alien_value_type,classof,claz_built_in_class).
struct_opv(z,claz_alien_alien_value_type,name,"CLASS",zlot_alien_alien_value_type_class).
struct_opv(z,claz_alien_alien_value_type,slot,class,zlot_alien_alien_value_type_class).
struct_opv(z,claz_alien_alien_value_type,subtypep,claz_alien_system_area_pointer_type).
struct_opv(z,claz_alien_alien_value_type,super_priority,[claz_alien_system_area_pointer_type,claz_alien_type,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_alien_array(claz_type),classname,"ALIEN-ARRAY-TYPE").
struct_opv(z,claz_alien_array(claz_type),classof,claz_built_in_class).
struct_opv(z,claz_alien_array(claz_type),name,"CLASS",zlot_alien_array_type_class).
struct_opv(z,claz_alien_array(claz_type),name,"DIMENSIONS",zlot_alien_array_type_dimensions).
struct_opv(z,claz_alien_array(claz_type),name,"ELEMENT-TYPE",zlot_alien_array_type_element_type).
struct_opv(z,claz_alien_array(claz_type),slot,class,zlot_alien_array_type_class).
struct_opv(z,claz_alien_array(claz_type),slot,dimensions,zlot_alien_array_type_dimensions).
struct_opv(z,claz_alien_array(claz_type),slot,element_type,zlot_alien_array_type_element_type).
struct_opv(z,claz_alien_array(claz_type),subtypep,claz_alien_mem_block_type).
struct_opv(z,claz_alien_array(claz_type),super_priority,[claz_alien_mem_block_type,claz_alien_alien_value_type,claz_alien_system_area_pointer_type,claz_alien_type,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_alien_boolean_type,classname,"ALIEN-BOOLEAN-TYPE").
struct_opv(z,claz_alien_boolean_type,classof,claz_built_in_class).
struct_opv(z,claz_alien_boolean_type,name,"CLASS",zlot_alien_boolean_type_class).
struct_opv(z,claz_alien_boolean_type,slot,class,zlot_alien_boolean_type_class).
struct_opv(z,claz_alien_boolean_type,subtypep,claz_alien_integer_type).
struct_opv(z,claz_alien_boolean_type,super_priority,[claz_alien_integer_type,claz_alien_type,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_alien_c_string_type,classname,"ALIEN-C-STRING-TYPE").
struct_opv(z,claz_alien_c_string_type,classof,claz_built_in_class).
struct_opv(z,claz_alien_c_string_type,name,"CLASS",zlot_alien_c_string_type_class).
struct_opv(z,claz_alien_c_string_type,name,"ELEMENT-TYPE",zlot_alien_c_string_type_element_type).
struct_opv(z,claz_alien_c_string_type,name,"EXTERNAL-FORMAT",zlot_alien_c_string_type_external_format).
struct_opv(z,claz_alien_c_string_type,name,"NOT-NULL",zlot_alien_c_string_type_not_null).
struct_opv(z,claz_alien_c_string_type,slot,class,zlot_alien_c_string_type_class).
struct_opv(z,claz_alien_c_string_type,slot,element_type,zlot_alien_c_string_type_element_type).
struct_opv(z,claz_alien_c_string_type,slot,external_format,zlot_alien_c_string_type_external_format).
struct_opv(z,claz_alien_c_string_type,slot,not_null,zlot_alien_c_string_type_not_null).
struct_opv(z,claz_alien_c_string_type,subtypep,claz_alien_pointer_type).
struct_opv(z,claz_alien_c_string_type,super_priority,[claz_alien_pointer_type,claz_alien_alien_value_type,claz_alien_system_area_pointer_type,claz_alien_type,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_alien_claz_built_in_class,classname,"ALIEN-CLAZ-BUILT-IN-CLASS").
struct_opv(z,claz_alien_claz_built_in_class,classof,claz_built_in_class).
struct_opv(z,claz_alien_claz_built_in_class,name,"ALIEN-TYPE",zlot_alien_claz_built_in_class_alien_type).
struct_opv(z,claz_alien_claz_built_in_class,name,"CLASS-INFO",zlot_alien_claz_built_in_class_class_info).
struct_opv(z,claz_alien_claz_built_in_class,slot,alien_type,zlot_alien_claz_built_in_class_alien_type).
struct_opv(z,claz_alien_claz_built_in_class,slot,class_info,zlot_alien_claz_built_in_class_class_info).
struct_opv(z,claz_alien_claz_built_in_class,subtypep,claz_ctype).
struct_opv(z,claz_alien_claz_built_in_class,super_priority,[claz_ctype,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_alien_double_float_type,classname,"ALIEN-DOUBLE-FLOAT-TYPE").
struct_opv(z,claz_alien_double_float_type,classof,claz_built_in_class).
struct_opv(z,claz_alien_double_float_type,name,"BITS",zlot_alien_double_float_type_bits).
struct_opv(z,claz_alien_double_float_type,name,"CLASS",zlot_alien_double_float_type_class).
struct_opv(z,claz_alien_double_float_type,slot,bits,zlot_alien_double_float_type_bits).
struct_opv(z,claz_alien_double_float_type,slot,class,zlot_alien_double_float_type_class).
struct_opv(z,claz_alien_double_float_type,subtypep,claz_alien_float_type).
struct_opv(z,claz_alien_double_float_type,super_priority,[claz_alien_float_type,claz_alien_type,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_alien_enum_type,classname,"ALIEN-ENUM-TYPE").
struct_opv(z,claz_alien_enum_type,classof,claz_built_in_class).
struct_opv(z,claz_alien_enum_type,name,"BITS",zlot_alien_enum_type_bits).
struct_opv(z,claz_alien_enum_type,name,"CLASS",zlot_alien_enum_type_class).
struct_opv(z,claz_alien_enum_type,name,"FROM",zlot_alien_enum_type_from).
struct_opv(z,claz_alien_enum_type,name,"KIND",zlot_alien_enum_type_kind).
struct_opv(z,claz_alien_enum_type,name,"NAME",zlot_alien_enum_type_name).
struct_opv(z,claz_alien_enum_type,name,"OFFSET",zlot_alien_enum_type_offset).
struct_opv(z,claz_alien_enum_type,name,"TO",zlot_alien_enum_type_to).
struct_opv(z,claz_alien_enum_type,slot,bits,zlot_alien_enum_type_bits).
struct_opv(z,claz_alien_enum_type,slot,class,zlot_alien_enum_type_class).
struct_opv(z,claz_alien_enum_type,slot,from,zlot_alien_enum_type_from).
struct_opv(z,claz_alien_enum_type,slot,kind,zlot_alien_enum_type_kind).
struct_opv(z,claz_alien_enum_type,slot,name,zlot_alien_enum_type_name).
struct_opv(z,claz_alien_enum_type,slot,offset,zlot_alien_enum_type_offset).
struct_opv(z,claz_alien_enum_type,slot,to,zlot_alien_enum_type_to).
struct_opv(z,claz_alien_enum_type,subtypep,claz_alien_integer_type).
struct_opv(z,claz_alien_enum_type,super_priority,[claz_alien_integer_type,claz_alien_type,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_alien_float_type,classname,"ALIEN-FLOAT-TYPE").
struct_opv(z,claz_alien_float_type,classof,claz_built_in_class).
struct_opv(z,claz_alien_float_type,name,"CLASS",zlot_alien_float_type_class).
struct_opv(z,claz_alien_float_type,name,"TYPE",zlot_alien_float_type_type).
struct_opv(z,claz_alien_float_type,slot,class,zlot_alien_float_type_class).
struct_opv(z,claz_alien_float_type,slot,type,zlot_alien_float_type_type).
struct_opv(z,claz_alien_float_type,subtypep,claz_alien_type).
struct_opv(z,claz_alien_float_type,super_priority,[claz_alien_type,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_alien_fun_type,classname,"ALIEN-FUN-TYPE").
struct_opv(z,claz_alien_fun_type,classof,claz_built_in_class).
struct_opv(z,claz_alien_fun_type,name,"ARG-TYPES",zlot_alien_fun_type_arg_types).
struct_opv(z,claz_alien_fun_type,name,"CLASS",zlot_alien_fun_type_class).
struct_opv(z,claz_alien_fun_type,name,"CONVENTION",zlot_alien_fun_type_convention).
struct_opv(z,claz_alien_fun_type,name,"RESULT-TYPE",zlot_alien_fun_type_result_type).
struct_opv(z,claz_alien_fun_type,name,"STUB",zlot_alien_fun_type_stub).
struct_opv(z,claz_alien_fun_type,slot,arg_types,zlot_alien_fun_type_arg_types).
struct_opv(z,claz_alien_fun_type,slot,class,zlot_alien_fun_type_class).
struct_opv(z,claz_alien_fun_type,slot,convention,zlot_alien_fun_type_convention).
struct_opv(z,claz_alien_fun_type,slot,result_type,zlot_alien_fun_type_result_type).
struct_opv(z,claz_alien_fun_type,slot,stub,zlot_alien_fun_type_stub).
struct_opv(z,claz_alien_fun_type,subtypep,claz_alien_mem_block_type).
struct_opv(z,claz_alien_fun_type,super_priority,[claz_alien_mem_block_type,claz_alien_alien_value_type,claz_alien_system_area_pointer_type,claz_alien_type,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_alien_integer_type,classname,"ALIEN-INTEGER-TYPE").
struct_opv(z,claz_alien_integer_type,classof,claz_built_in_class).
struct_opv(z,claz_alien_integer_type,name,"CLASS",zlot_alien_integer_type_class).
struct_opv(z,claz_alien_integer_type,name,"SIGNED",zlot_alien_integer_type_signed).
struct_opv(z,claz_alien_integer_type,slot,class,zlot_alien_integer_type_class).
struct_opv(z,claz_alien_integer_type,slot,signed,zlot_alien_integer_type_signed).
struct_opv(z,claz_alien_integer_type,subtypep,claz_alien_type).
struct_opv(z,claz_alien_integer_type,super_priority,[claz_alien_type,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_alien_mem_block_type,classname,"ALIEN-MEM-BLOCK-TYPE").
struct_opv(z,claz_alien_mem_block_type,classof,claz_built_in_class).
struct_opv(z,claz_alien_mem_block_type,name,"CLASS",zlot_alien_mem_block_type_class).
struct_opv(z,claz_alien_mem_block_type,slot,class,zlot_alien_mem_block_type_class).
struct_opv(z,claz_alien_mem_block_type,subtypep,claz_alien_alien_value_type).
struct_opv(z,claz_alien_mem_block_type,super_priority,[claz_alien_alien_value_type,claz_alien_system_area_pointer_type,claz_alien_type,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_alien_pointer_type,classname,"ALIEN-POINTER-TYPE").
struct_opv(z,claz_alien_pointer_type,classof,claz_built_in_class).
struct_opv(z,claz_alien_pointer_type,name,"BITS",zlot_alien_pointer_type_bits).
struct_opv(z,claz_alien_pointer_type,name,"CLASS",zlot_alien_pointer_type_class).
struct_opv(z,claz_alien_pointer_type,name,"TO",zlot_alien_pointer_type_to).
struct_opv(z,claz_alien_pointer_type,slot,bits,zlot_alien_pointer_type_bits).
struct_opv(z,claz_alien_pointer_type,slot,class,zlot_alien_pointer_type_class).
struct_opv(z,claz_alien_pointer_type,slot,to,zlot_alien_pointer_type_to).
struct_opv(z,claz_alien_pointer_type,subtypep,claz_alien_alien_value_type).
struct_opv(z,claz_alien_pointer_type,super_priority,[claz_alien_alien_value_type,claz_alien_system_area_pointer_type,claz_alien_type,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_alien_record_field,classname,"ALIEN-RECORD-FIELD").
struct_opv(z,claz_alien_record_field,classof,claz_built_in_class).
struct_opv(z,claz_alien_record_field,name,"BITS",zlot_alien_record_field_bits).
struct_opv(z,claz_alien_record_field,name,"NAME",zlot_alien_record_field_name).
struct_opv(z,claz_alien_record_field,name,"OFFSET",zlot_alien_record_field_offset).
struct_opv(z,claz_alien_record_field,name,"TYPE",zlot_alien_record_field_type).
struct_opv(z,claz_alien_record_field,slot,bits,zlot_alien_record_field_bits).
struct_opv(z,claz_alien_record_field,slot,name,zlot_alien_record_field_name).
struct_opv(z,claz_alien_record_field,slot,offset,zlot_alien_record_field_offset).
struct_opv(z,claz_alien_record_field,slot,type,zlot_alien_record_field_type).
struct_opv(z,claz_alien_record_field,subtypep,claz_structure_c33_object).
struct_opv(z,claz_alien_record_field,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_alien_record_type,classname,"ALIEN-RECORD-TYPE").
struct_opv(z,claz_alien_record_type,classof,claz_built_in_class).
struct_opv(z,claz_alien_record_type,name,"CLASS",zlot_alien_record_type_class).
struct_opv(z,claz_alien_record_type,name,"FIELDS",zlot_alien_record_type_fields).
struct_opv(z,claz_alien_record_type,name,"KIND",zlot_alien_record_type_kind).
struct_opv(z,claz_alien_record_type,name,"NAME",zlot_alien_record_type_name).
struct_opv(z,claz_alien_record_type,slot,class,zlot_alien_record_type_class).
struct_opv(z,claz_alien_record_type,slot,fields,zlot_alien_record_type_fields).
struct_opv(z,claz_alien_record_type,slot,kind,zlot_alien_record_type_kind).
struct_opv(z,claz_alien_record_type,slot,name,zlot_alien_record_type_name).
struct_opv(z,claz_alien_record_type,subtypep,claz_alien_mem_block_type).
struct_opv(z,claz_alien_record_type,super_priority,[claz_alien_mem_block_type,claz_alien_alien_value_type,claz_alien_system_area_pointer_type,claz_alien_type,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_alien_single_float_type,classname,"ALIEN-SINGLE-FLOAT-TYPE").
struct_opv(z,claz_alien_single_float_type,classof,claz_built_in_class).
struct_opv(z,claz_alien_single_float_type,name,"BITS",zlot_alien_single_float_type_bits).
struct_opv(z,claz_alien_single_float_type,name,"CLASS",zlot_alien_single_float_type_class).
struct_opv(z,claz_alien_single_float_type,slot,bits,zlot_alien_single_float_type_bits).
struct_opv(z,claz_alien_single_float_type,slot,class,zlot_alien_single_float_type_class).
struct_opv(z,claz_alien_single_float_type,subtypep,claz_alien_float_type).
struct_opv(z,claz_alien_single_float_type,super_priority,[claz_alien_float_type,claz_alien_type,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_alien_stack_exhausted,classname,"ALIEN-STACK-EXHAUSTED").
struct_opv(z,claz_alien_stack_exhausted,classof,claz_built_in_class).
struct_opv(z,claz_alien_system_area_pointer_type,classname,"ALIEN-SYSTEM-AREA-POINTER-TYPE").
struct_opv(z,claz_alien_system_area_pointer_type,classof,claz_built_in_class).
struct_opv(z,claz_alien_system_area_pointer_type,name,"CLASS",zlot_alien_system_area_pointer_type_class).
struct_opv(z,claz_alien_system_area_pointer_type,slot,class,zlot_alien_system_area_pointer_type_class).
struct_opv(z,claz_alien_system_area_pointer_type,subtypep,claz_alien_type).
struct_opv(z,claz_alien_system_area_pointer_type,super_priority,[claz_alien_type,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_alien_type,classname,"ALIEN-TYPE").
struct_opv(z,claz_alien_type,classof,claz_built_in_class).
struct_opv(z,claz_alien_type,name,"ALIGNMENT",zlot_alien_type_alignment).
struct_opv(z,claz_alien_type,name,"BITS",zlot_alien_type_bits).
struct_opv(z,claz_alien_type,name,"CLASS",zlot_alien_type_class).
struct_opv(z,claz_alien_type,slot,alignment,zlot_alien_type_alignment).
struct_opv(z,claz_alien_type,slot,bits,zlot_alien_type_bits).
struct_opv(z,claz_alien_type,slot,class,zlot_alien_type_class).
struct_opv(z,claz_alien_type,subtypep,claz_structure_c33_object).
struct_opv(z,claz_alien_type,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_alien_type_class,classname,"ALIEN-TYPE-CLASS").
struct_opv(z,claz_alien_type_class,classof,claz_built_in_class).
struct_opv(z,claz_alien_type_class,name,"ALIEN-REP",zlot_alien_type_class_alien_rep).
struct_opv(z,claz_alien_type_class,name,"ARG-TN",zlot_alien_type_class_arg_tn).
struct_opv(z,claz_alien_type_class,name,"DEFSTRUCT-NAME",zlot_alien_type_class_defstruct_name).
struct_opv(z,claz_alien_type_class,name,"DEPORT-ALLOC-GEN",zlot_alien_type_class_deport_alloc_gen).
struct_opv(z,claz_alien_type_class,name,"DEPORT-GEN",zlot_alien_type_class_deport_gen).
struct_opv(z,claz_alien_type_class,name,"DEPORT-PIN-P",zlot_alien_type_class_deport_pin_p).
struct_opv(z,claz_alien_type_class,name,"DEPOSIT-GEN",zlot_alien_type_class_deposit_gen).
struct_opv(z,claz_alien_type_class,name,"EXTRACT-GEN",zlot_alien_type_class_extract_gen).
struct_opv(z,claz_alien_type_class,name,"INCLUDE",zlot_alien_type_class_include).
struct_opv(z,claz_alien_type_class,name,"LISP-REP",zlot_alien_type_class_lisp_rep).
struct_opv(z,claz_alien_type_class,name,"NAME",zlot_alien_type_class_name).
struct_opv(z,claz_alien_type_class,name,"NATURALIZE-GEN",zlot_alien_type_class_naturalize_gen).
struct_opv(z,claz_alien_type_class,name,"RESULT-TN",zlot_alien_type_class_result_tn).
struct_opv(z,claz_alien_type_class,name,"SUBTYPEP",zlot_alien_type_class_subtypep).
struct_opv(z,claz_alien_type_class,name,"TYPE-C61",zlot_alien_type_class_type_c61).
struct_opv(z,claz_alien_type_class,name,"UNPARSE",zlot_alien_type_class_unparse).
struct_opv(z,claz_alien_type_class,slot,alien_rep,zlot_alien_type_class_alien_rep).
struct_opv(z,claz_alien_type_class,slot,arg_tn,zlot_alien_type_class_arg_tn).
struct_opv(z,claz_alien_type_class,slot,defstruct_name,zlot_alien_type_class_defstruct_name).
struct_opv(z,claz_alien_type_class,slot,deport_alloc_gen,zlot_alien_type_class_deport_alloc_gen).
struct_opv(z,claz_alien_type_class,slot,deport_gen,zlot_alien_type_class_deport_gen).
struct_opv(z,claz_alien_type_class,slot,deport_pin_p,zlot_alien_type_class_deport_pin_p).
struct_opv(z,claz_alien_type_class,slot,deposit_gen,zlot_alien_type_class_deposit_gen).
struct_opv(z,claz_alien_type_class,slot,extract_gen,zlot_alien_type_class_extract_gen).
struct_opv(z,claz_alien_type_class,slot,include,zlot_alien_type_class_include).
struct_opv(z,claz_alien_type_class,slot,lisp_rep,zlot_alien_type_class_lisp_rep).
struct_opv(z,claz_alien_type_class,slot,name,zlot_alien_type_class_name).
struct_opv(z,claz_alien_type_class,slot,naturalize_gen,zlot_alien_type_class_naturalize_gen).
struct_opv(z,claz_alien_type_class,slot,result_tn,zlot_alien_type_class_result_tn).
struct_opv(z,claz_alien_type_class,slot,subtypep,zlot_alien_type_class_subtypep).
struct_opv(z,claz_alien_type_class,slot,type_c61,zlot_alien_type_class_type_c61).
struct_opv(z,claz_alien_type_class,slot,unparse,zlot_alien_type_class_unparse).
struct_opv(z,claz_alien_type_class,subtypep,claz_structure_object).
struct_opv(z,claz_alien_type_class,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_alien_value,classname,"ALIEN-VALUE").
struct_opv(z,claz_alien_value,classof,claz_built_in_class).
struct_opv(z,claz_alien_value,name,"SAP",zlot_alien_value_sap).
struct_opv(z,claz_alien_value,name,"TYPE",zlot_alien_value_type).
struct_opv(z,claz_alien_value,slot,sap,zlot_alien_value_sap).
struct_opv(z,claz_alien_value,slot,type,zlot_alien_value_type).
struct_opv(z,claz_alien_value,subtypep,claz_structure_object).
struct_opv(z,claz_alien_value,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_alien_values_type,classname,"ALIEN-VALUES-TYPE").
struct_opv(z,claz_alien_values_type,classof,claz_built_in_class).
struct_opv(z,claz_alien_values_type,name,"CLASS",zlot_alien_values_type_class).
struct_opv(z,claz_alien_values_type,name,"VALUES",zlot_alien_values_type_values).
struct_opv(z,claz_alien_values_type,slot,class,zlot_alien_values_type_class).
struct_opv(z,claz_alien_values_type,slot,values,zlot_alien_values_type_values).
struct_opv(z,claz_alien_values_type,subtypep,claz_alien_type).
struct_opv(z,claz_alien_values_type,super_priority,[claz_alien_type,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_alignment_note,classname,"ALIGNMENT-NOTE").
struct_opv(z,claz_alignment_note,classof,claz_built_in_class).
struct_opv(z,claz_alignment_note,name,"BITS",zlot_alignment_note_bits).
struct_opv(z,claz_alignment_note,name,"PATTERN",zlot_alignment_note_pattern).
struct_opv(z,claz_alignment_note,name,"SIZE",zlot_alignment_note_size).
struct_opv(z,claz_alignment_note,slot,bits,zlot_alignment_note_bits).
struct_opv(z,claz_alignment_note,slot,pattern,zlot_alignment_note_pattern).
struct_opv(z,claz_alignment_note,slot,size,zlot_alignment_note_size).
struct_opv(z,claz_alignment_note,subtypep,claz_annotation).
struct_opv(z,claz_alignment_note,super_priority,[claz_annotation,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_ambiguous_var_name,classname,"AMBIGUOUS-VAR-NAME").
struct_opv(z,claz_ambiguous_var_name,classof,claz_built_in_class).
struct_opv(z,claz_ambiguous_var_name,name,"FRAME",zlot_ambiguous_var_name_frame).
struct_opv(z,claz_ambiguous_var_name,name,"NAME",zlot_ambiguous_var_name_name).
struct_opv(z,claz_ambiguous_var_name,slot,frame,zlot_ambiguous_var_name_frame).
struct_opv(z,claz_ambiguous_var_name,slot,name,zlot_ambiguous_var_name_name).
struct_opv(z,claz_annotation,classname,"ANNOTATION").
struct_opv(z,claz_annotation,classof,claz_built_in_class).
struct_opv(z,claz_annotation,name,"INDEX",zlot_annotation_index).
struct_opv(z,claz_annotation,name,"POSN",zlot_annotation_posn).
struct_opv(z,claz_annotation,slot,index,zlot_annotation_index).
struct_opv(z,claz_annotation,slot,posn,zlot_annotation_posn).
struct_opv(z,claz_annotation,subtypep,claz_structure_c33_object).
struct_opv(z,claz_annotation,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_anode,classname,"ANODE").
struct_opv(z,claz_anode,classof,claz_built_in_class).
struct_opv(z,claz_anode,name,"CODE",zlot_anode_code).
struct_opv(z,claz_anode,name,"SECLASS",zlot_anode_seclass).
struct_opv(z,claz_anode,name,"TYPE",zlot_anode_type).
struct_opv(z,claz_anode,slot,code,zlot_anode_code).
struct_opv(z,claz_anode,slot,seclass,zlot_anode_seclass).
struct_opv(z,claz_anode,slot,type,zlot_anode_type).
struct_opv(z,claz_anode,subtypep,claz_structure_object).
struct_opv(z,claz_anode,super_priority,[claz_structure_object,claz_t]).
struct_opv(z,claz_approximate_fun_type,classname,"APPROXIMATE-FUN-TYPE").
struct_opv(z,claz_approximate_fun_type,classof,claz_built_in_class).
struct_opv(z,claz_approximate_fun_type,name,"KEYS",zlot_approximate_fun_type_keys).
struct_opv(z,claz_approximate_fun_type,name,"MAX-ARGS",zlot_approximate_fun_type_max_args).
struct_opv(z,claz_approximate_fun_type,name,"MIN-ARGS",zlot_approximate_fun_type_min_args).
struct_opv(z,claz_approximate_fun_type,name,"TYPES",zlot_approximate_fun_type_types).
struct_opv(z,claz_approximate_fun_type,slot,keys,zlot_approximate_fun_type_keys).
struct_opv(z,claz_approximate_fun_type,slot,max_args,zlot_approximate_fun_type_max_args).
struct_opv(z,claz_approximate_fun_type,slot,min_args,zlot_approximate_fun_type_min_args).
struct_opv(z,claz_approximate_fun_type,slot,types,zlot_approximate_fun_type_types).
struct_opv(z,claz_approximate_fun_type,subtypep,claz_structure_object).
struct_opv(z,claz_approximate_fun_type,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_approximate_key_info,classname,"APPROXIMATE-KEY-INFO").
struct_opv(z,claz_approximate_key_info,classof,claz_built_in_class).
struct_opv(z,claz_approximate_key_info,name,"ALLOWP",zlot_approximate_key_info_allowp).
struct_opv(z,claz_approximate_key_info,name,"NAME",zlot_approximate_key_info_name).
struct_opv(z,claz_approximate_key_info,name,"POSITION",zlot_approximate_key_info_position).
struct_opv(z,claz_approximate_key_info,name,"TYPES",zlot_approximate_key_info_types).
struct_opv(z,claz_approximate_key_info,slot,allowp,zlot_approximate_key_info_allowp).
struct_opv(z,claz_approximate_key_info,slot,name,zlot_approximate_key_info_name).
struct_opv(z,claz_approximate_key_info,slot,position,zlot_approximate_key_info_position).
struct_opv(z,claz_approximate_key_info,slot,types,zlot_approximate_key_info_types).
struct_opv(z,claz_approximate_key_info,subtypep,claz_structure_object).
struct_opv(z,claz_approximate_key_info,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_arg,classname,"ARG").
struct_opv(z,claz_arg,classof,claz_built_in_class).
struct_opv(z,claz_arg,name,"FIELDS",zlot_arg_fields).
struct_opv(z,claz_arg,name,"NAME",zlot_arg_name).
struct_opv(z,claz_arg,name,"POSITION",zlot_arg_position).
struct_opv(z,claz_arg,name,"PREFILTER",zlot_arg_prefilter).
struct_opv(z,claz_arg,name,"PRINTER",zlot_arg_printer).
struct_opv(z,claz_arg,name,"SIGN-EXTEND-P",zlot_arg_sign_extend_p).
struct_opv(z,claz_arg,name,"USE-LABEL",zlot_arg_use_label).
struct_opv(z,claz_arg,name,"VALUE",zlot_arg_value).
struct_opv(z,claz_arg,slot,fields,zlot_arg_fields).
struct_opv(z,claz_arg,slot,name,zlot_arg_name).
struct_opv(z,claz_arg,slot,position,zlot_arg_position).
struct_opv(z,claz_arg,slot,prefilter,zlot_arg_prefilter).
struct_opv(z,claz_arg,slot,printer,zlot_arg_printer).
struct_opv(z,claz_arg,slot,sign_extend_p,zlot_arg_sign_extend_p).
struct_opv(z,claz_arg,slot,use_label,zlot_arg_use_label).
struct_opv(z,claz_arg,slot,value,zlot_arg_value).
struct_opv(z,claz_arg,subtypep,claz_structure_object).
struct_opv(z,claz_arg,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_arg_form_kind,classname,"ARG-FORM-KIND").
struct_opv(z,claz_arg_form_kind,classof,claz_built_in_class).
struct_opv(z,claz_arg_form_kind,name,"CHECKER",zlot_arg_form_kind_checker).
struct_opv(z,claz_arg_form_kind,name,"NAMES",zlot_arg_form_kind_names).
struct_opv(z,claz_arg_form_kind,name,"PRODUCER",zlot_arg_form_kind_producer).
struct_opv(z,claz_arg_form_kind,slot,checker,zlot_arg_form_kind_checker).
struct_opv(z,claz_arg_form_kind,slot,names,zlot_arg_form_kind_names).
struct_opv(z,claz_arg_form_kind,slot,producer,zlot_arg_form_kind_producer).
struct_opv(z,claz_arg_form_kind,subtypep,claz_structure_object).
struct_opv(z,claz_arg_form_kind,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_arg_info,classname,"ARG-INFO").
struct_opv(z,claz_arg_info,classof,claz_built_in_class).
struct_opv(z,claz_arg_info,name,"ARG-INFO-KEY-C47-REST-P",zlot_arg_info_arg_info_key_c47_rest_p).
struct_opv(z,claz_arg_info,name,"ARG-INFO-KEYS",zlot_arg_info_arg_info_keys).
struct_opv(z,claz_arg_info,name,"ARG-INFO-LAMBDA-LIST",zlot_arg_info_arg_info_lambda_list).
struct_opv(z,claz_arg_info,name,"ARG-INFO-METATYPES",zlot_arg_info_arg_info_metatypes).
struct_opv(z,claz_arg_info,name,"ARG-INFO-NUMBER-OPTIONAL",zlot_arg_info_arg_info_number_optional).
struct_opv(z,claz_arg_info,name,"ARG-INFO-PRECEDENCE",zlot_arg_info_arg_info_precedence).
struct_opv(z,claz_arg_info,name,"DEFAULT",zlot_arg_info_default).
struct_opv(z,claz_arg_info,name,"GF-INFO-C-A-M-EMF-STD-P",zlot_arg_info_gf_info_c_a_m_emf_std_p).
struct_opv(z,claz_arg_info,name,"GF-INFO-FAST-MF-P",zlot_arg_info_gf_info_fast_mf_p).
struct_opv(z,claz_arg_info,name,"GF-INFO-SIMPLE-ACCESSOR-TYPE",zlot_arg_info_gf_info_simple_accessor_type).
struct_opv(z,claz_arg_info,name,"GF-INFO-STATIC-C-A-M-EMF",zlot_arg_info_gf_info_static_c_a_m_emf).
struct_opv(z,claz_arg_info,name,"GF-PRECOMPUTE-DFUN-AND-EMF-P",zlot_arg_info_gf_precompute_dfun_and_emf_p).
struct_opv(z,claz_arg_info,name,"KEY",zlot_arg_info_key).
struct_opv(z,claz_arg_info,name,"KIND",zlot_arg_info_kind).
struct_opv(z,claz_arg_info,name,"SPECIALP",zlot_arg_info_specialp).
struct_opv(z,claz_arg_info,name,"SUPPLIED-P",zlot_arg_info_supplied_p).
struct_opv(z,claz_arg_info,name,"SUPPLIED-USED-P",zlot_arg_info_supplied_used_p).
struct_opv(z,claz_arg_info,slot,arg_info_key_c47_rest_p,zlot_arg_info_arg_info_key_c47_rest_p).
struct_opv(z,claz_arg_info,slot,arg_info_keys,zlot_arg_info_arg_info_keys).
struct_opv(z,claz_arg_info,slot,arg_info_lambda_list,zlot_arg_info_arg_info_lambda_list).
struct_opv(z,claz_arg_info,slot,arg_info_metatypes,zlot_arg_info_arg_info_metatypes).
struct_opv(z,claz_arg_info,slot,arg_info_number_optional,zlot_arg_info_arg_info_number_optional).
struct_opv(z,claz_arg_info,slot,arg_info_precedence,zlot_arg_info_arg_info_precedence).
struct_opv(z,claz_arg_info,slot,default,zlot_arg_info_default).
struct_opv(z,claz_arg_info,slot,gf_info_c_a_m_emf_std_p,zlot_arg_info_gf_info_c_a_m_emf_std_p).
struct_opv(z,claz_arg_info,slot,gf_info_fast_mf_p,zlot_arg_info_gf_info_fast_mf_p).
struct_opv(z,claz_arg_info,slot,gf_info_simple_accessor_type,zlot_arg_info_gf_info_simple_accessor_type).
struct_opv(z,claz_arg_info,slot,gf_info_static_c_a_m_emf,zlot_arg_info_gf_info_static_c_a_m_emf).
struct_opv(z,claz_arg_info,slot,gf_precompute_dfun_and_emf_p,zlot_arg_info_gf_precompute_dfun_and_emf_p).
struct_opv(z,claz_arg_info,slot,key,zlot_arg_info_key).
struct_opv(z,claz_arg_info,slot,kind,zlot_arg_info_kind).
struct_opv(z,claz_arg_info,slot,specialp,zlot_arg_info_specialp).
struct_opv(z,claz_arg_info,slot,supplied_p,zlot_arg_info_supplied_p).
struct_opv(z,claz_arg_info,slot,supplied_used_p,zlot_arg_info_supplied_used_p).
struct_opv(z,claz_arg_info,subtypep,claz_structure_c33_object).
struct_opv(z,claz_arg_info,subtypep,claz_structure_object).
struct_opv(z,claz_arg_info,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_arg_info,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_arg_state,classname,"ARG-STATE").
struct_opv(z,claz_arg_state,classof,claz_built_in_class).
struct_opv(z,claz_arg_state,name,"REGISTER-ARGS",zlot_arg_state_register_args).
struct_opv(z,claz_arg_state,name,"STACK-FRAME-SIZE",zlot_arg_state_stack_frame_size).
struct_opv(z,claz_arg_state,name,"XMM-ARGS",zlot_arg_state_xmm_args).
struct_opv(z,claz_arg_state,slot,register_args,zlot_arg_state_register_args).
struct_opv(z,claz_arg_state,slot,stack_frame_size,zlot_arg_state_stack_frame_size).
struct_opv(z,claz_arg_state,slot,xmm_args,zlot_arg_state_xmm_args).
struct_opv(z,claz_arg_state,subtypep,claz_structure_object).
struct_opv(z,claz_arg_state,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_args_type,classname,"ARGS-TYPE").
struct_opv(z,claz_args_type,classof,claz_built_in_class).
struct_opv(z,claz_args_type,name,"ALLOWP",zlot_args_type_allowp).
struct_opv(z,claz_args_type,name,"KEYP",zlot_args_type_keyp).
struct_opv(z,claz_args_type,name,"KEYWORDS",zlot_args_type_keywords).
struct_opv(z,claz_args_type,name,"OPTIONAL",zlot_args_type_optional).
struct_opv(z,claz_args_type,name,"REQUIRED",zlot_args_type_required).
struct_opv(z,claz_args_type,name,"REST",zlot_args_type_rest).
struct_opv(z,claz_args_type,slot,allowp,zlot_args_type_allowp).
struct_opv(z,claz_args_type,slot,keyp,zlot_args_type_keyp).
struct_opv(z,claz_args_type,slot,keywords,zlot_args_type_keywords).
struct_opv(z,claz_args_type,slot,optional,zlot_args_type_optional).
struct_opv(z,claz_args_type,slot,required,zlot_args_type_required).
struct_opv(z,claz_args_type,slot,rest,zlot_args_type_rest).
struct_opv(z,claz_args_type,subtypep,claz_ctype).
struct_opv(z,claz_args_type,super_priority,[claz_ctype,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_argument_list_dotted,classname,"ARGUMENT-LIST-DOTTED").
struct_opv(z,claz_argument_list_dotted,classof,claz_built_in_class).
struct_opv(z,claz_argument_list_processor,classname,"ARGUMENT-LIST-PROCESSOR").
struct_opv(z,claz_argument_list_processor,classof,claz_built_in_class).
struct_opv(z,claz_argument_list_processor,name,"ALLOW-OTHER-KEYS",zlot_argument_list_processor_allow_other_keys).
struct_opv(z,claz_argument_list_processor,name,"AND-KEY",zlot_argument_list_processor_and_key).
struct_opv(z,claz_argument_list_processor,name,"ARITY",zlot_argument_list_processor_arity).
struct_opv(z,claz_argument_list_processor,name,"AUX-VARS",zlot_argument_list_processor_aux_vars).
struct_opv(z,claz_argument_list_processor,name,"ENV-PARAM",zlot_argument_list_processor_env_param).
struct_opv(z,claz_argument_list_processor,name,"ENV-VAR",zlot_argument_list_processor_env_var).
struct_opv(z,claz_argument_list_processor,name,"FUNCTION",zlot_argument_list_processor_function).
struct_opv(z,claz_argument_list_processor,name,"KEYWORD-PARAMETERS",zlot_argument_list_processor_keyword_parameters).
struct_opv(z,claz_argument_list_processor,name,"MATCHER",zlot_argument_list_processor_matcher).
struct_opv(z,claz_argument_list_processor,name,"MATCHER-NEEDS-ENV",zlot_argument_list_processor_matcher_needs_env).
struct_opv(z,claz_argument_list_processor,name,"MAX-ARGS",zlot_argument_list_processor_max_args).
struct_opv(z,claz_argument_list_processor,name,"MIN-ARGS",zlot_argument_list_processor_min_args).
struct_opv(z,claz_argument_list_processor,name,"OPTIONAL-PARAMETERS",zlot_argument_list_processor_optional_parameters).
struct_opv(z,claz_argument_list_processor,name,"POSITIONAL-PARAMETERS",zlot_argument_list_processor_positional_parameters).
struct_opv(z,claz_argument_list_processor,name,"REQUIRED-PARAMETERS",zlot_argument_list_processor_required_parameters).
struct_opv(z,claz_argument_list_processor,name,"REST-PARAM",zlot_argument_list_processor_rest_param).
struct_opv(z,claz_argument_list_processor,name,"REST-VAR",zlot_argument_list_processor_rest_var).
struct_opv(z,claz_argument_list_processor,name,"SPECIALS",zlot_argument_list_processor_specials).
struct_opv(z,claz_argument_list_processor,name,"VARIABLES",zlot_argument_list_processor_variables).
struct_opv(z,claz_argument_list_processor,readonly,t,zlot_argument_list_processor_matcher).
struct_opv(z,claz_argument_list_processor,returns,claz_boolean,zlot_argument_list_processor_allow_other_keys).
struct_opv(z,claz_argument_list_processor,returns,claz_boolean,zlot_argument_list_processor_and_key).
struct_opv(z,claz_argument_list_processor,returns,claz_boolean,zlot_argument_list_processor_matcher_needs_env).
struct_opv(z,claz_argument_list_processor,returns,claz_cla_argument_matcher,zlot_argument_list_processor_matcher).
struct_opv(z,claz_argument_list_processor,returns,claz_cla_param,zlot_argument_list_processor_env_param).
struct_opv(z,claz_argument_list_processor,returns,claz_cla_param,zlot_argument_list_processor_rest_param).
struct_opv(z,claz_argument_list_processor,returns,claz_integer,zlot_argument_list_processor_arity).
struct_opv(z,claz_argument_list_processor,returns,claz_integer,zlot_argument_list_processor_max_args).
struct_opv(z,claz_argument_list_processor,returns,claz_integer,zlot_argument_list_processor_min_args).
struct_opv(z,claz_argument_list_processor,returns,claz_operator,zlot_argument_list_processor_function).
struct_opv(z,claz_argument_list_processor,returns,claz_simple_vector(claz_boolean),zlot_argument_list_processor_specials).
struct_opv(z,claz_argument_list_processor,returns,claz_simple_vector(claz_cla_keyword_param),zlot_argument_list_processor_keyword_parameters).
struct_opv(z,claz_argument_list_processor,returns,claz_simple_vector(claz_cla_param),zlot_argument_list_processor_aux_vars).
struct_opv(z,claz_argument_list_processor,returns,claz_simple_vector(claz_cla_param),zlot_argument_list_processor_optional_parameters).
struct_opv(z,claz_argument_list_processor,returns,claz_simple_vector(claz_cla_param),zlot_argument_list_processor_positional_parameters).
struct_opv(z,claz_argument_list_processor,returns,claz_simple_vector(claz_cla_param),zlot_argument_list_processor_required_parameters).
struct_opv(z,claz_argument_list_processor,returns,claz_simple_vector(claz_symbol),zlot_argument_list_processor_variables).
struct_opv(z,claz_argument_list_processor,returns,claz_symbol,zlot_argument_list_processor_env_var).
struct_opv(z,claz_argument_list_processor,returns,claz_symbol,zlot_argument_list_processor_rest_var).
struct_opv(z,claz_argument_list_processor,slot,allow_other_keys,zlot_argument_list_processor_allow_other_keys).
struct_opv(z,claz_argument_list_processor,slot,and_key,zlot_argument_list_processor_and_key).
struct_opv(z,claz_argument_list_processor,slot,arity,zlot_argument_list_processor_arity).
struct_opv(z,claz_argument_list_processor,slot,aux_vars,zlot_argument_list_processor_aux_vars).
struct_opv(z,claz_argument_list_processor,slot,env_param,zlot_argument_list_processor_env_param).
struct_opv(z,claz_argument_list_processor,slot,env_var,zlot_argument_list_processor_env_var).
struct_opv(z,claz_argument_list_processor,slot,function,zlot_argument_list_processor_function).
struct_opv(z,claz_argument_list_processor,slot,keyword_parameters,zlot_argument_list_processor_keyword_parameters).
struct_opv(z,claz_argument_list_processor,slot,matcher,zlot_argument_list_processor_matcher).
struct_opv(z,claz_argument_list_processor,slot,matcher_needs_env,zlot_argument_list_processor_matcher_needs_env).
struct_opv(z,claz_argument_list_processor,slot,max_args,zlot_argument_list_processor_max_args).
struct_opv(z,claz_argument_list_processor,slot,min_args,zlot_argument_list_processor_min_args).
struct_opv(z,claz_argument_list_processor,slot,optional_parameters,zlot_argument_list_processor_optional_parameters).
struct_opv(z,claz_argument_list_processor,slot,positional_parameters,zlot_argument_list_processor_positional_parameters).
struct_opv(z,claz_argument_list_processor,slot,required_parameters,zlot_argument_list_processor_required_parameters).
struct_opv(z,claz_argument_list_processor,slot,rest_param,zlot_argument_list_processor_rest_param).
struct_opv(z,claz_argument_list_processor,slot,rest_var,zlot_argument_list_processor_rest_var).
struct_opv(z,claz_argument_list_processor,slot,specials,zlot_argument_list_processor_specials).
struct_opv(z,claz_argument_list_processor,slot,variables,zlot_argument_list_processor_variables).
struct_opv(z,claz_asterisks_around_constant_variable_name,classname,"ASTERISKS-AROUND-CONSTANT-VARIABLE-NAME").
struct_opv(z,claz_asterisks_around_constant_variable_name,classof,claz_built_in_class).
struct_opv(z,claz_asterisks_around_constant_variable_name,subtypep,claz_dubious_asterisks_around_variable_name).
struct_opv(z,claz_asterisks_around_lexical_variable_name,classname,"ASTERISKS-AROUND-LEXICAL-VARIABLE-NAME").
struct_opv(z,claz_asterisks_around_lexical_variable_name,classof,claz_built_in_class).
struct_opv(z,claz_asterisks_around_lexical_variable_name,subtypep,claz_dubious_asterisks_around_variable_name).
struct_opv(z,claz_autoload,classname,"AUTOLOAD").
struct_opv(z,claz_autoload,classof,claz_built_in_class).
struct_opv(z,claz_autoload,name,"CLASS-NAME",zlot_autoload_class_name).
struct_opv(z,claz_autoload,name,"FILE-NAME",zlot_autoload_file_name).
struct_opv(z,claz_autoload,name,"FUNCTION-SYMBOL",zlot_autoload_function_symbol).
struct_opv(z,claz_autoload,readonly,t,zlot_autoload_class_name).
struct_opv(z,claz_autoload,readonly,t,zlot_autoload_file_name).
struct_opv(z,claz_autoload,readonly,t,zlot_autoload_function_symbol).
struct_opv(z,claz_autoload,returns,claz_string,zlot_autoload_class_name).
struct_opv(z,claz_autoload,returns,claz_string,zlot_autoload_file_name).
struct_opv(z,claz_autoload,returns,claz_symbol,zlot_autoload_function_symbol).
struct_opv(z,claz_autoload,slot,class_name,zlot_autoload_class_name).
struct_opv(z,claz_autoload,slot,file_name,zlot_autoload_file_name).
struct_opv(z,claz_autoload,slot,function_symbol,zlot_autoload_function_symbol).
struct_opv(z,claz_autoload,subtypep,claz_function).
struct_opv(z,claz_autoload_generalized_reference,classname,"AUTOLOAD-GENERALIZED-REFERENCE").
struct_opv(z,claz_autoload_generalized_reference,classof,claz_built_in_class).
struct_opv(z,claz_autoload_generalized_reference,name,"INDICATOR",zlot_autoload_generalized_reference_indicator).
struct_opv(z,claz_autoload_generalized_reference,returns,claz_symbol,zlot_autoload_generalized_reference_indicator).
struct_opv(z,claz_autoload_generalized_reference,slot,indicator,zlot_autoload_generalized_reference_indicator).
struct_opv(z,claz_autoload_generalized_reference,subtypep,claz_autoload).
struct_opv(z,claz_autoload_macro,classname,"AUTOLOAD-MACRO").
struct_opv(z,claz_autoload_macro,classof,claz_built_in_class).
struct_opv(z,claz_autoload_macro,subtypep,claz_autoload).
struct_opv(z,claz_back_patch,classname,"BACK-PATCH").
struct_opv(z,claz_back_patch,classof,claz_built_in_class).
struct_opv(z,claz_back_patch,name,"FUN",zlot_back_patch_fun).
struct_opv(z,claz_back_patch,name,"SIZE",zlot_back_patch_size).
struct_opv(z,claz_back_patch,slot,fun,zlot_back_patch_fun).
struct_opv(z,claz_back_patch,slot,size,zlot_back_patch_size).
struct_opv(z,claz_back_patch,subtypep,claz_annotation).
struct_opv(z,claz_back_patch,super_priority,[claz_annotation,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_base_string,classname,"BASE-STRING").
struct_opv(z,claz_base_string,classof,claz_built_in_class).
struct_opv(z,claz_base_string,subtypep,claz_string).
struct_opv(z,claz_base_string,super_priority,[claz_string,claz_vector,claz_array,claz_sequence,claz_t]).
struct_opv(z,claz_basic_combination,classname,"BASIC-COMBINATION").
struct_opv(z,claz_basic_combination,classof,claz_built_in_class).
struct_opv(z,claz_basic_combination,name,"ARGS",zlot_basic_combination_args).
struct_opv(z,claz_basic_combination,name,"FUN",zlot_basic_combination_fun).
struct_opv(z,claz_basic_combination,name,"FUN-INFO",zlot_basic_combination_fun_info).
struct_opv(z,claz_basic_combination,name,"INFO",zlot_basic_combination_info).
struct_opv(z,claz_basic_combination,name,"KIND",zlot_basic_combination_kind).
struct_opv(z,claz_basic_combination,name,"STEP-INFO",zlot_basic_combination_step_info).
struct_opv(z,claz_basic_combination,name,"TYPE-VALIDATED-FOR-LEAF",zlot_basic_combination_type_validated_for_leaf).
struct_opv(z,claz_basic_combination,slot,args,zlot_basic_combination_args).
struct_opv(z,claz_basic_combination,slot,fun,zlot_basic_combination_fun).
struct_opv(z,claz_basic_combination,slot,fun_info,zlot_basic_combination_fun_info).
struct_opv(z,claz_basic_combination,slot,info,zlot_basic_combination_info).
struct_opv(z,claz_basic_combination,slot,kind,zlot_basic_combination_kind).
struct_opv(z,claz_basic_combination,slot,step_info,zlot_basic_combination_step_info).
struct_opv(z,claz_basic_combination,slot,type_validated_for_leaf,zlot_basic_combination_type_validated_for_leaf).
struct_opv(z,claz_basic_combination,subtypep,claz_valued_node).
struct_opv(z,claz_basic_combination,super_priority,[claz_valued_node,claz_node,claz_sset_element,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_basic_var,classname,"BASIC-VAR").
struct_opv(z,claz_basic_var,classof,claz_built_in_class).
struct_opv(z,claz_basic_var,name,"SETS",zlot_basic_var_sets).
struct_opv(z,claz_basic_var,slot,sets,zlot_basic_var_sets).
struct_opv(z,claz_basic_var,subtypep,claz_leaf).
struct_opv(z,claz_basic_var,super_priority,[claz_leaf,claz_sset_element,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_bind,classname,"BIND").
struct_opv(z,claz_bind,classof,claz_built_in_class).
struct_opv(z,claz_bind,name,"LAMBDA",zlot_bind_lambda).
struct_opv(z,claz_bind,slot,lambda,zlot_bind_lambda).
struct_opv(z,claz_bind,subtypep,claz_node).
struct_opv(z,claz_bind,super_priority,[claz_node,claz_sset_element,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_binding,classname,"BINDING").
struct_opv(z,claz_binding,classof,claz_built_in_class).
struct_opv(z,claz_binding,name,"BOUND-SYMBOL",zlot_binding_bound_symbol).
struct_opv(z,claz_binding,name,"ENV",zlot_binding_env).
struct_opv(z,claz_binding,name,"NEXT",zlot_binding_next).
struct_opv(z,claz_binding,name,"SPECIALP",zlot_binding_specialp).
struct_opv(z,claz_binding,name,"VALUE",zlot_binding_value).
struct_opv(z,claz_binding,readonly,t,zlot_binding_bound_symbol).
struct_opv(z,claz_binding,readonly,t,zlot_binding_next).
struct_opv(z,claz_binding,returns,claz_binding,zlot_binding_next).
struct_opv(z,claz_binding,returns,claz_boolean,zlot_binding_specialp).
struct_opv(z,claz_binding,returns,claz_env,zlot_binding_env).
struct_opv(z,claz_binding,returns,claz_t,zlot_binding_bound_symbol).
struct_opv(z,claz_binding,returns,claz_t,zlot_binding_value).
struct_opv(z,claz_binding,slot,bound_symbol,zlot_binding_bound_symbol).
struct_opv(z,claz_binding,slot,env,zlot_binding_env).
struct_opv(z,claz_binding,slot,next,zlot_binding_next).
struct_opv(z,claz_binding,slot,specialp,zlot_binding_specialp).
struct_opv(z,claz_binding,slot,value,zlot_binding_value).
struct_opv(z,claz_binding_stack_exhausted,classname,"BINDING-STACK-EXHAUSTED").
struct_opv(z,claz_binding_stack_exhausted,classof,claz_built_in_class).
struct_opv(z,claz_bitmask,classname,"BITMASK").
struct_opv(z,claz_bitmask,classof,claz_built_in_class).
struct_opv(z,claz_block_annotation,classname,"BLOCK-ANNOTATION").
struct_opv(z,claz_block_annotation,classof,claz_built_in_class).
struct_opv(z,claz_block_annotation,name,"BLOCK",zlot_block_annotation_block).
struct_opv(z,claz_block_annotation,name,"NEXT",zlot_block_annotation_next).
struct_opv(z,claz_block_annotation,name,"PREV",zlot_block_annotation_prev).
struct_opv(z,claz_block_annotation,slot,block,zlot_block_annotation_block).
struct_opv(z,claz_block_annotation,slot,next,zlot_block_annotation_next).
struct_opv(z,claz_block_annotation,slot,prev,zlot_block_annotation_prev).
struct_opv(z,claz_block_annotation,subtypep,claz_structure_c33_object).
struct_opv(z,claz_block_annotation,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_block_end,classname,"BLOCK-END").
struct_opv(z,claz_block_end,classof,claz_built_in_class).
struct_opv(z,claz_block_end,name,"SUFFIX",zlot_block_end_suffix).
struct_opv(z,claz_block_end,slot,suffix,zlot_block_end_suffix).
struct_opv(z,claz_block_end,subtypep,claz_queued_op).
struct_opv(z,claz_block_end,super_priority,[claz_queued_op,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_block_start,classname,"BLOCK-START").
struct_opv(z,claz_block_start,classof,claz_built_in_class).
struct_opv(z,claz_block_start,name,"BLOCK-END",zlot_block_start_block_end).
struct_opv(z,claz_block_start,name,"PREFIX",zlot_block_start_prefix).
struct_opv(z,claz_block_start,name,"SUFFIX",zlot_block_start_suffix).
struct_opv(z,claz_block_start,slot,block_end,zlot_block_start_block_end).
struct_opv(z,claz_block_start,slot,prefix,zlot_block_start_prefix).
struct_opv(z,claz_block_start,slot,suffix,zlot_block_start_suffix).
struct_opv(z,claz_block_start,subtypep,claz_section_start).
struct_opv(z,claz_block_start,super_priority,[claz_section_start,claz_queued_op,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_bogus_debug_fun,classname,"BOGUS-DEBUG-FUN").
struct_opv(z,claz_bogus_debug_fun,classof,claz_built_in_class).
struct_opv(z,claz_bogus_debug_fun,name,"NAME",zlot_bogus_debug_fun_name).
struct_opv(z,claz_bogus_debug_fun,slot,name,zlot_bogus_debug_fun_name).
struct_opv(z,claz_bogus_debug_fun,subtypep,claz_debug_fun).
struct_opv(z,claz_bogus_debug_fun,super_priority,[claz_debug_fun,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_boolean,classname,"BOOLEAN").
struct_opv(z,claz_boolean,classof,claz_built_in_class).
struct_opv(z,claz_bootstrap_package_not_found,classname,"BOOTSTRAP-PACKAGE-NOT-FOUND").
struct_opv(z,claz_bootstrap_package_not_found,classof,claz_built_in_class).
struct_opv(z,claz_bootstrap_package_not_found,name,"NAME",zlot_bootstrap_package_not_found_name).
struct_opv(z,claz_bootstrap_package_not_found,slot,name,zlot_bootstrap_package_not_found_name).
struct_opv(z,claz_breakpoint,classname,"BREAKPOINT").
struct_opv(z,claz_breakpoint,classof,claz_built_in_class).
struct_opv(z,claz_breakpoint,name,"COOKIE-FUN",zlot_breakpoint_cookie_fun).
struct_opv(z,claz_breakpoint,name,"HOOK-FUN",zlot_breakpoint_hook_fun).
struct_opv(z,claz_breakpoint,name,"INFO",zlot_breakpoint_info).
struct_opv(z,claz_breakpoint,name,"INTERNAL-DATA",zlot_breakpoint_internal_data).
struct_opv(z,claz_breakpoint,name,"KIND",zlot_breakpoint_kind).
struct_opv(z,claz_breakpoint,name,"START-HELPER",zlot_breakpoint_start_helper).
struct_opv(z,claz_breakpoint,name,"STATUS",zlot_breakpoint_status).
struct_opv(z,claz_breakpoint,name,"UNKNOWN-RETURN-PARTNER",zlot_breakpoint_unknown_return_partner).
struct_opv(z,claz_breakpoint,name,"WHAT",zlot_breakpoint_what).
struct_opv(z,claz_breakpoint,slot,cookie_fun,zlot_breakpoint_cookie_fun).
struct_opv(z,claz_breakpoint,slot,hook_fun,zlot_breakpoint_hook_fun).
struct_opv(z,claz_breakpoint,slot,info,zlot_breakpoint_info).
struct_opv(z,claz_breakpoint,slot,internal_data,zlot_breakpoint_internal_data).
struct_opv(z,claz_breakpoint,slot,kind,zlot_breakpoint_kind).
struct_opv(z,claz_breakpoint,slot,start_helper,zlot_breakpoint_start_helper).
struct_opv(z,claz_breakpoint,slot,status,zlot_breakpoint_status).
struct_opv(z,claz_breakpoint,slot,unknown_return_partner,zlot_breakpoint_unknown_return_partner).
struct_opv(z,claz_breakpoint,slot,what,zlot_breakpoint_what).
struct_opv(z,claz_breakpoint,subtypep,claz_structure_object).
struct_opv(z,claz_breakpoint,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_breakpoint_data,classname,"BREAKPOINT-DATA").
struct_opv(z,claz_breakpoint_data,classof,claz_built_in_class).
struct_opv(z,claz_breakpoint_data,name,"BREAKPOINTS",zlot_breakpoint_data_breakpoints).
struct_opv(z,claz_breakpoint_data,name,"COMPONENT",zlot_breakpoint_data_component).
struct_opv(z,claz_breakpoint_data,name,"INSTRUCTION",zlot_breakpoint_data_instruction).
struct_opv(z,claz_breakpoint_data,name,"OFFSET",zlot_breakpoint_data_offset).
struct_opv(z,claz_breakpoint_data,slot,breakpoints,zlot_breakpoint_data_breakpoints).
struct_opv(z,claz_breakpoint_data,slot,component,zlot_breakpoint_data_component).
struct_opv(z,claz_breakpoint_data,slot,instruction,zlot_breakpoint_data_instruction).
struct_opv(z,claz_breakpoint_data,slot,offset,zlot_breakpoint_data_offset).
struct_opv(z,claz_breakpoint_data,subtypep,claz_structure_object).
struct_opv(z,claz_breakpoint_data,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_buffer,classname,"BUFFER").
struct_opv(z,claz_buffer,classof,claz_built_in_class).
struct_opv(z,claz_buffer,name,"HEAD",zlot_buffer_head).
struct_opv(z,claz_buffer,name,"LENGTH",zlot_buffer_length).
struct_opv(z,claz_buffer,name,"SAP",zlot_buffer_sap).
struct_opv(z,claz_buffer,name,"TAIL",zlot_buffer_tail).
struct_opv(z,claz_buffer,slot,head,zlot_buffer_head).
struct_opv(z,claz_buffer,slot,length,zlot_buffer_length).
struct_opv(z,claz_buffer,slot,sap,zlot_buffer_sap).
struct_opv(z,claz_buffer,slot,tail,zlot_buffer_tail).
struct_opv(z,claz_buffer,subtypep,claz_structure_object).
struct_opv(z,claz_buffer,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_bug,classname,"BUG").
struct_opv(z,claz_bug,classof,claz_built_in_class).
struct_opv(z,claz_built_in_class,classname,"BUILT-IN-CLASS").
struct_opv(z,claz_built_in_class,classof,claz_built_in_class).
struct_opv(z,claz_built_in_class,name,"PROTOTYPE",zlot_built_in_class_prototype).
struct_opv(z,claz_built_in_class,slot,prototype,zlot_built_in_class_prototype).
struct_opv(z,claz_built_in_class,subtypep,claz_class).
struct_opv(z,claz_built_in_class,subtypep,claz_lisp_class).
struct_opv(z,claz_built_in_class,subtypep,claz_system_class).
struct_opv(z,claz_built_in_class,super_priority,[claz_class,claz_potential_class,claz_specializer,claz_super_class,claz_standard_stablehash,claz_metaobject,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(z,claz_built_in_class,super_priority,[claz_system_class,claz_pcl_class,claz_class,claz_dependent_update_mixin,claz_plist_mixin,claz_definition_source_mixin,claz_standard_specializer,claz_specializer,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(z,claz_built_in_classoid,classname,"BUILT-IN-CLASSOID").
struct_opv(z,claz_built_in_classoid,classof,claz_built_in_class).
struct_opv(z,claz_built_in_classoid,name,"TRANSLATION",zlot_built_in_classoid_translation).
struct_opv(z,claz_built_in_classoid,slot,translation,zlot_built_in_classoid_translation).
struct_opv(z,claz_built_in_classoid,subtypep,claz_classoid).
struct_opv(z,claz_built_in_classoid,super_priority,[claz_classoid,claz_ctype,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_c_source_point,classname,"C-SOURCE-POINT").
struct_opv(z,claz_c_source_point,classof,claz_built_in_class).
struct_opv(z,claz_c_source_point,name,"FILE",zlot_c_source_point_file).
struct_opv(z,claz_c_source_point,name,"LINENO1",zlot_c_source_point_lineno1).
struct_opv(z,claz_c_source_point,name,"LINENO2",zlot_c_source_point_lineno2).
struct_opv(z,claz_c_source_point,slot,file,zlot_c_source_point_file).
struct_opv(z,claz_c_source_point,slot,lineno1,zlot_c_source_point_lineno1).
struct_opv(z,claz_c_source_point,slot,lineno2,zlot_c_source_point_lineno2).
struct_opv(z,claz_c_source_point,subtypep,claz_structure_object).
struct_opv(z,claz_c_source_point,super_priority,[claz_structure_object,claz_t]).
struct_opv(z,claz_cache,classname,"CACHE").
struct_opv(z,claz_cache,classof,claz_built_in_class).
struct_opv(z,claz_cache,name,"DEPTH",zlot_cache_depth).
struct_opv(z,claz_cache,name,"KEY-COUNT",zlot_cache_key_count).
struct_opv(z,claz_cache,name,"LIMIT",zlot_cache_limit).
struct_opv(z,claz_cache,name,"LINE-SIZE",zlot_cache_line_size).
struct_opv(z,claz_cache,name,"MASK",zlot_cache_mask).
struct_opv(z,claz_cache,name,"VALUE",zlot_cache_value).
struct_opv(z,claz_cache,name,"VECTOR",zlot_cache_vector).
struct_opv(z,claz_cache,slot,depth,zlot_cache_depth).
struct_opv(z,claz_cache,slot,key_count,zlot_cache_key_count).
struct_opv(z,claz_cache,slot,limit,zlot_cache_limit).
struct_opv(z,claz_cache,slot,line_size,zlot_cache_line_size).
struct_opv(z,claz_cache,slot,mask,zlot_cache_mask).
struct_opv(z,claz_cache,slot,value,zlot_cache_value).
struct_opv(z,claz_cache,slot,vector,zlot_cache_vector).
struct_opv(z,claz_cache,subtypep,claz_structure_object).
struct_opv(z,claz_cache,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_cached_fun,classname,"CACHED-FUN").
struct_opv(z,claz_cached_fun,classof,claz_built_in_class).
struct_opv(z,claz_cached_fun,name,"CONSTRAINT",zlot_cached_fun_constraint).
struct_opv(z,claz_cached_fun,name,"FUNSTATE",zlot_cached_fun_funstate).
struct_opv(z,claz_cached_fun,name,"NAME",zlot_cached_fun_name).
struct_opv(z,claz_cached_fun,slot,constraint,zlot_cached_fun_constraint).
struct_opv(z,claz_cached_fun,slot,funstate,zlot_cached_fun_funstate).
struct_opv(z,claz_cached_fun,slot,name,zlot_cached_fun_name).
struct_opv(z,claz_cached_fun,subtypep,claz_structure_object).
struct_opv(z,claz_cached_fun,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_caching,classname,"CACHING").
struct_opv(z,claz_caching,classof,claz_built_in_class).
struct_opv(z,claz_caching,subtypep,claz_dfun_info).
struct_opv(z,claz_caching,super_priority,[claz_dfun_info,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_callback_info,classname,"CALLBACK-INFO").
struct_opv(z,claz_callback_info,classof,claz_built_in_class).
struct_opv(z,claz_callback_info,name,"FUNCTION",zlot_callback_info_function).
struct_opv(z,claz_callback_info,name,"INDEX",zlot_callback_info_index).
struct_opv(z,claz_callback_info,name,"SPECIFIER",zlot_callback_info_specifier).
struct_opv(z,claz_callback_info,name,"WRAPPER",zlot_callback_info_wrapper).
struct_opv(z,claz_callback_info,slot,function,zlot_callback_info_function).
struct_opv(z,claz_callback_info,slot,index,zlot_callback_info_index).
struct_opv(z,claz_callback_info,slot,specifier,zlot_callback_info_specifier).
struct_opv(z,claz_callback_info,slot,wrapper,zlot_callback_info_wrapper).
struct_opv(z,claz_callback_info,subtypep,claz_structure_object).
struct_opv(z,claz_callback_info,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_case_failure,classname,"CASE-FAILURE").
struct_opv(z,claz_case_failure,classof,claz_built_in_class).
struct_opv(z,claz_case_failure,name,"NAME",zlot_case_failure_name).
struct_opv(z,claz_case_failure,name,"POSSIBILITIES",zlot_case_failure_possibilities).
struct_opv(z,claz_case_failure,slot,name,zlot_case_failure_name).
struct_opv(z,claz_case_failure,slot,possibilities,zlot_case_failure_possibilities).
struct_opv(z,claz_cast,classname,"CAST").
struct_opv(z,claz_cast,classof,claz_built_in_class).
struct_opv(z,claz_cast,name,"ASSERTED-TYPE",zlot_cast_asserted_type).
struct_opv(z,claz_cast,name,"TYPE-CHECK",zlot_cast_type_check).
struct_opv(z,claz_cast,name,"TYPE-TO-CHECK",zlot_cast_type_to_check).
struct_opv(z,claz_cast,name,"VALUE",zlot_cast_value).
struct_opv(z,claz_cast,name,"VESTIGIAL-EXIT-ENTRY-LEXENV",zlot_cast_vestigial_exit_entry_lexenv).
struct_opv(z,claz_cast,name,"VESTIGIAL-EXIT-LEXENV",zlot_cast_vestigial_exit_lexenv).
struct_opv(z,claz_cast,slot,asserted_type,zlot_cast_asserted_type).
struct_opv(z,claz_cast,slot,type_check,zlot_cast_type_check).
struct_opv(z,claz_cast,slot,type_to_check,zlot_cast_type_to_check).
struct_opv(z,claz_cast,slot,value,zlot_cast_value).
struct_opv(z,claz_cast,slot,vestigial_exit_entry_lexenv,zlot_cast_vestigial_exit_entry_lexenv).
struct_opv(z,claz_cast,slot,vestigial_exit_lexenv,zlot_cast_vestigial_exit_lexenv).
struct_opv(z,claz_cast,subtypep,claz_valued_node).
struct_opv(z,claz_cast,super_priority,[claz_valued_node,claz_node,claz_sset_element,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_cblock,classname,"CBLOCK").
struct_opv(z,claz_cblock,classof,claz_built_in_class).
struct_opv(z,claz_cblock,name,"COMPONENT",zlot_cblock_component).
struct_opv(z,claz_cblock,name,"DOMINATORS",zlot_cblock_dominators).
struct_opv(z,claz_cblock,name,"FLAG",zlot_cblock_flag).
struct_opv(z,claz_cblock,name,"FLAGS",zlot_cblock_flags).
struct_opv(z,claz_cblock,name,"GEN",zlot_cblock_gen).
struct_opv(z,claz_cblock,name,"IN",zlot_cblock_in).
struct_opv(z,claz_cblock,name,"INFO",zlot_cblock_info).
struct_opv(z,claz_cblock,name,"KILL",zlot_cblock_kill).
struct_opv(z,claz_cblock,name,"LAST",zlot_cblock_last).
struct_opv(z,claz_cblock,name,"LOOP",zlot_cblock_loop).
struct_opv(z,claz_cblock,name,"LOOP-NEXT",zlot_cblock_loop_next).
struct_opv(z,claz_cblock,name,"NEXT",zlot_cblock_next).
struct_opv(z,claz_cblock,name,"OUT",zlot_cblock_out).
struct_opv(z,claz_cblock,name,"PHYSENV-CACHE",zlot_cblock_physenv_cache).
struct_opv(z,claz_cblock,name,"PRED",zlot_cblock_pred).
struct_opv(z,claz_cblock,name,"PREV",zlot_cblock_prev).
struct_opv(z,claz_cblock,name,"START",zlot_cblock_start).
struct_opv(z,claz_cblock,name,"SUCC",zlot_cblock_succ).
struct_opv(z,claz_cblock,name,"XREFS",zlot_cblock_xrefs).
struct_opv(z,claz_cblock,slot,component,zlot_cblock_component).
struct_opv(z,claz_cblock,slot,dominators,zlot_cblock_dominators).
struct_opv(z,claz_cblock,slot,flag,zlot_cblock_flag).
struct_opv(z,claz_cblock,slot,flags,zlot_cblock_flags).
struct_opv(z,claz_cblock,slot,gen,zlot_cblock_gen).
struct_opv(z,claz_cblock,slot,in,zlot_cblock_in).
struct_opv(z,claz_cblock,slot,info,zlot_cblock_info).
struct_opv(z,claz_cblock,slot,kill,zlot_cblock_kill).
struct_opv(z,claz_cblock,slot,last,zlot_cblock_last).
struct_opv(z,claz_cblock,slot,loop,zlot_cblock_loop).
struct_opv(z,claz_cblock,slot,loop_next,zlot_cblock_loop_next).
struct_opv(z,claz_cblock,slot,next,zlot_cblock_next).
struct_opv(z,claz_cblock,slot,out,zlot_cblock_out).
struct_opv(z,claz_cblock,slot,physenv_cache,zlot_cblock_physenv_cache).
struct_opv(z,claz_cblock,slot,pred,zlot_cblock_pred).
struct_opv(z,claz_cblock,slot,prev,zlot_cblock_prev).
struct_opv(z,claz_cblock,slot,start,zlot_cblock_start).
struct_opv(z,claz_cblock,slot,succ,zlot_cblock_succ).
struct_opv(z,claz_cblock,slot,xrefs,zlot_cblock_xrefs).
struct_opv(z,claz_cblock,subtypep,claz_sset_element).
struct_opv(z,claz_cblock,super_priority,[claz_sset_element,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_char_code,classname,"CHAR-CODE").
struct_opv(z,claz_char_code,classof,claz_built_in_class).
struct_opv(z,claz_char_hash_map(_Type),classname,"CHAR-HASH-MAP").
struct_opv(z,claz_char_hash_map(_Type),classof,claz_built_in_class).
struct_opv(z,claz_char_hash_map(Type),name,"BACKING",zlot_char_hash_map_backing(Type)).
struct_opv(z,claz_char_hash_map(Type),name,"CONSTANTS-BY-CHAR-CODE",zlot_char_hash_map_constants_by_char_code(Type)).
struct_opv(z,claz_char_hash_map(Type),name,"NULL-VALUE",zlot_char_hash_map_null_value(Type)).
struct_opv(z,claz_char_hash_map(Type),readonly,t,zlot_char_hash_map_backing(Type)).
struct_opv(z,claz_char_hash_map(Type),readonly,t,zlot_char_hash_map_constants_by_char_code(Type)).
struct_opv(z,claz_char_hash_map(Type),readonly,t,zlot_char_hash_map_null_value(Type)).
struct_opv(z,claz_char_hash_map(Type),returns,claz_hash_table(claz_prolog_character,Type),zlot_char_hash_map_backing(Type)).
struct_opv(z,claz_char_hash_map(Type),returns,claz_simple_vector(Type),zlot_char_hash_map_constants_by_char_code(Type)).
struct_opv(z,claz_char_hash_map(Type),slot,backing,zlot_char_hash_map_backing(Type)).
struct_opv(z,claz_char_hash_map(Type),slot,constants_by_char_code,zlot_char_hash_map_constants_by_char_code(Type)).
struct_opv(z,claz_char_hash_map(Type),slot,null_value,zlot_char_hash_map_null_value(Type)).
struct_opv(z,claz_char_hash_map,classname,"CHAR-HASH-MAP").
struct_opv(z,claz_char_hash_map,classof,claz_built_in_class).
struct_opv(z,claz_char_hash_map_1,classname,"CHAR-HASH-MAP-1").
struct_opv(z,claz_char_hash_map_1,classof,claz_built_in_class).
struct_opv(z,claz_char_hash_map_1,name,"CAR-IT",zlot_char_hash_map_1_car_it).
struct_opv(z,claz_char_hash_map_1,name,"CHAR-NUM",zlot_char_hash_map_1_char_num).
struct_opv(z,claz_char_hash_map_1,name,"THIS-0",zlot_char_hash_map_1_this_0).
struct_opv(z,claz_char_hash_map_1,readonly,t,zlot_char_hash_map_1_car_it).
struct_opv(z,claz_char_hash_map_1,readonly,t,zlot_char_hash_map_1_this_0).
struct_opv(z,claz_char_hash_map_1,returns,claz_char_hash_map,zlot_char_hash_map_1_this_0).
struct_opv(z,claz_char_hash_map_1,returns,claz_integer,zlot_char_hash_map_1_char_num).
struct_opv(z,claz_char_hash_map_1,returns,claz_prolog_iterator(claz_prolog_character),zlot_char_hash_map_1_car_it).
struct_opv(z,claz_char_hash_map_1,slot,car_it,zlot_char_hash_map_1_car_it).
struct_opv(z,claz_char_hash_map_1,slot,char_num,zlot_char_hash_map_1_char_num).
struct_opv(z,claz_char_hash_map_1,slot,this_0,zlot_char_hash_map_1_this_0).
struct_opv(z,claz_character,classname,"CHARACTER").
struct_opv(z,claz_character,classof,claz_built_in_class).
struct_opv(z,claz_character,name,"NAME",zlot_character_name).
struct_opv(z,claz_character,name,"VALUE",zlot_character_value).
struct_opv(z,claz_character,readonly,t,zlot_character_value).
struct_opv(z,claz_character,returns,claz_char_code,zlot_character_value).
struct_opv(z,claz_character,returns,claz_string,zlot_character_name).
struct_opv(z,claz_character,slot,name,zlot_character_name).
struct_opv(z,claz_character,slot,value,zlot_character_value).
struct_opv(z,claz_character,subtypep,claz_t).
struct_opv(z,claz_character,super_priority,[claz_t]).
struct_opv(z,claz_character_out_of_range,classname,"CHARACTER-OUT-OF-RANGE").
struct_opv(z,claz_character_out_of_range,classof,claz_built_in_class).
struct_opv(z,claz_character_set_type,classname,"CHARACTER-SET-TYPE").
struct_opv(z,claz_character_set_type,classof,claz_built_in_class).
struct_opv(z,claz_character_set_type,name,"CLASS-INFO",zlot_character_set_type_class_info).
struct_opv(z,claz_character_set_type,name,"PAIRS",zlot_character_set_type_pairs).
struct_opv(z,claz_character_set_type,slot,class_info,zlot_character_set_type_class_info).
struct_opv(z,claz_character_set_type,slot,pairs,zlot_character_set_type_pairs).
struct_opv(z,claz_character_set_type,subtypep,claz_ctype).
struct_opv(z,claz_character_set_type,super_priority,[claz_ctype,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_character_string,classname,"CHARACTER-STRING").
struct_opv(z,claz_character_string,classof,claz_built_in_class).
struct_opv(z,claz_character_string,subtypep,claz_string).
struct_opv(z,claz_character_string,super_priority,[claz_string,claz_vector,claz_array,claz_sequence,claz_t]).
struct_opv(z,claz_checking,classname,"CHECKING").
struct_opv(z,claz_checking,classof,claz_built_in_class).
struct_opv(z,claz_checking,name,"FUNCTION",zlot_checking_function).
struct_opv(z,claz_checking,slot,function,zlot_checking_function).
struct_opv(z,claz_checking,subtypep,claz_dfun_info).
struct_opv(z,claz_checking,super_priority,[claz_dfun_info,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_chooser,classname,"CHOOSER").
struct_opv(z,claz_chooser,classof,claz_built_in_class).
struct_opv(z,claz_chooser,name,"ALIGNMENT",zlot_chooser_alignment).
struct_opv(z,claz_chooser,name,"MAYBE-SHRINK",zlot_chooser_maybe_shrink).
struct_opv(z,claz_chooser,name,"SIZE",zlot_chooser_size).
struct_opv(z,claz_chooser,name,"WORST-CASE-FUN",zlot_chooser_worst_case_fun).
struct_opv(z,claz_chooser,slot,alignment,zlot_chooser_alignment).
struct_opv(z,claz_chooser,slot,maybe_shrink,zlot_chooser_maybe_shrink).
struct_opv(z,claz_chooser,slot,size,zlot_chooser_size).
struct_opv(z,claz_chooser,slot,worst_case_fun,zlot_chooser_worst_case_fun).
struct_opv(z,claz_chooser,subtypep,claz_annotation).
struct_opv(z,claz_chooser,super_priority,[claz_annotation,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_cif,classname,"CIF").
struct_opv(z,claz_cif,classof,claz_built_in_class).
struct_opv(z,claz_cif,name,"ALTERNATIVE",zlot_cif_alternative).
struct_opv(z,claz_cif,name,"ALTERNATIVE-CONSTRAINTS",zlot_cif_alternative_constraints).
struct_opv(z,claz_cif,name,"CONSEQUENT",zlot_cif_consequent).
struct_opv(z,claz_cif,name,"CONSEQUENT-CONSTRAINTS",zlot_cif_consequent_constraints).
struct_opv(z,claz_cif,name,"TEST",zlot_cif_test).
struct_opv(z,claz_cif,slot,alternative,zlot_cif_alternative).
struct_opv(z,claz_cif,slot,alternative_constraints,zlot_cif_alternative_constraints).
struct_opv(z,claz_cif,slot,consequent,zlot_cif_consequent).
struct_opv(z,claz_cif,slot,consequent_constraints,zlot_cif_consequent_constraints).
struct_opv(z,claz_cif,slot,test,zlot_cif_test).
struct_opv(z,claz_cif,subtypep,claz_node).
struct_opv(z,claz_cif,super_priority,[claz_node,claz_sset_element,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_circularity,classname,"CIRCULARITY").
struct_opv(z,claz_circularity,classof,claz_built_in_class).
struct_opv(z,claz_circularity,name,"ENCLOSING-OBJECT",zlot_circularity_enclosing_object).
struct_opv(z,claz_circularity,name,"INDEX",zlot_circularity_index).
struct_opv(z,claz_circularity,name,"OBJECT",zlot_circularity_object).
struct_opv(z,claz_circularity,name,"TYPE",zlot_circularity_type).
struct_opv(z,claz_circularity,name,"VALUE",zlot_circularity_value).
struct_opv(z,claz_circularity,slot,enclosing_object,zlot_circularity_enclosing_object).
struct_opv(z,claz_circularity,slot,index,zlot_circularity_index).
struct_opv(z,claz_circularity,slot,object,zlot_circularity_object).
struct_opv(z,claz_circularity,slot,type,zlot_circularity_type).
struct_opv(z,claz_circularity,slot,value,zlot_circularity_value).
struct_opv(z,claz_circularity,subtypep,claz_structure_object).
struct_opv(z,claz_circularity,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_cla_arg_list,classname,"CLA-ARG-LIST").
struct_opv(z,claz_cla_arg_list,classof,claz_built_in_class).
struct_opv(z,claz_cla_arg_list,name,"ARGS",zlot_cla_arg_list_args).
struct_opv(z,claz_cla_arg_list,name,"ARGS-CONSUMED",zlot_cla_arg_list_args_consumed).
struct_opv(z,claz_cla_arg_list,name,"ENV",zlot_cla_arg_list_env).
struct_opv(z,claz_cla_arg_list,name,"LEN",zlot_cla_arg_list_len).
struct_opv(z,claz_cla_arg_list,readonly,t,zlot_cla_arg_list_args).
struct_opv(z,claz_cla_arg_list,readonly,t,zlot_cla_arg_list_env).
struct_opv(z,claz_cla_arg_list,readonly,t,zlot_cla_arg_list_len).
struct_opv(z,claz_cla_arg_list,returns,claz_env,zlot_cla_arg_list_env).
struct_opv(z,claz_cla_arg_list,returns,claz_integer,zlot_cla_arg_list_args_consumed).
struct_opv(z,claz_cla_arg_list,returns,claz_integer,zlot_cla_arg_list_len).
struct_opv(z,claz_cla_arg_list,returns,claz_list,zlot_cla_arg_list_args).
struct_opv(z,claz_cla_arg_list,slot,args,zlot_cla_arg_list_args).
struct_opv(z,claz_cla_arg_list,slot,args_consumed,zlot_cla_arg_list_args_consumed).
struct_opv(z,claz_cla_arg_list,slot,env,zlot_cla_arg_list_env).
struct_opv(z,claz_cla_arg_list,slot,len,zlot_cla_arg_list_len).
struct_opv(z,claz_cla_argument_matcher,classname,"CLA-ARGUMENT-MATCHER").
struct_opv(z,claz_cla_argument_matcher,classof,claz_built_in_class).
struct_opv(z,claz_cla_aux_param,classname,"CLA-AUX-PARAM").
struct_opv(z,claz_cla_aux_param,classof,claz_built_in_class).
struct_opv(z,claz_cla_aux_param,name,"INITFORM",zlot_cla_aux_param_initform).
struct_opv(z,claz_cla_aux_param,name,"SPECIAL",zlot_cla_aux_param_special).
struct_opv(z,claz_cla_aux_param,name,"VAR",zlot_cla_aux_param_var).
struct_opv(z,claz_cla_aux_param,returns,claz_boolean,zlot_cla_aux_param_special).
struct_opv(z,claz_cla_aux_param,returns,claz_cla_init_form,zlot_cla_aux_param_initform).
struct_opv(z,claz_cla_aux_param,returns,claz_symbol,zlot_cla_aux_param_var).
struct_opv(z,claz_cla_aux_param,slot,initform,zlot_cla_aux_param_initform).
struct_opv(z,claz_cla_aux_param,slot,special,zlot_cla_aux_param_special).
struct_opv(z,claz_cla_aux_param,slot,var,zlot_cla_aux_param_var).
struct_opv(z,claz_cla_constant_init_form,classname,"CLA-CONSTANT-INIT-FORM").
struct_opv(z,claz_cla_constant_init_form,classof,claz_built_in_class).
struct_opv(z,claz_cla_constant_init_form,name,"VALUE",zlot_cla_constant_init_form_value).
struct_opv(z,claz_cla_constant_init_form,returns,claz_t,zlot_cla_constant_init_form_value).
struct_opv(z,claz_cla_constant_init_form,slot,value,zlot_cla_constant_init_form_value).
struct_opv(z,claz_cla_env_param,classname,"CLA-ENVIRONMENT-PARAM").
struct_opv(z,claz_cla_env_param,classof,claz_built_in_class).
struct_opv(z,claz_cla_env_param,name,"SPECIAL",zlot_cla_env_param_special).
struct_opv(z,claz_cla_env_param,name,"VAR",zlot_cla_env_param_var).
struct_opv(z,claz_cla_env_param,returns,claz_boolean,zlot_cla_env_param_special).
struct_opv(z,claz_cla_env_param,returns,claz_symbol,zlot_cla_env_param_var).
struct_opv(z,claz_cla_env_param,slot,special,zlot_cla_env_param_special).
struct_opv(z,claz_cla_env_param,slot,var,zlot_cla_env_param_var).
struct_opv(z,claz_cla_fast_matcher,classname,"CLA-FAST-MATCHER").
struct_opv(z,claz_cla_fast_matcher,classof,claz_built_in_class).
struct_opv(z,claz_cla_fast_matcher,name,"THIS-0",zlot_cla_fast_matcher_this_0).
struct_opv(z,claz_cla_fast_matcher,readonly,t,zlot_cla_fast_matcher_this_0).
struct_opv(z,claz_cla_fast_matcher,returns,claz_argument_list_processor,zlot_cla_fast_matcher_this_0).
struct_opv(z,claz_cla_fast_matcher,slot,this_0,zlot_cla_fast_matcher_this_0).
struct_opv(z,claz_cla_init_form,classname,"CLA-INIT-FORM").
struct_opv(z,claz_cla_init_form,classof,claz_built_in_class).
struct_opv(z,claz_cla_keyword_param,classname,"CLA-KEYWORD-PARAM").
struct_opv(z,claz_cla_keyword_param,classof,claz_built_in_class).
struct_opv(z,claz_cla_keyword_param,name,"KEYWORD",zlot_cla_keyword_param_keyword).
struct_opv(z,claz_cla_keyword_param,returns,claz_symbol,zlot_cla_keyword_param_keyword).
struct_opv(z,claz_cla_keyword_param,slot,keyword,zlot_cla_keyword_param_keyword).
struct_opv(z,claz_cla_non_constant_init_form,classname,"CLA-NON-CONSTANT-INIT-FORM").
struct_opv(z,claz_cla_non_constant_init_form,classof,claz_built_in_class).
struct_opv(z,claz_cla_non_constant_init_form,name,"FORM",zlot_cla_non_constant_init_form_form).
struct_opv(z,claz_cla_non_constant_init_form,returns,claz_t,zlot_cla_non_constant_init_form_form).
struct_opv(z,claz_cla_non_constant_init_form,slot,form,zlot_cla_non_constant_init_form_form).
struct_opv(z,claz_cla_optional_param,classname,"CLA-OPTIONAL-PARAM").
struct_opv(z,claz_cla_optional_param,classof,claz_built_in_class).
struct_opv(z,claz_cla_optional_param,name,"INIT-FORM",zlot_cla_optional_param_init_form).
struct_opv(z,claz_cla_optional_param,name,"SPECIAL",zlot_cla_optional_param_special).
struct_opv(z,claz_cla_optional_param,name,"SUPPLIED-SPECIAL",zlot_cla_optional_param_supplied_special).
struct_opv(z,claz_cla_optional_param,name,"SUPPLIED-VAR",zlot_cla_optional_param_supplied_var).
struct_opv(z,claz_cla_optional_param,name,"VAR",zlot_cla_optional_param_var).
struct_opv(z,claz_cla_optional_param,returns,claz_boolean,zlot_cla_optional_param_special).
struct_opv(z,claz_cla_optional_param,returns,claz_boolean,zlot_cla_optional_param_supplied_special).
struct_opv(z,claz_cla_optional_param,returns,claz_cla_init_form,zlot_cla_optional_param_init_form).
struct_opv(z,claz_cla_optional_param,returns,claz_symbol,zlot_cla_optional_param_supplied_var).
struct_opv(z,claz_cla_optional_param,returns,claz_symbol,zlot_cla_optional_param_var).
struct_opv(z,claz_cla_optional_param,slot,init_form,zlot_cla_optional_param_init_form).
struct_opv(z,claz_cla_optional_param,slot,special,zlot_cla_optional_param_special).
struct_opv(z,claz_cla_optional_param,slot,supplied_special,zlot_cla_optional_param_supplied_special).
struct_opv(z,claz_cla_optional_param,slot,supplied_var,zlot_cla_optional_param_supplied_var).
struct_opv(z,claz_cla_optional_param,slot,var,zlot_cla_optional_param_var).
struct_opv(z,claz_cla_param,classname,"CLA-PARAM").
struct_opv(z,claz_cla_param,classof,claz_built_in_class).
struct_opv(z,claz_cla_required_param,classname,"CLA-REQUIRED-PARAM").
struct_opv(z,claz_cla_required_param,classof,claz_built_in_class).
struct_opv(z,claz_cla_required_param,name,"SPECIAL",zlot_cla_required_param_special).
struct_opv(z,claz_cla_required_param,name,"VAR",zlot_cla_required_param_var).
struct_opv(z,claz_cla_required_param,returns,claz_boolean,zlot_cla_required_param_special).
struct_opv(z,claz_cla_required_param,returns,claz_symbol,zlot_cla_required_param_var).
struct_opv(z,claz_cla_required_param,slot,special,zlot_cla_required_param_special).
struct_opv(z,claz_cla_required_param,slot,var,zlot_cla_required_param_var).
struct_opv(z,claz_cla_rest_param,classname,"CLA-REST-PARAM").
struct_opv(z,claz_cla_rest_param,classof,claz_built_in_class).
struct_opv(z,claz_cla_rest_param,name,"SPECIAL",zlot_cla_rest_param_special).
struct_opv(z,claz_cla_rest_param,name,"VAR",zlot_cla_rest_param_var).
struct_opv(z,claz_cla_rest_param,returns,claz_boolean,zlot_cla_rest_param_special).
struct_opv(z,claz_cla_rest_param,returns,claz_symbol,zlot_cla_rest_param_var).
struct_opv(z,claz_cla_rest_param,slot,special,zlot_cla_rest_param_special).
struct_opv(z,claz_cla_rest_param,slot,var,zlot_cla_rest_param_var).
struct_opv(z,claz_cla_slow_matcher,classname,"CLA-SLOW-MATCHER").
struct_opv(z,claz_cla_slow_matcher,classof,claz_built_in_class).
struct_opv(z,claz_cla_slow_matcher,name,"THIS-0",zlot_cla_slow_matcher_this_0).
struct_opv(z,claz_cla_slow_matcher,readonly,t,zlot_cla_slow_matcher_this_0).
struct_opv(z,claz_cla_slow_matcher,returns,claz_argument_list_processor,zlot_cla_slow_matcher_this_0).
struct_opv(z,claz_cla_slow_matcher,slot,this_0,zlot_cla_slow_matcher_this_0).
struct_opv(z,claz_clambda,classname,"CLAMBDA").
struct_opv(z,claz_clambda,classof,claz_built_in_class).
struct_opv(z,claz_clambda,name,"ALLOW-INSTRUMENTING",zlot_clambda_allow_instrumenting).
struct_opv(z,claz_clambda,name,"BIND",zlot_clambda_bind).
struct_opv(z,claz_clambda,name,"CALL-LEXENV",zlot_clambda_call_lexenv).
struct_opv(z,claz_clambda,name,"CALLS-OR-CLOSES",zlot_clambda_calls_or_closes).
struct_opv(z,claz_clambda,name,"CHILDREN",zlot_clambda_children).
struct_opv(z,claz_clambda,name,"ENTRIES",zlot_clambda_entries).
struct_opv(z,claz_clambda,name,"HOME",zlot_clambda_home).
struct_opv(z,claz_clambda,name,"LETS",zlot_clambda_lets).
struct_opv(z,claz_clambda,name,"OPTIONAL-DISPATCH",zlot_clambda_optional_dispatch).
struct_opv(z,claz_clambda,name,"PARENT",zlot_clambda_parent).
struct_opv(z,claz_clambda,name,"PHYSENV",zlot_clambda_physenv).
struct_opv(z,claz_clambda,name,"RETURN",zlot_clambda_return).
struct_opv(z,claz_clambda,name,"SYSTEM-LAMBDA-P",zlot_clambda_system_lambda_p).
struct_opv(z,claz_clambda,name,"TAIL-SET",zlot_clambda_tail_set).
struct_opv(z,claz_clambda,name,"VARS",zlot_clambda_vars).
struct_opv(z,claz_clambda,slot,allow_instrumenting,zlot_clambda_allow_instrumenting).
struct_opv(z,claz_clambda,slot,bind,zlot_clambda_bind).
struct_opv(z,claz_clambda,slot,call_lexenv,zlot_clambda_call_lexenv).
struct_opv(z,claz_clambda,slot,calls_or_closes,zlot_clambda_calls_or_closes).
struct_opv(z,claz_clambda,slot,children,zlot_clambda_children).
struct_opv(z,claz_clambda,slot,entries,zlot_clambda_entries).
struct_opv(z,claz_clambda,slot,home,zlot_clambda_home).
struct_opv(z,claz_clambda,slot,lets,zlot_clambda_lets).
struct_opv(z,claz_clambda,slot,optional_dispatch,zlot_clambda_optional_dispatch).
struct_opv(z,claz_clambda,slot,parent,zlot_clambda_parent).
struct_opv(z,claz_clambda,slot,physenv,zlot_clambda_physenv).
struct_opv(z,claz_clambda,slot,return,zlot_clambda_return).
struct_opv(z,claz_clambda,slot,system_lambda_p,zlot_clambda_system_lambda_p).
struct_opv(z,claz_clambda,slot,tail_set,zlot_clambda_tail_set).
struct_opv(z,claz_clambda,slot,vars,zlot_clambda_vars).
struct_opv(z,claz_clambda,subtypep,claz_functional).
struct_opv(z,claz_clambda,super_priority,[claz_functional,claz_leaf,claz_sset_element,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_cldolist,classname,"CLDOLIST").
struct_opv(z,claz_cldolist,classof,claz_built_in_class).
struct_opv(z,claz_cldolist,subtypep,claz_special_operator).
struct_opv(z,claz_cldotimes,classname,"CLDOTIMES").
struct_opv(z,claz_cldotimes,classof,claz_built_in_class).
struct_opv(z,claz_cldotimes,subtypep,claz_special_operator).
struct_opv(z,claz_cleanup,classname,"CLEANUP").
struct_opv(z,claz_cleanup,classof,claz_built_in_class).
struct_opv(z,claz_cleanup,name,"INFO",zlot_cleanup_info).
struct_opv(z,claz_cleanup,name,"KIND",zlot_cleanup_kind).
struct_opv(z,claz_cleanup,name,"MESS-UP",zlot_cleanup_mess_up).
struct_opv(z,claz_cleanup,slot,info,zlot_cleanup_info).
struct_opv(z,claz_cleanup,slot,kind,zlot_cleanup_kind).
struct_opv(z,claz_cleanup,slot,mess_up,zlot_cleanup_mess_up).
struct_opv(z,claz_cleanup,subtypep,claz_structure_c33_object).
struct_opv(z,claz_cleanup,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_cloop,classname,"CLOOP").
struct_opv(z,claz_cloop,classof,claz_built_in_class).
struct_opv(z,claz_cloop,name,"BLOCKS",zlot_cloop_blocks).
struct_opv(z,claz_cloop,name,"DEPTH",zlot_cloop_depth).
struct_opv(z,claz_cloop,name,"EXITS",zlot_cloop_exits).
struct_opv(z,claz_cloop,name,"HEAD",zlot_cloop_head).
struct_opv(z,claz_cloop,name,"INFERIORS",zlot_cloop_inferiors).
struct_opv(z,claz_cloop,name,"INFO",zlot_cloop_info).
struct_opv(z,claz_cloop,name,"KIND",zlot_cloop_kind).
struct_opv(z,claz_cloop,name,"SUPERIOR",zlot_cloop_superior).
struct_opv(z,claz_cloop,name,"TAIL",zlot_cloop_tail).
struct_opv(z,claz_cloop,slot,blocks,zlot_cloop_blocks).
struct_opv(z,claz_cloop,slot,depth,zlot_cloop_depth).
struct_opv(z,claz_cloop,slot,exits,zlot_cloop_exits).
struct_opv(z,claz_cloop,slot,head,zlot_cloop_head).
struct_opv(z,claz_cloop,slot,inferiors,zlot_cloop_inferiors).
struct_opv(z,claz_cloop,slot,info,zlot_cloop_info).
struct_opv(z,claz_cloop,slot,kind,zlot_cloop_kind).
struct_opv(z,claz_cloop,slot,superior,zlot_cloop_superior).
struct_opv(z,claz_cloop,slot,tail,zlot_cloop_tail).
struct_opv(z,claz_cloop,subtypep,claz_structure_c33_object).
struct_opv(z,claz_cloop,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_closure,classname,"CLOSURE").
struct_opv(z,claz_closure,classof,claz_built_in_class).
struct_opv(z,claz_closure,name,"ARGLIST",zlot_closure_arglist).
struct_opv(z,claz_closure,name,"BODY",zlot_closure_body).
struct_opv(z,claz_closure,name,"ENVIRONMENT",zlot_closure_env).
struct_opv(z,claz_closure,name,"EXECUTION-BODY",zlot_closure_execution_body).
struct_opv(z,claz_closure,name,"FREE-SPECIALS",zlot_closure_free_specials).
struct_opv(z,claz_closure,readonly,t,zlot_closure_arglist).
struct_opv(z,claz_closure,readonly,t,zlot_closure_body).
struct_opv(z,claz_closure,readonly,t,zlot_closure_env).
struct_opv(z,claz_closure,readonly,t,zlot_closure_execution_body).
struct_opv(z,claz_closure,readonly,t,zlot_closure_free_specials).
struct_opv(z,claz_closure,returns,claz_argument_list_processor,zlot_closure_arglist).
struct_opv(z,claz_closure,returns,claz_env,zlot_closure_env).
struct_opv(z,claz_closure,returns,claz_simple_vector(claz_symbol),zlot_closure_free_specials).
struct_opv(z,claz_closure,returns,claz_t,zlot_closure_body).
struct_opv(z,claz_closure,returns,claz_t,zlot_closure_execution_body).
struct_opv(z,claz_closure,slot,arglist,zlot_closure_arglist).
struct_opv(z,claz_closure,slot,body,zlot_closure_body).
struct_opv(z,claz_closure,slot,env,zlot_closure_env).
struct_opv(z,claz_closure,slot,execution_body,zlot_closure_execution_body).
struct_opv(z,claz_closure,slot,free_specials,zlot_closure_free_specials).
struct_opv(z,claz_closure,subtypep,claz_function).
struct_opv(z,claz_closure_binding,classname,"CLOSURE-BINDING").
struct_opv(z,claz_closure_binding,classof,claz_built_in_class).
struct_opv(z,claz_closure_binding,name,"VALUE",zlot_closure_binding_value).
struct_opv(z,claz_closure_binding,returns,claz_t,zlot_closure_binding_value).
struct_opv(z,claz_closure_binding,slot,value,zlot_closure_binding_value).
struct_opv(z,claz_cls_string,classname,"CLS-STRING").
struct_opv(z,claz_cls_string,classof,claz_built_in_class).
struct_opv(z,claz_clzip_directories,classname,"CLZIP-DIRECTORIES").
struct_opv(z,claz_clzip_directories,classof,claz_built_in_class).
struct_opv(z,claz_clzip_directories,name,"OUT",zlot_clzip_directories_out).
struct_opv(z,claz_clzip_directories,returns,claz_j_zip_output_stream,zlot_clzip_directories_out).
struct_opv(z,claz_clzip_directories,slot,out,zlot_clzip_directories_out).
struct_opv(z,claz_code_component,classname,"CODE-COMPONENT").
struct_opv(z,claz_code_component,classof,claz_built_in_class).
struct_opv(z,claz_code_component,subtypep,claz_t).
struct_opv(z,claz_code_component,super_priority,[claz_t]).
struct_opv(z,claz_code_deletion_note,classname,"CODE-DELETION-NOTE").
struct_opv(z,claz_code_deletion_note,classof,claz_built_in_class).
struct_opv(z,claz_code_deletion_note,subtypep,claz_simple_compiler_note).
struct_opv(z,claz_code_location,classname,"CODE-LOCATION").
struct_opv(z,claz_code_location,classof,claz_built_in_class).
struct_opv(z,claz_code_location,name,"DEBUG-BLOCK",zlot_code_location_debug_block).
struct_opv(z,claz_code_location,name,"DEBUG-FUN",zlot_code_location_debug_fun).
struct_opv(z,claz_code_location,name,"FORM-NUMBER",zlot_code_location_form_number).
struct_opv(z,claz_code_location,name,"TLF-OFFSET",zlot_code_location_tlf_offset).
struct_opv(z,claz_code_location,name,"UNKNOWN-P",zlot_code_location_unknown_p).
struct_opv(z,claz_code_location,slot,debug_block,zlot_code_location_debug_block).
struct_opv(z,claz_code_location,slot,debug_fun,zlot_code_location_debug_fun).
struct_opv(z,claz_code_location,slot,form_number,zlot_code_location_form_number).
struct_opv(z,claz_code_location,slot,tlf_offset,zlot_code_location_tlf_offset).
struct_opv(z,claz_code_location,slot,unknown_p,zlot_code_location_unknown_p).
struct_opv(z,claz_code_location,subtypep,claz_structure_object).
struct_opv(z,claz_code_location,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_combination,classname,"COMBINATION").
struct_opv(z,claz_combination,classof,claz_built_in_class).
struct_opv(z,claz_combination,subtypep,claz_basic_combination).
struct_opv(z,claz_combination,super_priority,[claz_basic_combination,claz_valued_node,claz_node,claz_sset_element,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_comma,classname,"COMMA").
struct_opv(z,claz_comma,classof,claz_built_in_class).
struct_opv(z,claz_comma,name,"EXPR",zlot_comma_expr).
struct_opv(z,claz_comma,name,"KIND",zlot_comma_kind).
struct_opv(z,claz_comma,slot,expr,zlot_comma_expr).
struct_opv(z,claz_comma,slot,kind,zlot_comma_kind).
struct_opv(z,claz_comma,subtypep,claz_structure_object).
struct_opv(z,claz_comma,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_compiled_closure,classname,"COMPILED-CLOSURE").
struct_opv(z,claz_compiled_closure,classof,claz_built_in_class).
struct_opv(z,claz_compiled_closure,name,"CTX",zlot_compiled_closure_ctx).
struct_opv(z,claz_compiled_closure,returns,claz_simple_vector(claz_closure_binding),zlot_compiled_closure_ctx).
struct_opv(z,claz_compiled_closure,slot,ctx,zlot_compiled_closure_ctx).
struct_opv(z,claz_compiled_closure,subtypep,claz_closure).
struct_opv(z,claz_compiled_code_location,classname,"COMPILED-CODE-LOCATION").
struct_opv(z,claz_compiled_code_location,classof,claz_built_in_class).
struct_opv(z,claz_compiled_code_location,name,"KIND",zlot_compiled_code_location_kind).
struct_opv(z,claz_compiled_code_location,name,"LIVE-SET",zlot_compiled_code_location_live_set).
struct_opv(z,claz_compiled_code_location,name,"PC",zlot_compiled_code_location_pc).
struct_opv(z,claz_compiled_code_location,name,"STEP-INFO",zlot_compiled_code_location_step_info).
struct_opv(z,claz_compiled_code_location,slot,kind,zlot_compiled_code_location_kind).
struct_opv(z,claz_compiled_code_location,slot,live_set,zlot_compiled_code_location_live_set).
struct_opv(z,claz_compiled_code_location,slot,pc,zlot_compiled_code_location_pc).
struct_opv(z,claz_compiled_code_location,slot,step_info,zlot_compiled_code_location_step_info).
struct_opv(z,claz_compiled_code_location,subtypep,claz_code_location).
struct_opv(z,claz_compiled_code_location,super_priority,[claz_code_location,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_compiled_debug_block,classname,"COMPILED-DEBUG-BLOCK").
struct_opv(z,claz_compiled_debug_block,classof,claz_built_in_class).
struct_opv(z,claz_compiled_debug_block,name,"CODE-LOCATIONS",zlot_compiled_debug_block_code_locations).
struct_opv(z,claz_compiled_debug_block,slot,code_locations,zlot_compiled_debug_block_code_locations).
struct_opv(z,claz_compiled_debug_block,subtypep,claz_debug_block).
struct_opv(z,claz_compiled_debug_block,super_priority,[claz_debug_block,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_compiled_debug_fun,classname,"COMPILED-DEBUG-FUN").
struct_opv(z,claz_compiled_debug_fun,classof,claz_built_in_class).
struct_opv(z,claz_compiled_debug_fun,name,"ARGUMENTS",zlot_compiled_debug_fun_arguments).
struct_opv(z,claz_compiled_debug_fun,name,"BLOCKS",zlot_compiled_debug_fun_blocks).
struct_opv(z,claz_compiled_debug_fun,name,"BSP-SAVE",zlot_compiled_debug_fun_bsp_save).
struct_opv(z,claz_compiled_debug_fun,name,"CLOSURE-SAVE",zlot_compiled_debug_fun_closure_save).
struct_opv(z,claz_compiled_debug_fun,name,"COMPILER-DEBUG-FUN",zlot_compiled_debug_fun_compiler_debug_fun).
struct_opv(z,claz_compiled_debug_fun,name,"COMPONENT",zlot_compiled_debug_fun_component).
struct_opv(z,claz_compiled_debug_fun,name,"ELSEWHERE-PC",zlot_compiled_debug_fun_elsewhere_pc).
struct_opv(z,claz_compiled_debug_fun,name,"END-STARTER",zlot_compiled_debug_fun_end_starter).
struct_opv(z,claz_compiled_debug_fun,name,"FORM-NUMBER",zlot_compiled_debug_fun_form_number).
struct_opv(z,claz_compiled_debug_fun,name,"KIND",zlot_compiled_debug_fun_kind).
struct_opv(z,claz_compiled_debug_fun,name,"NAME",zlot_compiled_debug_fun_name).
struct_opv(z,claz_compiled_debug_fun,name,"RETURNS",zlot_compiled_debug_fun_returns).
struct_opv(z,claz_compiled_debug_fun,name,"START-PC",zlot_compiled_debug_fun_start_pc).
struct_opv(z,claz_compiled_debug_fun,name,"TLF-NUMBER",zlot_compiled_debug_fun_tlf_number).
struct_opv(z,claz_compiled_debug_fun,name,"VARS",zlot_compiled_debug_fun_vars).
struct_opv(z,claz_compiled_debug_fun,slot,arguments,zlot_compiled_debug_fun_arguments).
struct_opv(z,claz_compiled_debug_fun,slot,blocks,zlot_compiled_debug_fun_blocks).
struct_opv(z,claz_compiled_debug_fun,slot,bsp_save,zlot_compiled_debug_fun_bsp_save).
struct_opv(z,claz_compiled_debug_fun,slot,closure_save,zlot_compiled_debug_fun_closure_save).
struct_opv(z,claz_compiled_debug_fun,slot,compiler_debug_fun,zlot_compiled_debug_fun_compiler_debug_fun).
struct_opv(z,claz_compiled_debug_fun,slot,component,zlot_compiled_debug_fun_component).
struct_opv(z,claz_compiled_debug_fun,slot,elsewhere_pc,zlot_compiled_debug_fun_elsewhere_pc).
struct_opv(z,claz_compiled_debug_fun,slot,end_starter,zlot_compiled_debug_fun_end_starter).
struct_opv(z,claz_compiled_debug_fun,slot,form_number,zlot_compiled_debug_fun_form_number).
struct_opv(z,claz_compiled_debug_fun,slot,kind,zlot_compiled_debug_fun_kind).
struct_opv(z,claz_compiled_debug_fun,slot,name,zlot_compiled_debug_fun_name).
struct_opv(z,claz_compiled_debug_fun,slot,returns,zlot_compiled_debug_fun_returns).
struct_opv(z,claz_compiled_debug_fun,slot,start_pc,zlot_compiled_debug_fun_start_pc).
struct_opv(z,claz_compiled_debug_fun,slot,tlf_number,zlot_compiled_debug_fun_tlf_number).
struct_opv(z,claz_compiled_debug_fun,slot,vars,zlot_compiled_debug_fun_vars).
struct_opv(z,claz_compiled_debug_fun,subtypep,claz_debug_fun).
struct_opv(z,claz_compiled_debug_fun,super_priority,[claz_debug_fun,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_compiled_debug_fun,super_priority,[claz_debug_fun,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_compiled_debug_info,classname,"COMPILED-DEBUG-INFO").
struct_opv(z,claz_compiled_debug_info,classof,claz_built_in_class).
struct_opv(z,claz_compiled_debug_info,name,"FUN-MAP",zlot_compiled_debug_info_fun_map).
struct_opv(z,claz_compiled_debug_info,slot,fun_map,zlot_compiled_debug_info_fun_map).
struct_opv(z,claz_compiled_debug_info,subtypep,claz_debug_info).
struct_opv(z,claz_compiled_debug_info,super_priority,[claz_debug_info,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_compiled_debug_var,classname,"COMPILED-DEBUG-VAR").
struct_opv(z,claz_compiled_debug_var,classof,claz_built_in_class).
struct_opv(z,claz_compiled_debug_var,name,"INDIRECT-SC-OFFSET",zlot_compiled_debug_var_indirect_sc_offset).
struct_opv(z,claz_compiled_debug_var,name,"INFO",zlot_compiled_debug_var_info).
struct_opv(z,claz_compiled_debug_var,name,"SAVE-SC-OFFSET",zlot_compiled_debug_var_save_sc_offset).
struct_opv(z,claz_compiled_debug_var,name,"SC-OFFSET",zlot_compiled_debug_var_sc_offset).
struct_opv(z,claz_compiled_debug_var,slot,indirect_sc_offset,zlot_compiled_debug_var_indirect_sc_offset).
struct_opv(z,claz_compiled_debug_var,slot,info,zlot_compiled_debug_var_info).
struct_opv(z,claz_compiled_debug_var,slot,save_sc_offset,zlot_compiled_debug_var_save_sc_offset).
struct_opv(z,claz_compiled_debug_var,slot,sc_offset,zlot_compiled_debug_var_sc_offset).
struct_opv(z,claz_compiled_debug_var,subtypep,claz_debug_var).
struct_opv(z,claz_compiled_debug_var,super_priority,[claz_debug_var,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_compiled_frame,classname,"COMPILED-FRAME").
struct_opv(z,claz_compiled_frame,classof,claz_built_in_class).
struct_opv(z,claz_compiled_frame,name,"ESCAPED",zlot_compiled_frame_escaped).
struct_opv(z,claz_compiled_frame,slot,escaped,zlot_compiled_frame_escaped).
struct_opv(z,claz_compiled_frame,subtypep,claz_frame).
struct_opv(z,claz_compiled_frame,super_priority,[claz_frame,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_compiled_primitive,classname,"COMPILED-PRIMITIVE").
struct_opv(z,claz_compiled_primitive,classof,claz_built_in_class).
struct_opv(z,claz_compiled_primitive,subtypep,claz_primitive).
struct_opv(z,claz_compiler_macro_keyword_problem,classname,"COMPILER-MACRO-KEYWORD-PROBLEM").
struct_opv(z,claz_compiler_macro_keyword_problem,classof,claz_built_in_class).
struct_opv(z,claz_compiler_macro_keyword_problem,name,"ARGUMENT",zlot_compiler_macro_keyword_problem_argument).
struct_opv(z,claz_compiler_macro_keyword_problem,slot,argument,zlot_compiler_macro_keyword_problem_argument).
struct_opv(z,claz_compiler_note,classname,"COMPILER-NOTE").
struct_opv(z,claz_compiler_note,classof,claz_built_in_class).
struct_opv(z,claz_component,classname,"COMPONENT").
struct_opv(z,claz_component,classof,claz_built_in_class).
struct_opv(z,claz_component,name,"DELETE-BLOCKS",zlot_component_delete_blocks).
struct_opv(z,claz_component,name,"DX-LVARS",zlot_component_dx_lvars).
struct_opv(z,claz_component,name,"FAILED-OPTIMIZATIONS",zlot_component_failed_optimizations).
struct_opv(z,claz_component,name,"HEAD",zlot_component_head).
struct_opv(z,claz_component,name,"INFO",zlot_component_info).
struct_opv(z,claz_component,name,"INLINE-EXPANSIONS",zlot_component_inline_expansions).
struct_opv(z,claz_component,name,"KIND",zlot_component_kind).
struct_opv(z,claz_component,name,"LAMBDAS",zlot_component_lambdas).
struct_opv(z,claz_component,name,"LAST-BLOCK",zlot_component_last_block).
struct_opv(z,claz_component,name,"NAME",zlot_component_name).
struct_opv(z,claz_component,name,"NEW-FUNCTIONALS",zlot_component_new_functionals).
struct_opv(z,claz_component,name,"NLX-INFO-GENERATED-P",zlot_component_nlx_info_generated_p).
struct_opv(z,claz_component,name,"OUTER-LOOP",zlot_component_outer_loop).
struct_opv(z,claz_component,name,"REANALYZE",zlot_component_reanalyze).
struct_opv(z,claz_component,name,"REANALYZE-FUNCTIONALS",zlot_component_reanalyze_functionals).
struct_opv(z,claz_component,name,"REOPTIMIZE",zlot_component_reoptimize).
struct_opv(z,claz_component,name,"SSET-NUMBER",zlot_component_sset_number).
struct_opv(z,claz_component,name,"TAIL",zlot_component_tail).
struct_opv(z,claz_component,slot,delete_blocks,zlot_component_delete_blocks).
struct_opv(z,claz_component,slot,dx_lvars,zlot_component_dx_lvars).
struct_opv(z,claz_component,slot,failed_optimizations,zlot_component_failed_optimizations).
struct_opv(z,claz_component,slot,head,zlot_component_head).
struct_opv(z,claz_component,slot,info,zlot_component_info).
struct_opv(z,claz_component,slot,inline_expansions,zlot_component_inline_expansions).
struct_opv(z,claz_component,slot,kind,zlot_component_kind).
struct_opv(z,claz_component,slot,lambdas,zlot_component_lambdas).
struct_opv(z,claz_component,slot,last_block,zlot_component_last_block).
struct_opv(z,claz_component,slot,name,zlot_component_name).
struct_opv(z,claz_component,slot,new_functionals,zlot_component_new_functionals).
struct_opv(z,claz_component,slot,nlx_info_generated_p,zlot_component_nlx_info_generated_p).
struct_opv(z,claz_component,slot,outer_loop,zlot_component_outer_loop).
struct_opv(z,claz_component,slot,reanalyze,zlot_component_reanalyze).
struct_opv(z,claz_component,slot,reanalyze_functionals,zlot_component_reanalyze_functionals).
struct_opv(z,claz_component,slot,reoptimize,zlot_component_reoptimize).
struct_opv(z,claz_component,slot,sset_number,zlot_component_sset_number).
struct_opv(z,claz_component,slot,tail,zlot_component_tail).
struct_opv(z,claz_component,subtypep,claz_structure_c33_object).
struct_opv(z,claz_component,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_compound_type,classname,"COMPOUND-TYPE").
struct_opv(z,claz_compound_type,classof,claz_built_in_class).
struct_opv(z,claz_compound_type,name,"ENUMERABLE",zlot_compound_type_enumerable).
struct_opv(z,claz_compound_type,name,"TYPES",zlot_compound_type_types).
struct_opv(z,claz_compound_type,slot,enumerable,zlot_compound_type_enumerable).
struct_opv(z,claz_compound_type,slot,types,zlot_compound_type_types).
struct_opv(z,claz_compound_type,subtypep,claz_ctype).
struct_opv(z,claz_compound_type,super_priority,[claz_ctype,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_conset,classname,"CONSET").
struct_opv(z,claz_conset,classof,claz_built_in_class).
struct_opv(z,claz_conset,name,"MAX",zlot_conset_max).
struct_opv(z,claz_conset,name,"MIN",zlot_conset_min).
struct_opv(z,claz_conset,name,"VECTOR",zlot_conset_vector).
struct_opv(z,claz_conset,slot,max,zlot_conset_max).
struct_opv(z,claz_conset,slot,min,zlot_conset_min).
struct_opv(z,claz_conset,slot,vector,zlot_conset_vector).
struct_opv(z,claz_conset,subtypep,claz_structure_object).
struct_opv(z,claz_conset,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_const,classname,"CONST").
struct_opv(z,claz_const,classof,claz_built_in_class).
struct_opv(z,claz_const,name,"FORM",zlot_const_form).
struct_opv(z,claz_const,name,"HORIZON",zlot_const_horizon).
struct_opv(z,claz_const,name,"LTV-FORM",zlot_const_ltv_form).
struct_opv(z,claz_const,name,"VALUE",zlot_const_value).
struct_opv(z,claz_const,slot,form,zlot_const_form).
struct_opv(z,claz_const,slot,horizon,zlot_const_horizon).
struct_opv(z,claz_const,slot,ltv_form,zlot_const_ltv_form).
struct_opv(z,claz_const,slot,value,zlot_const_value).
struct_opv(z,claz_const,subtypep,claz_structure_object).
struct_opv(z,claz_const,super_priority,[claz_structure_object,claz_t]).
struct_opv(z,claz_constant,classname,"CONSTANT").
struct_opv(z,claz_constant,classof,claz_built_in_class).
struct_opv(z,claz_constant,name,"BOXED-TN",zlot_constant_boxed_tn).
struct_opv(z,claz_constant,name,"VALUE",zlot_constant_value).
struct_opv(z,claz_constant,slot,boxed_tn,zlot_constant_boxed_tn).
struct_opv(z,claz_constant,slot,value,zlot_constant_value).
struct_opv(z,claz_constant,subtypep,claz_leaf).
struct_opv(z,claz_constant,super_priority,[claz_leaf,claz_sset_element,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_constant_fast_method_call,classname,"CONSTANT-FAST-METHOD-CALL").
struct_opv(z,claz_constant_fast_method_call,classof,claz_built_in_class).
struct_opv(z,claz_constant_fast_method_call,name,"VALUE",zlot_constant_fast_method_call_value).
struct_opv(z,claz_constant_fast_method_call,slot,value,zlot_constant_fast_method_call_value).
struct_opv(z,claz_constant_fast_method_call,subtypep,claz_fast_method_call).
struct_opv(z,claz_constant_fast_method_call,super_priority,[claz_fast_method_call,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_constant_method_call,classname,"CONSTANT-METHOD-CALL").
struct_opv(z,claz_constant_method_call,classof,claz_built_in_class).
struct_opv(z,claz_constant_method_call,name,"VALUE",zlot_constant_method_call_value).
struct_opv(z,claz_constant_method_call,slot,value,zlot_constant_method_call_value).
struct_opv(z,claz_constant_method_call,subtypep,claz_method_call).
struct_opv(z,claz_constant_method_call,super_priority,[claz_method_call,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_constant_modified,classname,"CONSTANT-MODIFIED").
struct_opv(z,claz_constant_modified,classof,claz_built_in_class).
struct_opv(z,claz_constant_modified,name,"FUN-NAME",zlot_constant_modified_fun_name).
struct_opv(z,claz_constant_modified,slot,fun_name,zlot_constant_modified_fun_name).
struct_opv(z,claz_constant_type,classname,"CONSTANT-TYPE").
struct_opv(z,claz_constant_type,classof,claz_built_in_class).
struct_opv(z,claz_constant_type,name,"CLASS-INFO",zlot_constant_type_class_info).
struct_opv(z,claz_constant_type,name,"TYPE",zlot_constant_type_type).
struct_opv(z,claz_constant_type,slot,class_info,zlot_constant_type_class_info).
struct_opv(z,claz_constant_type,slot,type,zlot_constant_type_type).
struct_opv(z,claz_constant_type,subtypep,claz_ctype).
struct_opv(z,claz_constant_type,super_priority,[claz_ctype,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_constant_value,classname,"CONSTANT-VALUE").
struct_opv(z,claz_constant_value,classof,claz_built_in_class).
struct_opv(z,claz_constant_value,subtypep,claz_dfun_info).
struct_opv(z,claz_constant_value,super_priority,[claz_dfun_info,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_constraint,classname,"CONSTRAINT").
struct_opv(z,claz_constraint,classof,claz_built_in_class).
struct_opv(z,claz_constraint,name,"KIND",zlot_constraint_kind).
struct_opv(z,claz_constraint,name,"NOT-P",zlot_constraint_not_p).
struct_opv(z,claz_constraint,name,"X",zlot_constraint_x).
struct_opv(z,claz_constraint,name,"Y",zlot_constraint_y).
struct_opv(z,claz_constraint,slot,kind,zlot_constraint_kind).
struct_opv(z,claz_constraint,slot,not_p,zlot_constraint_not_p).
struct_opv(z,claz_constraint,slot,x,zlot_constraint_x).
struct_opv(z,claz_constraint,slot,y,zlot_constraint_y).
struct_opv(z,claz_constraint,subtypep,claz_sset_element).
struct_opv(z,claz_constraint,super_priority,[claz_sset_element,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_control_stack_exhausted,classname,"CONTROL-STACK-EXHAUSTED").
struct_opv(z,claz_control_stack_exhausted,classof,claz_built_in_class).
struct_opv(z,claz_control_string_directive,classname,"CONTROL-STRING-DIRECTIVE").
struct_opv(z,claz_control_string_directive,classof,claz_built_in_class).
struct_opv(z,claz_control_string_directive,name,"ATSIGN-P",zlot_control_string_directive_atsign_p).
struct_opv(z,claz_control_string_directive,name,"CLAUSE-CHAIN",zlot_control_string_directive_clause_chain).
struct_opv(z,claz_control_string_directive,name,"COLON-P",zlot_control_string_directive_colon_p).
struct_opv(z,claz_control_string_directive,name,"CS-INDEX",zlot_control_string_directive_cs_index).
struct_opv(z,claz_control_string_directive,name,"DATA",zlot_control_string_directive_data).
struct_opv(z,claz_control_string_directive,name,"PARM-LIST",zlot_control_string_directive_parm_list).
struct_opv(z,claz_control_string_directive,name,"TYPE",zlot_control_string_directive_type).
struct_opv(z,claz_control_string_directive,name,"V-OR-C35-P",zlot_control_string_directive_v_or_c35_p).
struct_opv(z,claz_control_string_directive,slot,atsign_p,zlot_control_string_directive_atsign_p).
struct_opv(z,claz_control_string_directive,slot,clause_chain,zlot_control_string_directive_clause_chain).
struct_opv(z,claz_control_string_directive,slot,colon_p,zlot_control_string_directive_colon_p).
struct_opv(z,claz_control_string_directive,slot,cs_index,zlot_control_string_directive_cs_index).
struct_opv(z,claz_control_string_directive,slot,data,zlot_control_string_directive_data).
struct_opv(z,claz_control_string_directive,slot,parm_list,zlot_control_string_directive_parm_list).
struct_opv(z,claz_control_string_directive,slot,type,zlot_control_string_directive_type).
struct_opv(z,claz_control_string_directive,slot,v_or_c35_p,zlot_control_string_directive_v_or_c35_p).
struct_opv(z,claz_control_string_directive,subtypep,claz_structure_object).
struct_opv(z,claz_control_string_directive,super_priority,[claz_structure_object,claz_t]).
struct_opv(z,claz_control_transfer,classname,"CONTROL-TRANSFER").
struct_opv(z,claz_control_transfer,classof,claz_built_in_class).
struct_opv(z,claz_control_transfer,subtypep,claz_prolog_runtime_exception).
struct_opv(z,claz_core_object,classname,"CORE-OBJECT").
struct_opv(z,claz_core_object,classof,claz_built_in_class).
struct_opv(z,claz_core_object,name,"DEBUG-INFO",zlot_core_object_debug_info).
struct_opv(z,claz_core_object,name,"ENTRY-TABLE",zlot_core_object_entry_table).
struct_opv(z,claz_core_object,name,"PATCH-TABLE",zlot_core_object_patch_table).
struct_opv(z,claz_core_object,slot,debug_info,zlot_core_object_debug_info).
struct_opv(z,claz_core_object,slot,entry_table,zlot_core_object_entry_table).
struct_opv(z,claz_core_object,slot,patch_table,zlot_core_object_patch_table).
struct_opv(z,claz_core_object,subtypep,claz_structure_object).
struct_opv(z,claz_core_object,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_counter,classname,"COUNTER").
struct_opv(z,claz_counter,classof,claz_built_in_class).
struct_opv(z,claz_counter,name,"OVERFLOW",zlot_counter_overflow).
struct_opv(z,claz_counter,name,"WORD",zlot_counter_word).
struct_opv(z,claz_counter,slot,overflow,zlot_counter_overflow).
struct_opv(z,claz_counter,slot,word,zlot_counter_word).
struct_opv(z,claz_counter,subtypep,claz_structure_object).
struct_opv(z,claz_counter,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_cpl_protocol_violation,classname,"CPL-PROTOCOL-VIOLATION").
struct_opv(z,claz_cpl_protocol_violation,classof,claz_built_in_class).
struct_opv(z,claz_cpl_protocol_violation,name,"CLASS",zlot_cpl_protocol_violation_class).
struct_opv(z,claz_cpl_protocol_violation,name,"CPL",zlot_cpl_protocol_violation_cpl).
struct_opv(z,claz_cpl_protocol_violation,slot,class,zlot_cpl_protocol_violation_class).
struct_opv(z,claz_cpl_protocol_violation,slot,cpl,zlot_cpl_protocol_violation_cpl).
struct_opv(z,claz_creturn,classname,"CRETURN").
struct_opv(z,claz_creturn,classof,claz_built_in_class).
struct_opv(z,claz_creturn,name,"LAMBDA",zlot_creturn_lambda).
struct_opv(z,claz_creturn,name,"RESULT",zlot_creturn_result).
struct_opv(z,claz_creturn,name,"RESULT-TYPE",zlot_creturn_result_type).
struct_opv(z,claz_creturn,slot,lambda,zlot_creturn_lambda).
struct_opv(z,claz_creturn,slot,result,zlot_creturn_result).
struct_opv(z,claz_creturn,slot,result_type,zlot_creturn_result_type).
struct_opv(z,claz_creturn,subtypep,claz_node).
struct_opv(z,claz_creturn,super_priority,[claz_node,claz_sset_element,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_cset,classname,"CSET").
struct_opv(z,claz_cset,classof,claz_built_in_class).
struct_opv(z,claz_cset,name,"DERIVED-TYPE",zlot_cset_derived_type).
struct_opv(z,claz_cset,name,"VALUE",zlot_cset_value).
struct_opv(z,claz_cset,name,"VAR",zlot_cset_var).
struct_opv(z,claz_cset,slot,derived_type,zlot_cset_derived_type).
struct_opv(z,claz_cset,slot,value,zlot_cset_value).
struct_opv(z,claz_cset,slot,var,zlot_cset_var).
struct_opv(z,claz_cset,subtypep,claz_valued_node).
struct_opv(z,claz_cset,super_priority,[claz_valued_node,claz_node,claz_sset_element,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(c,claz_ctor,classname,"CTOR").
struct_opv(c,claz_ctor,classof,claz_built_in_class).
struct_opv(c,claz_ctor,name,"CLASS",zlot_ctor_class).
struct_opv(c,claz_ctor,name,"CLASS-OR-NAME",zlot_ctor_class_or_name).
struct_opv(c,claz_ctor,name,"FUNCTION-NAME",zlot_ctor_function_name).
struct_opv(c,claz_ctor,name,"INITARGS",zlot_ctor_initargs).
struct_opv(c,claz_ctor,name,"SAFE-P",zlot_ctor_safe_p).
struct_opv(c,claz_ctor,name,"STATE",zlot_ctor_state).
struct_opv(c,claz_ctor,slot,class,zlot_ctor_class).
struct_opv(c,claz_ctor,slot,class_or_name,zlot_ctor_class_or_name).
struct_opv(c,claz_ctor,slot,function_name,zlot_ctor_function_name).
struct_opv(c,claz_ctor,slot,initargs,zlot_ctor_initargs).
struct_opv(c,claz_ctor,slot,safe_p,zlot_ctor_safe_p).
struct_opv(c,claz_ctor,slot,state,zlot_ctor_state).
struct_opv(c,claz_ctor,subtypep,claz_function).
struct_opv(c,claz_ctor,super_priority,[claz_t]).
struct_opv(z,claz_ctran,classname,"CTRAN").
struct_opv(z,claz_ctran,classof,claz_built_in_class).
struct_opv(z,claz_ctran,name,"BLOCK",zlot_ctran_block).
struct_opv(z,claz_ctran,name,"KIND",zlot_ctran_kind).
struct_opv(z,claz_ctran,name,"NEXT",zlot_ctran_next).
struct_opv(z,claz_ctran,name,"USE",zlot_ctran_use).
struct_opv(z,claz_ctran,slot,block,zlot_ctran_block).
struct_opv(z,claz_ctran,slot,kind,zlot_ctran_kind).
struct_opv(z,claz_ctran,slot,next,zlot_ctran_next).
struct_opv(z,claz_ctran,slot,use,zlot_ctran_use).
struct_opv(z,claz_ctran,subtypep,claz_structure_c33_object).
struct_opv(z,claz_ctran,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_ctype,classname,"CTYPE").
struct_opv(z,claz_ctype,classof,claz_built_in_class).
struct_opv(z,claz_ctype,name,"CLASS-INFO",zlot_ctype_class_info).
struct_opv(z,claz_ctype,name,"HASH-VALUE",zlot_ctype_hash_value).
struct_opv(z,claz_ctype,slot,class_info,zlot_ctype_class_info).
struct_opv(z,claz_ctype,slot,hash_value,zlot_ctype_hash_value).
struct_opv(z,claz_ctype,subtypep,claz_structure_c33_object).
struct_opv(z,claz_ctype,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_dead_beef_structure_object,classname,"DEAD-BEEF-STRUCTURE-OBJECT").
struct_opv(z,claz_dead_beef_structure_object,classof,claz_built_in_class).
struct_opv(z,claz_dead_beef_structure_object,subtypep,claz_structure_object).
struct_opv(z,claz_dead_beef_structure_object,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_deadline_timeout,classname,"DEADLINE-TIMEOUT").
struct_opv(z,claz_deadline_timeout,classof,claz_built_in_class).
struct_opv(z,claz_deadline_timeout,subtypep,claz_timeout).
struct_opv(z,claz_debug_block,classname,"DEBUG-BLOCK").
struct_opv(z,claz_debug_block,classof,claz_built_in_class).
struct_opv(z,claz_debug_block,name,"ELSEWHERE-P",zlot_debug_block_elsewhere_p).
struct_opv(z,claz_debug_block,slot,elsewhere_p,zlot_debug_block_elsewhere_p).
struct_opv(z,claz_debug_block,subtypep,claz_structure_object).
struct_opv(z,claz_debug_block,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_debug_fun,classname,"DEBUG-FUN").
struct_opv(z,claz_debug_fun,classof,claz_built_in_class).
struct_opv(z,claz_debug_fun,name,"BLOCKS",zlot_debug_fun_blocks).
struct_opv(z,claz_debug_fun,name,"DEBUG-VARS",zlot_debug_fun_debug_vars).
struct_opv(z,claz_debug_fun,name,"FUNCTION",zlot_debug_fun_function).
struct_opv(z,claz_debug_fun,name,"LAMBDA-LIST",zlot_debug_fun_lambda_list).
struct_opv(z,claz_debug_fun,slot,blocks,zlot_debug_fun_blocks).
struct_opv(z,claz_debug_fun,slot,debug_vars,zlot_debug_fun_debug_vars).
struct_opv(z,claz_debug_fun,slot,function,zlot_debug_fun_function).
struct_opv(z,claz_debug_fun,slot,lambda_list,zlot_debug_fun_lambda_list).
struct_opv(z,claz_debug_fun,subtypep,claz_structure_c33_object).
struct_opv(z,claz_debug_fun,subtypep,claz_structure_object).
struct_opv(z,claz_debug_fun,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_debug_fun,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_debug_info,classname,"DEBUG-INFO").
struct_opv(z,claz_debug_info,classof,claz_built_in_class).
struct_opv(z,claz_debug_info,name,"NAME",zlot_debug_info_name).
struct_opv(z,claz_debug_info,name,"SOURCE",zlot_debug_info_source).
struct_opv(z,claz_debug_info,slot,name,zlot_debug_info_name).
struct_opv(z,claz_debug_info,slot,source,zlot_debug_info_source).
struct_opv(z,claz_debug_info,subtypep,claz_structure_c33_object).
struct_opv(z,claz_debug_info,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_debug_name_marker,classname,"DEBUG-NAME-MARKER").
struct_opv(z,claz_debug_name_marker,classof,claz_built_in_class).
struct_opv(z,claz_debug_name_marker,subtypep,claz_structure_c33_object).
struct_opv(z,claz_debug_name_marker,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_debug_source,classname,"DEBUG-SOURCE").
struct_opv(z,claz_debug_source,classof,claz_built_in_class).
struct_opv(z,claz_debug_source,name,"COMPILED",zlot_debug_source_compiled).
struct_opv(z,claz_debug_source,name,"CREATED",zlot_debug_source_created).
struct_opv(z,claz_debug_source,name,"FORM",zlot_debug_source_form).
struct_opv(z,claz_debug_source,name,"FUNCTION",zlot_debug_source_function).
struct_opv(z,claz_debug_source,name,"NAMESTRING",zlot_debug_source_namestring).
struct_opv(z,claz_debug_source,name,"PLIST",zlot_debug_source_plist).
struct_opv(z,claz_debug_source,name,"SOURCE-ROOT",zlot_debug_source_source_root).
struct_opv(z,claz_debug_source,name,"START-POSITIONS",zlot_debug_source_start_positions).
struct_opv(z,claz_debug_source,slot,compiled,zlot_debug_source_compiled).
struct_opv(z,claz_debug_source,slot,created,zlot_debug_source_created).
struct_opv(z,claz_debug_source,slot,form,zlot_debug_source_form).
struct_opv(z,claz_debug_source,slot,function,zlot_debug_source_function).
struct_opv(z,claz_debug_source,slot,namestring,zlot_debug_source_namestring).
struct_opv(z,claz_debug_source,slot,plist,zlot_debug_source_plist).
struct_opv(z,claz_debug_source,slot,source_root,zlot_debug_source_source_root).
struct_opv(z,claz_debug_source,slot,start_positions,zlot_debug_source_start_positions).
struct_opv(z,claz_debug_source,subtypep,claz_structure_c33_object).
struct_opv(z,claz_debug_source,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_debug_var,classname,"DEBUG-VAR").
struct_opv(z,claz_debug_var,classof,claz_built_in_class).
struct_opv(z,claz_debug_var,name,"ALIVE-P",zlot_debug_var_alive_p).
struct_opv(z,claz_debug_var,name,"ID",zlot_debug_var_id).
struct_opv(z,claz_debug_var,name,"SYMBOL",zlot_debug_var_symbol).
struct_opv(z,claz_debug_var,slot,alive_p,zlot_debug_var_alive_p).
struct_opv(z,claz_debug_var,slot,id,zlot_debug_var_id).
struct_opv(z,claz_debug_var,slot,symbol,zlot_debug_var_symbol).
struct_opv(z,claz_debug_var,subtypep,claz_structure_object).
struct_opv(z,claz_debug_var,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_decoding_reader,classname,"DECODING-READER").
struct_opv(z,claz_decoding_reader,classof,claz_built_in_class).
struct_opv(z,claz_decoding_reader,name,"BBUF",zlot_decoding_reader_bbuf).
struct_opv(z,claz_decoding_reader,name,"CD",zlot_decoding_reader_cd).
struct_opv(z,claz_decoding_reader,name,"CE",zlot_decoding_reader_ce).
struct_opv(z,claz_decoding_reader,name,"STREAM",zlot_decoding_reader_stream).
struct_opv(z,claz_decoding_reader,returns,claz_prolog_byte_buffer,zlot_decoding_reader_bbuf).
struct_opv(z,claz_decoding_reader,returns,claz_prolog_charset_decoder,zlot_decoding_reader_cd).
struct_opv(z,claz_decoding_reader,returns,claz_prolog_charset_encoder,zlot_decoding_reader_ce).
struct_opv(z,claz_decoding_reader,returns,claz_prolog_pushback_input_stream,zlot_decoding_reader_stream).
struct_opv(z,claz_decoding_reader,slot,bbuf,zlot_decoding_reader_bbuf).
struct_opv(z,claz_decoding_reader,slot,cd,zlot_decoding_reader_cd).
struct_opv(z,claz_decoding_reader,slot,ce,zlot_decoding_reader_ce).
struct_opv(z,claz_decoding_reader,slot,stream,zlot_decoding_reader_stream).
struct_opv(z,claz_decoding_reader,subtypep,claz_prolog_pushback_reader).
struct_opv(z,claz_default_method_only,classname,"DEFAULT-METHOD-ONLY").
struct_opv(z,claz_default_method_only,classof,claz_built_in_class).
struct_opv(z,claz_default_method_only,subtypep,claz_dfun_info).
struct_opv(z,claz_default_method_only,super_priority,[claz_dfun_info,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_defconstant_uneql,classname,"DEFCONSTANT-UNEQL").
struct_opv(z,claz_defconstant_uneql,classof,claz_built_in_class).
struct_opv(z,claz_defconstant_uneql,name,"NAME",zlot_defconstant_uneql_name).
struct_opv(z,claz_defconstant_uneql,name,"NEW-VALUE",zlot_defconstant_uneql_new_value).
struct_opv(z,claz_defconstant_uneql,name,"OLD-VALUE",zlot_defconstant_uneql_old_value).
struct_opv(z,claz_defconstant_uneql,slot,name,zlot_defconstant_uneql_name).
struct_opv(z,claz_defconstant_uneql,slot,new_value,zlot_defconstant_uneql_new_value).
struct_opv(z,claz_defconstant_uneql,slot,old_value,zlot_defconstant_uneql_old_value).
struct_opv(c,claz_defined_fun,classname,"DEFINED-FUN").
struct_opv(c,claz_defined_fun,classof,claz_built_in_class).
struct_opv(c,claz_defined_fun,name,"FUNCTIONALS",zlot_defined_fun_functionals).
struct_opv(c,claz_defined_fun,name,"INLINE-EXPANSION",zlot_defined_fun_inline_expansion).
struct_opv(c,claz_defined_fun,name,"INLINEP",zlot_defined_fun_inlinep).
struct_opv(c,claz_defined_fun,name,"KIND",zlot_defined_fun_kind).
struct_opv(c,claz_defined_fun,name,"WHERE-FROM",zlot_defined_fun_where_from).
struct_opv(c,claz_defined_fun,slot,functionals,zlot_defined_fun_functionals).
struct_opv(c,claz_defined_fun,slot,inline_expansion,zlot_defined_fun_inline_expansion).
struct_opv(c,claz_defined_fun,slot,inlinep,zlot_defined_fun_inlinep).
struct_opv(c,claz_defined_fun,slot,kind,zlot_defined_fun_kind).
struct_opv(c,claz_defined_fun,slot,where_from,zlot_defined_fun_where_from).
struct_opv(c,claz_defined_fun,subtypep,claz_global_var).
struct_opv(c,claz_defined_fun,super_priority,[claz_global_var,claz_basic_var,claz_leaf,claz_sset_element,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(c,claz_definition_source_location,classname,"DEFINITION-SOURCE-LOCATION").
struct_opv(c,claz_definition_source_location,classof,claz_built_in_class).
struct_opv(c,claz_definition_source_location,name,"FORM-NUMBER",zlot_definition_source_location_form_number).
struct_opv(c,claz_definition_source_location,name,"NAMESTRING",zlot_definition_source_location_namestring).
struct_opv(c,claz_definition_source_location,name,"PLIST",zlot_definition_source_location_plist).
struct_opv(c,claz_definition_source_location,name,"TOPLEVEL-FORM-NUMBER",zlot_definition_source_location_toplevel_form_number).
struct_opv(c,claz_definition_source_location,slot,form_number,zlot_definition_source_location_form_number).
struct_opv(c,claz_definition_source_location,slot,namestring,zlot_definition_source_location_namestring).
struct_opv(c,claz_definition_source_location,slot,plist,zlot_definition_source_location_plist).
struct_opv(c,claz_definition_source_location,slot,toplevel_form_number,zlot_definition_source_location_toplevel_form_number).
struct_opv(c,claz_definition_source_location,subtypep,claz_structure_c33_object).
struct_opv(c,claz_definition_source_location,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(c,claz_definition_source_mixin,classname,"DEFINITION-SOURCE-MIXIN").
struct_opv(c,claz_definition_source_mixin,classof,claz_built_in_class).
struct_opv(c,claz_definition_source_mixin,name,"SOURCE",zlot_definition_source_mixin_source).
struct_opv(c,claz_definition_source_mixin,slot,source,zlot_definition_source_mixin_source).
struct_opv(c,claz_definition_source_mixin,subtypep,claz_standard_object).
struct_opv(c,claz_definition_source_mixin,super_priority,[claz_standard_object,claz_slot_object,claz_t]).
struct_opv(z,claz_dependent_update_mixin,classname,"DEPENDENT-UPDATE-MIXIN").
struct_opv(z,claz_dependent_update_mixin,classof,claz_built_in_class).
struct_opv(z,claz_dependent_update_mixin,subtypep,claz_plist_mixin).
struct_opv(z,claz_dependent_update_mixin,super_priority,[claz_plist_mixin,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(z,claz_deprecated_eval_when_situations,classname,"DEPRECATED-EVAL-WHEN-SITUATIONS").
struct_opv(z,claz_deprecated_eval_when_situations,classof,claz_built_in_class).
struct_opv(z,claz_deprecated_eval_when_situations,name,"SITUATIONS",zlot_deprecated_eval_when_situations_situations).
struct_opv(z,claz_deprecated_eval_when_situations,slot,situations,zlot_deprecated_eval_when_situations_situations).
struct_opv(z,claz_deprecation_info,classname,"DEPRECATION-INFO").
struct_opv(z,claz_deprecation_info,classof,claz_built_in_class).
struct_opv(z,claz_deprecation_info,name,"REPLACEMENTS",zlot_deprecation_info_replacements).
struct_opv(z,claz_deprecation_info,name,"SOFTWARE",zlot_deprecation_info_software).
struct_opv(z,claz_deprecation_info,name,"STATE",zlot_deprecation_info_state).
struct_opv(z,claz_deprecation_info,name,"VERSION",zlot_deprecation_info_version).
struct_opv(z,claz_deprecation_info,slot,replacements,zlot_deprecation_info_replacements).
struct_opv(z,claz_deprecation_info,slot,software,zlot_deprecation_info_software).
struct_opv(z,claz_deprecation_info,slot,state,zlot_deprecation_info_state).
struct_opv(z,claz_deprecation_info,slot,version,zlot_deprecation_info_version).
struct_opv(z,claz_deprecation_info,subtypep,claz_structure_object).
struct_opv(z,claz_deprecation_info,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_dfun_info,classname,"DFUN-INFO").
struct_opv(z,claz_dfun_info,classof,claz_built_in_class).
struct_opv(z,claz_dfun_info,name,"CACHE",zlot_dfun_info_cache).
struct_opv(z,claz_dfun_info,slot,cache,zlot_dfun_info_cache).
struct_opv(z,claz_dfun_info,subtypep,claz_structure_object).
struct_opv(z,claz_dfun_info,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(c,claz_direct_slot_definition,classname,"DIRECT-SLOT-DEFINITION").
struct_opv(c,claz_direct_slot_definition,classof,claz_built_in_class).
struct_opv(c,claz_direct_slot_definition,name,"READERS",zlot_direct_slot_definition_readers).
struct_opv(c,claz_direct_slot_definition,name,"WRITERS",zlot_direct_slot_definition_writers).
struct_opv(c,claz_direct_slot_definition,slot,readers,zlot_direct_slot_definition_readers).
struct_opv(c,claz_direct_slot_definition,slot,writers,zlot_direct_slot_definition_writers).
struct_opv(c,claz_direct_slot_definition,subtypep,claz_slot_definition).
struct_opv(c,claz_direct_slot_definition,super_priority,[claz_slot_definition,claz_metaobject,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(c,claz_direct_slot_definition,super_priority,[claz_slot_definition,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(z,claz_disassem_state,classname,"DISASSEM-STATE").
struct_opv(z,claz_disassem_state,classof,claz_built_in_class).
struct_opv(z,claz_disassem_state,name,"ADDR-PRINT-LEN",zlot_disassem_state_addr_print_len).
struct_opv(z,claz_disassem_state,name,"ALIGNMENT",zlot_disassem_state_alignment).
struct_opv(z,claz_disassem_state,name,"ARGUMENT-COLUMN",zlot_disassem_state_argument_column).
struct_opv(z,claz_disassem_state,name,"BYTE-ORDER",zlot_disassem_state_byte_order).
struct_opv(z,claz_disassem_state,name,"CUR-LABELS",zlot_disassem_state_cur_labels).
struct_opv(z,claz_disassem_state,name,"CUR-OFFS",zlot_disassem_state_cur_offs).
struct_opv(z,claz_disassem_state,name,"CUR-OFFS-HOOKS",zlot_disassem_state_cur_offs_hooks).
struct_opv(z,claz_disassem_state,name,"CURRENT-VALID-LOCATIONS",zlot_disassem_state_current_valid_locations).
struct_opv(z,claz_disassem_state,name,"FILTERED-VALUES",zlot_disassem_state_filtered_values).
struct_opv(z,claz_disassem_state,name,"FUN-HOOKS",zlot_disassem_state_fun_hooks).
struct_opv(z,claz_disassem_state,name,"INST-PROPERTIES",zlot_disassem_state_inst_properties).
struct_opv(z,claz_disassem_state,name,"LABEL-HASH",zlot_disassem_state_label_hash).
struct_opv(z,claz_disassem_state,name,"LABELS",zlot_disassem_state_labels).
struct_opv(z,claz_disassem_state,name,"NEXT-OFFS",zlot_disassem_state_next_offs).
struct_opv(z,claz_disassem_state,name,"NOTES",zlot_disassem_state_notes).
struct_opv(z,claz_disassem_state,name,"OUTPUT-STATE",zlot_disassem_state_output_state).
struct_opv(z,claz_disassem_state,name,"PROPERTIES",zlot_disassem_state_properties).
struct_opv(z,claz_disassem_state,name,"SEGMENT",zlot_disassem_state_segment).
struct_opv(z,claz_disassem_state,name,"SEGMENT-SAP",zlot_disassem_state_segment_sap).
struct_opv(z,claz_disassem_state,slot,addr_print_len,zlot_disassem_state_addr_print_len).
struct_opv(z,claz_disassem_state,slot,alignment,zlot_disassem_state_alignment).
struct_opv(z,claz_disassem_state,slot,argument_column,zlot_disassem_state_argument_column).
struct_opv(z,claz_disassem_state,slot,byte_order,zlot_disassem_state_byte_order).
struct_opv(z,claz_disassem_state,slot,cur_labels,zlot_disassem_state_cur_labels).
struct_opv(z,claz_disassem_state,slot,cur_offs,zlot_disassem_state_cur_offs).
struct_opv(z,claz_disassem_state,slot,cur_offs_hooks,zlot_disassem_state_cur_offs_hooks).
struct_opv(z,claz_disassem_state,slot,current_valid_locations,zlot_disassem_state_current_valid_locations).
struct_opv(z,claz_disassem_state,slot,filtered_values,zlot_disassem_state_filtered_values).
struct_opv(z,claz_disassem_state,slot,fun_hooks,zlot_disassem_state_fun_hooks).
struct_opv(z,claz_disassem_state,slot,inst_properties,zlot_disassem_state_inst_properties).
struct_opv(z,claz_disassem_state,slot,label_hash,zlot_disassem_state_label_hash).
struct_opv(z,claz_disassem_state,slot,labels,zlot_disassem_state_labels).
struct_opv(z,claz_disassem_state,slot,next_offs,zlot_disassem_state_next_offs).
struct_opv(z,claz_disassem_state,slot,notes,zlot_disassem_state_notes).
struct_opv(z,claz_disassem_state,slot,output_state,zlot_disassem_state_output_state).
struct_opv(z,claz_disassem_state,slot,properties,zlot_disassem_state_properties).
struct_opv(z,claz_disassem_state,slot,segment,zlot_disassem_state_segment).
struct_opv(z,claz_disassem_state,slot,segment_sap,zlot_disassem_state_segment_sap).
struct_opv(z,claz_disassem_state,subtypep,claz_structure_object).
struct_opv(z,claz_disassem_state,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_dispatch,classname,"DISPATCH").
struct_opv(z,claz_dispatch,classof,claz_built_in_class).
struct_opv(z,claz_dispatch,subtypep,claz_dfun_info).
struct_opv(z,claz_dispatch,super_priority,[claz_dfun_info,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_dispatch_macro_function,classname,"DISPATCH-MACRO-FUNCTION").
struct_opv(z,claz_dispatch_macro_function,classof,claz_built_in_class).
struct_opv(z,claz_dispatch_macro_function,subtypep,claz_function).
struct_opv(z,claz_division_by_zero,classname,"DIVISION-BY-ZERO").
struct_opv(z,claz_division_by_zero,classof,claz_built_in_class).
struct_opv(z,claz_double,classname,"DOUBLE").
struct_opv(z,claz_double,classof,claz_built_in_class).
struct_opv(z,claz_dubious_asterisks_around_variable_name,classname,"DUBIOUS-ASTERISKS-AROUND-VARIABLE-NAME").
struct_opv(z,claz_dubious_asterisks_around_variable_name,classof,claz_built_in_class).
struct_opv(e,claz_duplicate_definition,classname,"DUPLICATE-DEFINITION").
struct_opv(e,claz_duplicate_definition,classof,claz_built_in_class).
struct_opv(e,claz_duplicate_definition,name,"NAME",zlot_duplicate_definition_name).
struct_opv(e,claz_duplicate_definition,slot,name,zlot_duplicate_definition_name).
struct_opv(z,claz_ea,classname,"EA").
struct_opv(z,claz_ea,classof,claz_built_in_class).
struct_opv(z,claz_ea,name,"BASE",zlot_ea_base).
struct_opv(z,claz_ea,name,"DISP",zlot_ea_disp).
struct_opv(z,claz_ea,name,"INDEX",zlot_ea_index).
struct_opv(z,claz_ea,name,"SCALE",zlot_ea_scale).
struct_opv(z,claz_ea,name,"SIZE",zlot_ea_size).
struct_opv(z,claz_ea,slot,base,zlot_ea_base).
struct_opv(z,claz_ea,slot,disp,zlot_ea_disp).
struct_opv(z,claz_ea,slot,index,zlot_ea_index).
struct_opv(z,claz_ea,slot,scale,zlot_ea_scale).
struct_opv(z,claz_ea,slot,size,zlot_ea_size).
struct_opv(z,claz_ea,subtypep,claz_structure_object).
struct_opv(z,claz_ea,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(c,claz_effective_slot_definition,classname,"EFFECTIVE-SLOT-DEFINITION").
struct_opv(c,claz_effective_slot_definition,classof,claz_built_in_class).
struct_opv(c,claz_effective_slot_definition,name,"ACCESSOR-FLAGS",zlot_effective_slot_definition_accessor_flags).
struct_opv(c,claz_effective_slot_definition,name,"EFM-SBUC",zlot_effective_slot_definition_efm_sbuc).
struct_opv(c,claz_effective_slot_definition,name,"EFM-SMUC",zlot_effective_slot_definition_efm_smuc).
struct_opv(c,claz_effective_slot_definition,name,"EFM-SSVUC",zlot_effective_slot_definition_efm_ssvuc).
struct_opv(c,claz_effective_slot_definition,name,"EFM-SVUC",zlot_effective_slot_definition_efm_svuc).
struct_opv(c,claz_effective_slot_definition,name,"INFO",zlot_effective_slot_definition_info).
struct_opv(c,claz_effective_slot_definition,name,"LOCATION",zlot_effective_slot_definition_location).
struct_opv(c,claz_effective_slot_definition,slot,accessor_flags,zlot_effective_slot_definition_accessor_flags).
struct_opv(c,claz_effective_slot_definition,slot,efm_sbuc,zlot_effective_slot_definition_efm_sbuc).
struct_opv(c,claz_effective_slot_definition,slot,efm_smuc,zlot_effective_slot_definition_efm_smuc).
struct_opv(c,claz_effective_slot_definition,slot,efm_ssvuc,zlot_effective_slot_definition_efm_ssvuc).
struct_opv(c,claz_effective_slot_definition,slot,efm_svuc,zlot_effective_slot_definition_efm_svuc).
struct_opv(c,claz_effective_slot_definition,slot,info,zlot_effective_slot_definition_info).
struct_opv(c,claz_effective_slot_definition,slot,location,zlot_effective_slot_definition_location).
struct_opv(c,claz_effective_slot_definition,subtypep,claz_slot_definition).
struct_opv(c,claz_effective_slot_definition,super_priority,[claz_slot_definition,claz_metaobject,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(c,claz_effective_slot_definition,super_priority,[claz_slot_definition,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(z,claz_emf_cache,classname,"EMF-CACHE").
struct_opv(z,claz_emf_cache,classof,claz_built_in_class).
struct_opv(z,claz_emf_cache,name,"CACHE",zlot_emf_cache_cache).
struct_opv(z,claz_emf_cache,name,"EQL-SPECIALIZATIONS",zlot_emf_cache_eql_specializations).
struct_opv(z,claz_emf_cache,returns,claz_hash_table(claz_emf_cache_cache_entry,claz_t),zlot_emf_cache_cache).
struct_opv(z,claz_emf_cache,returns,claz_index_of(claz_emf_cache_eql_specialization),zlot_emf_cache_eql_specializations).
struct_opv(z,claz_emf_cache,slot,cache,zlot_emf_cache_cache).
struct_opv(z,claz_emf_cache,slot,eql_specializations,zlot_emf_cache_eql_specializations).
struct_opv(z,claz_emf_cache,subtypep,claz_t).
struct_opv(z,claz_emf_cache_cache_entry,classname,"EMF-CACHE-CACHE-ENTRY").
struct_opv(z,claz_emf_cache_cache_entry,classof,claz_built_in_class).
struct_opv(z,claz_emf_cache_cache_entry,name,"ARRAY",zlot_emf_cache_cache_entry_array).
struct_opv(z,claz_emf_cache_cache_entry,readonly,t,zlot_emf_cache_cache_entry_array).
struct_opv(z,claz_emf_cache_cache_entry,returns,claz_list,zlot_emf_cache_cache_entry_array).
struct_opv(z,claz_emf_cache_cache_entry,slot,array,zlot_emf_cache_cache_entry_array).
struct_opv(z,claz_emf_cache_eql_specialization,classname,"EMF-CACHE-EQL-SPECIALIZATION").
struct_opv(z,claz_emf_cache_eql_specialization,classof,claz_built_in_class).
struct_opv(z,claz_emf_cache_eql_specialization,name,"EQL-TO",zlot_emf_cache_eql_specialization_eql_to).
struct_opv(z,claz_emf_cache_eql_specialization,returns,claz_t,zlot_emf_cache_eql_specialization_eql_to).
struct_opv(z,claz_emf_cache_eql_specialization,slot,eql_to,zlot_emf_cache_eql_specialization_eql_to).
struct_opv(z,claz_encapsulation_info,classname,"ENCAPSULATION-INFO").
struct_opv(z,claz_encapsulation_info,classof,claz_built_in_class).
struct_opv(z,claz_encapsulation_info,name,"DEFINITION",zlot_encapsulation_info_definition).
struct_opv(z,claz_encapsulation_info,name,"TYPE",zlot_encapsulation_info_type).
struct_opv(z,claz_encapsulation_info,slot,definition,zlot_encapsulation_info_definition).
struct_opv(z,claz_encapsulation_info,slot,type,zlot_encapsulation_info_type).
struct_opv(z,claz_encapsulation_info,subtypep,claz_structure_object).
struct_opv(z,claz_encapsulation_info,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_end_of_file,classname,"END-OF-FILE").
struct_opv(z,claz_end_of_file,classof,claz_built_in_class).
struct_opv(z,claz_end_of_input_in_character,classname,"END-OF-INPUT-IN-CHARACTER").
struct_opv(z,claz_end_of_input_in_character,classof,claz_built_in_class).
struct_opv(z,claz_entry,classname,"ENTRY").
struct_opv(z,claz_entry,classof,claz_built_in_class).
struct_opv(z,claz_entry,name,"CLEANUP",zlot_entry_cleanup).
struct_opv(z,claz_entry,name,"EXITS",zlot_entry_exits).
struct_opv(z,claz_entry,slot,cleanup,zlot_entry_cleanup).
struct_opv(z,claz_entry,slot,exits,zlot_entry_exits).
struct_opv(z,claz_entry,subtypep,claz_node).
struct_opv(z,claz_entry,super_priority,[claz_node,claz_sset_element,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_entry_info,classname,"ENTRY-INFO").
struct_opv(z,claz_entry_info,classof,claz_built_in_class).
struct_opv(z,claz_entry_info,name,"ARGUMENTS",zlot_entry_info_arguments).
struct_opv(z,claz_entry_info,name,"CLOSURE-TN",zlot_entry_info_closure_tn).
struct_opv(z,claz_entry_info,name,"INFO",zlot_entry_info_info).
struct_opv(z,claz_entry_info,name,"NAME",zlot_entry_info_name).
struct_opv(z,claz_entry_info,name,"OFFSET",zlot_entry_info_offset).
struct_opv(z,claz_entry_info,name,"TYPE",zlot_entry_info_type).
struct_opv(z,claz_entry_info,slot,arguments,zlot_entry_info_arguments).
struct_opv(z,claz_entry_info,slot,closure_tn,zlot_entry_info_closure_tn).
struct_opv(z,claz_entry_info,slot,info,zlot_entry_info_info).
struct_opv(z,claz_entry_info,slot,name,zlot_entry_info_name).
struct_opv(z,claz_entry_info,slot,offset,zlot_entry_info_offset).
struct_opv(z,claz_entry_info,slot,type,zlot_entry_info_type).
struct_opv(z,claz_entry_info,subtypep,claz_structure_object).
struct_opv(z,claz_entry_info,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(o,claz_env,classname,"ENV").
struct_opv(o,claz_env,classname,"ENVIRONMENT").
struct_opv(o,claz_env,classof,claz_built_in_class).
struct_opv(o,claz_env,name,"BLOCKS",zlot_env_blocks).
struct_opv(o,claz_env,name,"DECLARATIONS",zlot_env_declarations).
struct_opv(o,claz_env,name,"EXPANDERS",zlot_env_expanders).
struct_opv(o,claz_env,name,"FUNS",zlot_env_funs).
struct_opv(o,claz_env,name,"INACTIVE",zlot_env_inactive).
struct_opv(o,claz_env,name,"LAST-FUNCTION-BINDING",zlot_env_last_function_binding).
struct_opv(o,claz_env,name,"NATIVE-LEXENV",zlot_env_native_lexenv).
struct_opv(o,claz_env,name,"PARENT",zlot_env_parent).
struct_opv(o,claz_env,name,"SYMBOL-EXPANSIONS",zlot_env_symbol_expansions).
struct_opv(o,claz_env,name,"TAGS",zlot_env_tags).
struct_opv(o,claz_env,name,"VARS",zlot_env_vars).
struct_opv(o,claz_env,returns,claz_binding,zlot_env_blocks).
struct_opv(o,claz_env,returns,claz_binding,zlot_env_tags).
struct_opv(o,claz_env,returns,claz_binding,zlot_env_vars).
struct_opv(o,claz_env,returns,claz_boolean,zlot_env_inactive).
struct_opv(o,claz_env,returns,claz_function_binding,zlot_env_last_function_binding).
struct_opv(o,claz_env,slot,blocks,zlot_env_blocks).
struct_opv(o,claz_env,slot,declarations,zlot_env_declarations).
struct_opv(o,claz_env,slot,expanders,zlot_env_expanders).
struct_opv(o,claz_env,slot,funs,zlot_env_funs).
struct_opv(o,claz_env,slot,inactive,zlot_env_inactive).
struct_opv(o,claz_env,slot,last_function_binding,zlot_env_last_function_binding).
struct_opv(o,claz_env,slot,native_lexenv,zlot_env_native_lexenv).
struct_opv(o,claz_env,slot,parent,zlot_env_parent).
struct_opv(o,claz_env,slot,symbol_expansions,zlot_env_symbol_expansions).
struct_opv(o,claz_env,slot,tags,zlot_env_tags).
struct_opv(o,claz_env,slot,vars,zlot_env_vars).
struct_opv(o,claz_env,subtypep,claz_structure_object).
struct_opv(o,claz_env,subtypep,claz_t).
struct_opv(o,claz_env,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_eql_specializer,classname,"EQL-SPECIALIZER").
struct_opv(z,claz_eql_specializer,classof,claz_built_in_class).
struct_opv(z,claz_eql_specializer,name,"DIRECT-METHODS",zlot_eql_specializer_direct_methods).
struct_opv(z,claz_eql_specializer,name,"OBJECT",zlot_eql_specializer_object).
struct_opv(z,claz_eql_specializer,name,"SINGLETON",zlot_eql_specializer_singleton).
struct_opv(z,claz_eql_specializer,slot,direct_methods,zlot_eql_specializer_direct_methods).
struct_opv(z,claz_eql_specializer,slot,object,zlot_eql_specializer_object).
struct_opv(z,claz_eql_specializer,slot,singleton,zlot_eql_specializer_singleton).
struct_opv(z,claz_eql_specializer,subtypep,claz_exact_class_specializer).
struct_opv(z,claz_eql_specializer,subtypep,claz_specializer).
struct_opv(z,claz_eql_specializer,subtypep,claz_specializer_with_object).
struct_opv(z,claz_eql_specializer,subtypep,claz_standard_specializer).
struct_opv(z,claz_eql_specializer,super_priority,[claz_specializer,claz_standard_stablehash,claz_metaobject,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(z,claz_eql_specializer,super_priority,[claz_standard_specializer,claz_exact_class_specializer,claz_specializer_with_object,claz_specializer,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(z,claz_event_info,classname,"EVENT-INFO").
struct_opv(z,claz_event_info,classof,claz_built_in_class).
struct_opv(z,claz_event_info,name,"ACTION",zlot_event_info_action).
struct_opv(z,claz_event_info,name,"COUNT",zlot_event_info_count).
struct_opv(z,claz_event_info,name,"DESCRIPTION",zlot_event_info_description).
struct_opv(z,claz_event_info,name,"LEVEL",zlot_event_info_level).
struct_opv(z,claz_event_info,name,"NAME",zlot_event_info_name).
struct_opv(z,claz_event_info,name,"VAR",zlot_event_info_var).
struct_opv(z,claz_event_info,slot,action,zlot_event_info_action).
struct_opv(z,claz_event_info,slot,count,zlot_event_info_count).
struct_opv(z,claz_event_info,slot,description,zlot_event_info_description).
struct_opv(z,claz_event_info,slot,level,zlot_event_info_level).
struct_opv(z,claz_event_info,slot,name,zlot_event_info_name).
struct_opv(z,claz_event_info,slot,var,zlot_event_info_var).
struct_opv(z,claz_event_info,subtypep,claz_structure_object).
struct_opv(z,claz_event_info,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_exact_class_specializer,classname,"EXACT-CLASS-SPECIALIZER").
struct_opv(z,claz_exact_class_specializer,classof,claz_built_in_class).
struct_opv(z,claz_exact_class_specializer,subtypep,claz_specializer).
struct_opv(z,claz_exact_class_specializer,super_priority,[claz_specializer,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(z,claz_exit,classname,"EXIT").
struct_opv(z,claz_exit,classof,claz_built_in_class).
struct_opv(z,claz_exit,name,"ENTRY",zlot_exit_entry).
struct_opv(z,claz_exit,name,"NLX-INFO",zlot_exit_nlx_info).
struct_opv(z,claz_exit,name,"VALUE",zlot_exit_value).
struct_opv(z,claz_exit,slot,entry,zlot_exit_entry).
struct_opv(z,claz_exit,slot,nlx_info,zlot_exit_nlx_info).
struct_opv(z,claz_exit,slot,value,zlot_exit_value).
struct_opv(z,claz_exit,subtypep,claz_valued_node).
struct_opv(z,claz_exit,super_priority,[claz_valued_node,claz_node,claz_sset_element,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_extension_failure,classname,"EXTENSION-FAILURE").
struct_opv(z,claz_extension_failure,classof,claz_built_in_class).
struct_opv(z,claz_external_format,classname,"EXTERNAL-FORMAT").
struct_opv(z,claz_external_format,classof,claz_built_in_class).
struct_opv(z,claz_external_format,name,"BYTES-FOR-CHAR-FUN",zlot_external_format_bytes_for_char_fun).
struct_opv(z,claz_external_format,name,"DEFAULT-REPLACEMENT-CHARACTER",zlot_external_format_default_replacement_character).
struct_opv(z,claz_external_format,name,"NAMES",zlot_external_format_names).
struct_opv(z,claz_external_format,name,"OCTETS-TO-STRING-FUN",zlot_external_format_octets_to_string_fun).
struct_opv(z,claz_external_format,name,"READ-C-STRING-FUN",zlot_external_format_read_c_string_fun).
struct_opv(z,claz_external_format,name,"READ-CHAR-FUN",zlot_external_format_read_char_fun).
struct_opv(z,claz_external_format,name,"READ-N-CHARS-FUN",zlot_external_format_read_n_chars_fun).
struct_opv(z,claz_external_format,name,"RESYNC-FUN",zlot_external_format_resync_fun).
struct_opv(z,claz_external_format,name,"STRING-TO-OCTETS-FUN",zlot_external_format_string_to_octets_fun).
struct_opv(z,claz_external_format,name,"WRITE-C-STRING-FUN",zlot_external_format_write_c_string_fun).
struct_opv(z,claz_external_format,name,"WRITE-CHAR-FULL-BUFFERED-FUN",zlot_external_format_write_char_full_buffered_fun).
struct_opv(z,claz_external_format,name,"WRITE-CHAR-LINE-BUFFERED-FUN",zlot_external_format_write_char_line_buffered_fun).
struct_opv(z,claz_external_format,name,"WRITE-CHAR-NONE-BUFFERED-FUN",zlot_external_format_write_char_none_buffered_fun).
struct_opv(z,claz_external_format,name,"WRITE-N-BYTES-FUN",zlot_external_format_write_n_bytes_fun).
struct_opv(z,claz_external_format,slot,bytes_for_char_fun,zlot_external_format_bytes_for_char_fun).
struct_opv(z,claz_external_format,slot,default_replacement_character,zlot_external_format_default_replacement_character).
struct_opv(z,claz_external_format,slot,names,zlot_external_format_names).
struct_opv(z,claz_external_format,slot,octets_to_string_fun,zlot_external_format_octets_to_string_fun).
struct_opv(z,claz_external_format,slot,read_c_string_fun,zlot_external_format_read_c_string_fun).
struct_opv(z,claz_external_format,slot,read_char_fun,zlot_external_format_read_char_fun).
struct_opv(z,claz_external_format,slot,read_n_chars_fun,zlot_external_format_read_n_chars_fun).
struct_opv(z,claz_external_format,slot,resync_fun,zlot_external_format_resync_fun).
struct_opv(z,claz_external_format,slot,string_to_octets_fun,zlot_external_format_string_to_octets_fun).
struct_opv(z,claz_external_format,slot,write_c_string_fun,zlot_external_format_write_c_string_fun).
struct_opv(z,claz_external_format,slot,write_char_full_buffered_fun,zlot_external_format_write_char_full_buffered_fun).
struct_opv(z,claz_external_format,slot,write_char_line_buffered_fun,zlot_external_format_write_char_line_buffered_fun).
struct_opv(z,claz_external_format,slot,write_char_none_buffered_fun,zlot_external_format_write_char_none_buffered_fun).
struct_opv(z,claz_external_format,slot,write_n_bytes_fun,zlot_external_format_write_n_bytes_fun).
struct_opv(z,claz_external_format,subtypep,claz_structure_object).
struct_opv(z,claz_external_format,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_fasl_class_loader,classname,"FASL-CLASS-LOADER").
struct_opv(z,claz_fasl_class_loader,classof,claz_built_in_class).
struct_opv(z,claz_fasl_class_loader,name,"BASE-NAME",zlot_fasl_class_loader_base_name).
struct_opv(z,claz_fasl_class_loader,name,"BOXED-THIS",zlot_fasl_class_loader_boxed_this).
struct_opv(z,claz_fasl_class_loader,readonly,t,zlot_fasl_class_loader_base_name).
struct_opv(z,claz_fasl_class_loader,readonly,t,zlot_fasl_class_loader_boxed_this).
struct_opv(z,claz_fasl_class_loader,returns,claz_ffi_object,zlot_fasl_class_loader_boxed_this).
struct_opv(z,claz_fasl_class_loader,returns,claz_string,zlot_fasl_class_loader_base_name).
struct_opv(z,claz_fasl_class_loader,slot,base_name,zlot_fasl_class_loader_base_name).
struct_opv(z,claz_fasl_class_loader,slot,boxed_this,zlot_fasl_class_loader_boxed_this).
struct_opv(z,claz_fasl_class_loader,subtypep,claz_ffi_class_loader).
struct_opv(z,claz_fasl_header_missing,classname,"FASL-HEADER-MISSING").
struct_opv(z,claz_fasl_header_missing,classof,claz_built_in_class).
struct_opv(z,claz_fasl_header_missing,name,"FHSSS",zlot_fasl_header_missing_fhsss).
struct_opv(z,claz_fasl_header_missing,slot,fhsss,zlot_fasl_header_missing_fhsss).
struct_opv(z,claz_fasl_header_missing,subtypep,claz_invalid_fasl).
struct_opv(z,claz_fasl_input,classname,"FASL-INPUT").
struct_opv(z,claz_fasl_input,classof,claz_built_in_class).
struct_opv(z,claz_fasl_input,name,"DEPRECATED-STUFF",zlot_fasl_input_deprecated_stuff).
struct_opv(z,claz_fasl_input,name,"SKIP-UNTIL",zlot_fasl_input_skip_until).
struct_opv(z,claz_fasl_input,name,"STACK",zlot_fasl_input_stack).
struct_opv(z,claz_fasl_input,name,"STREAM",zlot_fasl_input_stream).
struct_opv(z,claz_fasl_input,name,"TABLE",zlot_fasl_input_table).
struct_opv(z,claz_fasl_input,slot,deprecated_stuff,zlot_fasl_input_deprecated_stuff).
struct_opv(z,claz_fasl_input,slot,skip_until,zlot_fasl_input_skip_until).
struct_opv(z,claz_fasl_input,slot,stack,zlot_fasl_input_stack).
struct_opv(z,claz_fasl_input,slot,stream,zlot_fasl_input_stream).
struct_opv(z,claz_fasl_input,slot,table,zlot_fasl_input_table).
struct_opv(z,claz_fasl_input,subtypep,claz_structure_object).
struct_opv(z,claz_fasl_input,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_fasl_output,classname,"FASL-OUTPUT").
struct_opv(z,claz_fasl_output,classof,claz_built_in_class).
struct_opv(z,claz_fasl_output,name,"CIRCULARITY-TABLE",zlot_fasl_output_circularity_table).
struct_opv(z,claz_fasl_output,name,"DEBUG-INFO",zlot_fasl_output_debug_info).
struct_opv(z,claz_fasl_output,name,"ENTRY-TABLE",zlot_fasl_output_entry_table).
struct_opv(z,claz_fasl_output,name,"EQ-TABLE",zlot_fasl_output_eq_table).
struct_opv(z,claz_fasl_output,name,"EQUAL-TABLE",zlot_fasl_output_equal_table).
struct_opv(z,claz_fasl_output,name,"PACKAGES",zlot_fasl_output_packages).
struct_opv(z,claz_fasl_output,name,"PATCH-TABLE",zlot_fasl_output_patch_table).
struct_opv(z,claz_fasl_output,name,"STREAM",zlot_fasl_output_stream).
struct_opv(z,claz_fasl_output,name,"STRING-C61-TABLE",zlot_fasl_output_string_c61_table).
struct_opv(z,claz_fasl_output,name,"TABLE-FREE",zlot_fasl_output_table_free).
struct_opv(z,claz_fasl_output,name,"VALID-STRUCTURES",zlot_fasl_output_valid_structures).
struct_opv(z,claz_fasl_output,slot,circularity_table,zlot_fasl_output_circularity_table).
struct_opv(z,claz_fasl_output,slot,debug_info,zlot_fasl_output_debug_info).
struct_opv(z,claz_fasl_output,slot,entry_table,zlot_fasl_output_entry_table).
struct_opv(z,claz_fasl_output,slot,eq_table,zlot_fasl_output_eq_table).
struct_opv(z,claz_fasl_output,slot,equal_table,zlot_fasl_output_equal_table).
struct_opv(z,claz_fasl_output,slot,packages,zlot_fasl_output_packages).
struct_opv(z,claz_fasl_output,slot,patch_table,zlot_fasl_output_patch_table).
struct_opv(z,claz_fasl_output,slot,stream,zlot_fasl_output_stream).
struct_opv(z,claz_fasl_output,slot,string_c61_table,zlot_fasl_output_string_c61_table).
struct_opv(z,claz_fasl_output,slot,table_free,zlot_fasl_output_table_free).
struct_opv(z,claz_fasl_output,slot,valid_structures,zlot_fasl_output_valid_structures).
struct_opv(z,claz_fasl_output,subtypep,claz_structure_object).
struct_opv(z,claz_fasl_output,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_fasl_readtable,classname,"FASL-READTABLE").
struct_opv(z,claz_fasl_readtable,classof,claz_built_in_class).
struct_opv(z,claz_fasl_readtable,subtypep,claz_readtable).
struct_opv(z,claz_fast_instance_boundp,classname,"FAST-INSTANCE-BOUNDP").
struct_opv(z,claz_fast_instance_boundp,classof,claz_built_in_class).
struct_opv(z,claz_fast_instance_boundp,name,"INDEX",zlot_fast_instance_boundp_index).
struct_opv(z,claz_fast_instance_boundp,slot,index,zlot_fast_instance_boundp_index).
struct_opv(z,claz_fast_instance_boundp,subtypep,claz_structure_object).
struct_opv(z,claz_fast_instance_boundp,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_fast_method_call,classname,"FAST-METHOD-CALL").
struct_opv(z,claz_fast_method_call,classof,claz_built_in_class).
struct_opv(z,claz_fast_method_call,name,"ARG-INFO",zlot_fast_method_call_arg_info).
struct_opv(z,claz_fast_method_call,name,"FUNCTION",zlot_fast_method_call_function).
struct_opv(z,claz_fast_method_call,name,"NEXT-METHOD-CALL",zlot_fast_method_call_next_method_call).
struct_opv(z,claz_fast_method_call,name,"PV",zlot_fast_method_call_pv).
struct_opv(z,claz_fast_method_call,slot,arg_info,zlot_fast_method_call_arg_info).
struct_opv(z,claz_fast_method_call,slot,function,zlot_fast_method_call_function).
struct_opv(z,claz_fast_method_call,slot,next_method_call,zlot_fast_method_call_next_method_call).
struct_opv(z,claz_fast_method_call,slot,pv,zlot_fast_method_call_pv).
struct_opv(z,claz_fast_method_call,subtypep,claz_structure_object).
struct_opv(z,claz_fast_method_call,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_fdefn,classname,"FDEFN").
struct_opv(z,claz_fdefn,classof,claz_built_in_class).
struct_opv(z,claz_fdefn,subtypep,claz_t).
struct_opv(z,claz_fdefn,super_priority,[claz_t]).
struct_opv(z,claz_ffi_class_loader,classname,"FFI-CLASS-LOADER").
struct_opv(z,claz_ffi_class_loader,classof,claz_built_in_class).
struct_opv(z,claz_ffi_class_loader,subtypep,claz_prolog_url_class_loader).
struct_opv(z,claz_ffi_class_loader_pf_get_default_classloader,classname,"FFI-CLASS-LOADER-PF-GET-DEFAULT-CLASSLOADER").
struct_opv(z,claz_ffi_class_loader_pf_get_default_classloader,classof,claz_built_in_class).
struct_opv(z,claz_ffi_class_loader_pf_get_default_classloader,name,"DEFAULT-CLASS-LOADER",zlot_ffi_class_loader_pf_get_default_classloader_default_class_loader).
struct_opv(z,claz_ffi_class_loader_pf_get_default_classloader,readonly,t,zlot_ffi_class_loader_pf_get_default_classloader_default_class_loader).
struct_opv(z,claz_ffi_class_loader_pf_get_default_classloader,returns,claz_t,zlot_ffi_class_loader_pf_get_default_classloader_default_class_loader).
struct_opv(z,claz_ffi_class_loader_pf_get_default_classloader,slot,default_class_loader,zlot_ffi_class_loader_pf_get_default_classloader_default_class_loader).
struct_opv(z,claz_ffi_exception,classname,"FFI-EXCEPTION").
struct_opv(z,claz_ffi_exception,classof,claz_built_in_class).
struct_opv(z,claz_ffi_exception,name,"THROWABLE",zlot_ffi_exception_throwable).
struct_opv(z,claz_ffi_exception,readonly,t,zlot_ffi_exception_throwable).
struct_opv(z,claz_ffi_exception,returns,claz_prolog_throwable,zlot_ffi_exception_throwable).
struct_opv(z,claz_ffi_exception,slot,throwable,zlot_ffi_exception_throwable).
struct_opv(z,claz_ffi_module,classname,"FFI-MODULE").
struct_opv(z,claz_ffi_module,classof,claz_built_in_class).
struct_opv(z,claz_ffi_module,name,"C-NAME",zlot_ffi_module_c_name).
struct_opv(z,claz_ffi_module,name,"CONSTANT-TABLE",zlot_ffi_module_constant_table).
struct_opv(z,claz_ffi_module,name,"FINI",zlot_ffi_module_fini).
struct_opv(z,claz_ffi_module,name,"FUNCTION-LIST",zlot_ffi_module_function_list).
struct_opv(z,claz_ffi_module,name,"INIT-ALWAYS",zlot_ffi_module_init_always).
struct_opv(z,claz_ffi_module,name,"INIT-ONCE",zlot_ffi_module_init_once).
struct_opv(z,claz_ffi_module,name,"NAME",zlot_ffi_module_name).
struct_opv(z,claz_ffi_module,name,"OBJECT-TABLE",zlot_ffi_module_object_table).
struct_opv(z,claz_ffi_module,name,"TYPE-TABLE",zlot_ffi_module_type_table).
struct_opv(z,claz_ffi_module,name,"VARIABLE-LIST",zlot_ffi_module_variable_list).
struct_opv(z,claz_ffi_module,slot,c_name,zlot_ffi_module_c_name).
struct_opv(z,claz_ffi_module,slot,constant_table,zlot_ffi_module_constant_table).
struct_opv(z,claz_ffi_module,slot,fini,zlot_ffi_module_fini).
struct_opv(z,claz_ffi_module,slot,function_list,zlot_ffi_module_function_list).
struct_opv(z,claz_ffi_module,slot,init_always,zlot_ffi_module_init_always).
struct_opv(z,claz_ffi_module,slot,init_once,zlot_ffi_module_init_once).
struct_opv(z,claz_ffi_module,slot,name,zlot_ffi_module_name).
struct_opv(z,claz_ffi_module,slot,object_table,zlot_ffi_module_object_table).
struct_opv(z,claz_ffi_module,slot,type_table,zlot_ffi_module_type_table).
struct_opv(z,claz_ffi_module,slot,variable_list,zlot_ffi_module_variable_list).
struct_opv(z,claz_ffi_module,subtypep,claz_structure_object).
struct_opv(z,claz_ffi_module,super_priority,[claz_structure_object,claz_t]).
struct_opv(z,claz_ffi_object,classname,"FFI-OBJECT").
struct_opv(z,claz_ffi_object,classof,claz_built_in_class).
struct_opv(z,claz_ffi_object,name,"INTENDED-CLASS",zlot_ffi_object_intended_class).
struct_opv(z,claz_ffi_object,name,"OBJ",zlot_ffi_object_obj).
struct_opv(z,claz_ffi_object,readonly,t,zlot_ffi_object_intended_class).
struct_opv(z,claz_ffi_object,readonly,t,zlot_ffi_object_obj).
struct_opv(z,claz_ffi_object,returns,claz_prolog_class,zlot_ffi_object_intended_class).
struct_opv(z,claz_ffi_object,returns,claz_prolog_object,zlot_ffi_object_obj).
struct_opv(z,claz_ffi_object,slot,intended_class,zlot_ffi_object_intended_class).
struct_opv(z,claz_ffi_object,slot,obj,zlot_ffi_object_obj).
struct_opv(z,claz_ffi_object,subtypep,claz_t).
struct_opv(z,claz_ffi_object_1,classname,"FFI-OBJECT-1").
struct_opv(z,claz_ffi_object_1,classof,claz_built_in_class).
struct_opv(z,claz_ffi_object_1,name,"THIS-0",zlot_ffi_object_1_this_0).
struct_opv(z,claz_ffi_object_1,name,"VAL-ACC",zlot_ffi_object_1_val_acc).
struct_opv(z,claz_ffi_object_1,readonly,t,zlot_ffi_object_1_this_0).
struct_opv(z,claz_ffi_object_1,readonly,t,zlot_ffi_object_1_val_acc).
struct_opv(z,claz_ffi_object_1,returns,claz_ffi_object,zlot_ffi_object_1_this_0).
struct_opv(z,claz_ffi_object_1,returns,claz_list,zlot_ffi_object_1_val_acc).
struct_opv(z,claz_ffi_object_1,slot,this_0,zlot_ffi_object_1_this_0).
struct_opv(z,claz_ffi_object_1,slot,val_acc,zlot_ffi_object_1_val_acc).
struct_opv(z,claz_ffi_object_2,classname,"FFI-OBJECT-2").
struct_opv(z,claz_ffi_object_2,classof,claz_built_in_class).
struct_opv(z,claz_ffi_object_2,name,"VAL-ACC",zlot_ffi_object_2_val_acc).
struct_opv(z,claz_ffi_object_2,name,"VAL-FN",zlot_ffi_object_2_val_fn).
struct_opv(z,claz_ffi_object_2,readonly,t,zlot_ffi_object_2_val_acc).
struct_opv(z,claz_ffi_object_2,readonly,t,zlot_ffi_object_2_val_fn).
struct_opv(z,claz_ffi_object_2,returns,claz_list,zlot_ffi_object_2_val_acc).
struct_opv(z,claz_ffi_object_2,returns,claz_t,zlot_ffi_object_2_val_fn).
struct_opv(z,claz_ffi_object_2,slot,val_acc,zlot_ffi_object_2_val_acc).
struct_opv(z,claz_ffi_object_2,slot,val_fn,zlot_ffi_object_2_val_fn).
struct_opv(z,claz_ffi_script_engine,classname,"FFI-SCRIPT-ENGINE").
struct_opv(z,claz_ffi_script_engine,classof,claz_built_in_class).
struct_opv(z,claz_ffi_script_engine,name,"COMPILE-SCRIPT",zlot_ffi_script_engine_compile_script).
struct_opv(z,claz_ffi_script_engine,name,"EVAL-COMPILED-SCRIPT",zlot_ffi_script_engine_eval_compiled_script).
struct_opv(z,claz_ffi_script_engine,name,"EVAL-FUNCTION",zlot_ffi_script_engine_eval_function).
struct_opv(z,claz_ffi_script_engine,name,"EVAL-SCRIPT",zlot_ffi_script_engine_eval_script).
struct_opv(z,claz_ffi_script_engine,name,"INTERPRETER",zlot_ffi_script_engine_interpreter).
struct_opv(z,claz_ffi_script_engine,returns,claz_function,zlot_ffi_script_engine_compile_script).
struct_opv(z,claz_ffi_script_engine,returns,claz_function,zlot_ffi_script_engine_eval_compiled_script).
struct_opv(z,claz_ffi_script_engine,returns,claz_function,zlot_ffi_script_engine_eval_function).
struct_opv(z,claz_ffi_script_engine,returns,claz_function,zlot_ffi_script_engine_eval_script).
struct_opv(z,claz_ffi_script_engine,returns,claz_interpreter,zlot_ffi_script_engine_interpreter).
struct_opv(z,claz_ffi_script_engine,slot,compile_script,zlot_ffi_script_engine_compile_script).
struct_opv(z,claz_ffi_script_engine,slot,eval_compiled_script,zlot_ffi_script_engine_eval_compiled_script).
struct_opv(z,claz_ffi_script_engine,slot,eval_function,zlot_ffi_script_engine_eval_function).
struct_opv(z,claz_ffi_script_engine,slot,eval_script,zlot_ffi_script_engine_eval_script).
struct_opv(z,claz_ffi_script_engine,slot,interpreter,zlot_ffi_script_engine_interpreter).
struct_opv(z,claz_ffi_script_engine_abobj_compiled_script,classname,"FFI-SCRIPT-ENGINE-ABOBJ-COMPILED-SCRIPT").
struct_opv(z,claz_ffi_script_engine_abobj_compiled_script,classof,claz_built_in_class).
struct_opv(z,claz_ffi_script_engine_abobj_compiled_script,name,"FUNCTION",zlot_ffi_script_engine_abobj_compiled_script_function).
struct_opv(z,claz_ffi_script_engine_abobj_compiled_script,name,"THIS-0",zlot_ffi_script_engine_abobj_compiled_script_this_0).
struct_opv(z,claz_ffi_script_engine_abobj_compiled_script,readonly,t,zlot_ffi_script_engine_abobj_compiled_script_this_0).
struct_opv(z,claz_ffi_script_engine_abobj_compiled_script,returns,claz_ffi_script_engine,zlot_ffi_script_engine_abobj_compiled_script_this_0).
struct_opv(z,claz_ffi_script_engine_abobj_compiled_script,returns,claz_t,zlot_ffi_script_engine_abobj_compiled_script_function).
struct_opv(z,claz_ffi_script_engine_abobj_compiled_script,slot,function,zlot_ffi_script_engine_abobj_compiled_script_function).
struct_opv(z,claz_ffi_script_engine_abobj_compiled_script,slot,this_0,zlot_ffi_script_engine_abobj_compiled_script_this_0).
struct_opv(z,claz_ffi_stack_frame,classname,"FFI-STACK-FRAME").
struct_opv(z,claz_ffi_stack_frame,classof,claz_built_in_class).
struct_opv(z,claz_ffi_stack_frame,name,"FFI-FRAME",zlot_ffi_stack_frame_ffi_frame).
struct_opv(z,claz_ffi_stack_frame,readonly,t,zlot_ffi_stack_frame_ffi_frame).
struct_opv(z,claz_ffi_stack_frame,returns,claz_prolog_stack_trace_element,zlot_ffi_stack_frame_ffi_frame).
struct_opv(z,claz_ffi_stack_frame,slot,ffi_frame,zlot_ffi_stack_frame_ffi_frame).
struct_opv(z,claz_ffi_stack_frame,subtypep,claz_stack_frame).
struct_opv(z,claz_fgen,classname,"FGEN").
struct_opv(z,claz_fgen,classof,claz_built_in_class).
struct_opv(z,claz_fgen,name,"GENERATOR",zlot_fgen_generator).
struct_opv(z,claz_fgen,name,"GENERATOR-LAMBDA",zlot_fgen_generator_lambda).
struct_opv(z,claz_fgen,name,"GENSYMS",zlot_fgen_gensyms).
struct_opv(z,claz_fgen,name,"SYSTEM",zlot_fgen_system).
struct_opv(z,claz_fgen,slot,generator,zlot_fgen_generator).
struct_opv(z,claz_fgen,slot,generator_lambda,zlot_fgen_generator_lambda).
struct_opv(z,claz_fgen,slot,gensyms,zlot_fgen_gensyms).
struct_opv(z,claz_fgen,slot,system,zlot_fgen_system).
struct_opv(z,claz_fgen,subtypep,claz_structure_object).
struct_opv(z,claz_fgen,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_file_info,classname,"FILE-INFO").
struct_opv(z,claz_file_info,classof,claz_built_in_class).
struct_opv(z,claz_file_info,name,"ATIME",zlot_file_info_atime).
struct_opv(z,claz_file_info,name,"ATTRIBUTES",zlot_file_info_attributes).
struct_opv(z,claz_file_info,name,"CTIME",zlot_file_info_ctime).
struct_opv(z,claz_file_info,name,"EXTERNAL-FORMAT",zlot_file_info_external_format).
struct_opv(z,claz_file_info,name,"FORMS",zlot_file_info_forms).
struct_opv(z,claz_file_info,name,"NAME",zlot_file_info_name).
struct_opv(z,claz_file_info,name,"NAME-SHORT",zlot_file_info_name_short).
struct_opv(z,claz_file_info,name,"POSITIONS",zlot_file_info_positions).
struct_opv(z,claz_file_info,name,"SIZE",zlot_file_info_size).
struct_opv(z,claz_file_info,name,"SOURCE-ROOT",zlot_file_info_source_root).
struct_opv(z,claz_file_info,name,"SUBFORMS",zlot_file_info_subforms).
struct_opv(z,claz_file_info,name,"UNTRUENAME",zlot_file_info_untruename).
struct_opv(z,claz_file_info,name,"WRITE-DATE",zlot_file_info_write_date).
struct_opv(z,claz_file_info,name,"WTIME",zlot_file_info_wtime).
struct_opv(z,claz_file_info,slot,atime,zlot_file_info_atime).
struct_opv(z,claz_file_info,slot,attributes,zlot_file_info_attributes).
struct_opv(z,claz_file_info,slot,ctime,zlot_file_info_ctime).
struct_opv(z,claz_file_info,slot,external_format,zlot_file_info_external_format).
struct_opv(z,claz_file_info,slot,forms,zlot_file_info_forms).
struct_opv(z,claz_file_info,slot,name,zlot_file_info_name).
struct_opv(z,claz_file_info,slot,name_short,zlot_file_info_name_short).
struct_opv(z,claz_file_info,slot,positions,zlot_file_info_positions).
struct_opv(z,claz_file_info,slot,size,zlot_file_info_size).
struct_opv(z,claz_file_info,slot,source_root,zlot_file_info_source_root).
struct_opv(z,claz_file_info,slot,subforms,zlot_file_info_subforms).
struct_opv(z,claz_file_info,slot,untruename,zlot_file_info_untruename).
struct_opv(z,claz_file_info,slot,write_date,zlot_file_info_write_date).
struct_opv(z,claz_file_info,slot,wtime,zlot_file_info_wtime).
struct_opv(z,claz_file_info,subtypep,claz_structure_object).
struct_opv(z,claz_file_info,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_file_info,super_priority,[claz_structure_object,claz_t]).
struct_opv(z,claz_file_stat,classname,"FILE-STAT").
struct_opv(z,claz_file_stat,classof,claz_built_in_class).
struct_opv(z,claz_file_stat,name,"ATIME",zlot_file_stat_atime).
struct_opv(z,claz_file_stat,name,"BLKSIZE",zlot_file_stat_blksize).
struct_opv(z,claz_file_stat,name,"BLOCKS",zlot_file_stat_blocks).
struct_opv(z,claz_file_stat,name,"CTIME",zlot_file_stat_ctime).
struct_opv(z,claz_file_stat,name,"DEV",zlot_file_stat_dev).
struct_opv(z,claz_file_stat,name,"FILE",zlot_file_stat_file).
struct_opv(z,claz_file_stat,name,"GID",zlot_file_stat_gid).
struct_opv(z,claz_file_stat,name,"INO",zlot_file_stat_ino).
struct_opv(z,claz_file_stat,name,"MODE",zlot_file_stat_mode).
struct_opv(z,claz_file_stat,name,"MTIME",zlot_file_stat_mtime).
struct_opv(z,claz_file_stat,name,"NLINK",zlot_file_stat_nlink).
struct_opv(z,claz_file_stat,name,"RDEV",zlot_file_stat_rdev).
struct_opv(z,claz_file_stat,name,"SIZE",zlot_file_stat_size).
struct_opv(z,claz_file_stat,name,"UID",zlot_file_stat_uid).
struct_opv(z,claz_file_stat,slot,atime,zlot_file_stat_atime).
struct_opv(z,claz_file_stat,slot,blksize,zlot_file_stat_blksize).
struct_opv(z,claz_file_stat,slot,blocks,zlot_file_stat_blocks).
struct_opv(z,claz_file_stat,slot,ctime,zlot_file_stat_ctime).
struct_opv(z,claz_file_stat,slot,dev,zlot_file_stat_dev).
struct_opv(z,claz_file_stat,slot,file,zlot_file_stat_file).
struct_opv(z,claz_file_stat,slot,gid,zlot_file_stat_gid).
struct_opv(z,claz_file_stat,slot,ino,zlot_file_stat_ino).
struct_opv(z,claz_file_stat,slot,mode,zlot_file_stat_mode).
struct_opv(z,claz_file_stat,slot,mtime,zlot_file_stat_mtime).
struct_opv(z,claz_file_stat,slot,nlink,zlot_file_stat_nlink).
struct_opv(z,claz_file_stat,slot,rdev,zlot_file_stat_rdev).
struct_opv(z,claz_file_stat,slot,size,zlot_file_stat_size).
struct_opv(z,claz_file_stat,slot,uid,zlot_file_stat_uid).
struct_opv(z,claz_file_stat,subtypep,claz_structure_object).
struct_opv(z,claz_file_stat,super_priority,[claz_structure_object,claz_t]).
struct_opv(z,claz_fill_pointer_output_stream_writer,classname,"FILL-POINTER-OUTPUT-STREAM-WRITER").
struct_opv(z,claz_fill_pointer_output_stream_writer,classof,claz_built_in_class).
struct_opv(z,claz_fill_pointer_output_stream_writer,name,"THIS-0",zlot_fill_pointer_output_stream_writer_this_0).
struct_opv(z,claz_fill_pointer_output_stream_writer,readonly,t,zlot_fill_pointer_output_stream_writer_this_0).
struct_opv(z,claz_fill_pointer_output_stream_writer,returns,claz_fill_pointer_output_stream,zlot_fill_pointer_output_stream_writer_this_0).
struct_opv(z,claz_fill_pointer_output_stream_writer,slot,this_0,zlot_fill_pointer_output_stream_writer_this_0).
struct_opv(z,claz_filler,classname,"FILLER").
struct_opv(z,claz_filler,classof,claz_built_in_class).
struct_opv(z,claz_filler,name,"BYTES",zlot_filler_bytes).
struct_opv(z,claz_filler,slot,bytes,zlot_filler_bytes).
struct_opv(z,claz_filler,subtypep,claz_annotation).
struct_opv(z,claz_filler,super_priority,[claz_annotation,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_finalizer_finalizing_weak_reference,classname,"FINALIZER-FINALIZING-WEAK-REFERENCE").
struct_opv(z,claz_finalizer_finalizing_weak_reference,classof,claz_built_in_class).
struct_opv(z,claz_finalizer_finalizing_weak_reference,name,"FINALIZERS",zlot_finalizer_finalizing_weak_reference_finalizers).
struct_opv(z,claz_finalizer_finalizing_weak_reference,returns,claz_prolog_linked_list(claz_prolog_runnable),zlot_finalizer_finalizing_weak_reference_finalizers).
struct_opv(z,claz_finalizer_finalizing_weak_reference,slot,finalizers,zlot_finalizer_finalizing_weak_reference_finalizers).
struct_opv(z,claz_find_method_length_mismatch,classname,"FIND-METHOD-LENGTH-MISMATCH").
struct_opv(z,claz_find_method_length_mismatch,classof,claz_built_in_class).
struct_opv(z,claz_finite_sb,classname,"FINITE-SB").
struct_opv(z,claz_finite_sb,classof,claz_built_in_class).
struct_opv(z,claz_finite_sb,name,"ALWAYS-LIVE",zlot_finite_sb_always_live).
struct_opv(z,claz_finite_sb,name,"ALWAYS-LIVE-COUNT",zlot_finite_sb_always_live_count).
struct_opv(z,claz_finite_sb,name,"CONFLICTS",zlot_finite_sb_conflicts).
struct_opv(z,claz_finite_sb,name,"CURRENT-SIZE",zlot_finite_sb_current_size).
struct_opv(z,claz_finite_sb,name,"LAST-BLOCK-COUNT",zlot_finite_sb_last_block_count).
struct_opv(z,claz_finite_sb,name,"LAST-OFFSET",zlot_finite_sb_last_offset).
struct_opv(z,claz_finite_sb,name,"LIVE-TNS",zlot_finite_sb_live_tns).
struct_opv(z,claz_finite_sb,name,"SIZE-ALIGNMENT",zlot_finite_sb_size_alignment).
struct_opv(z,claz_finite_sb,name,"SIZE-INCREMENT",zlot_finite_sb_size_increment).
struct_opv(z,claz_finite_sb,slot,always_live,zlot_finite_sb_always_live).
struct_opv(z,claz_finite_sb,slot,always_live_count,zlot_finite_sb_always_live_count).
struct_opv(z,claz_finite_sb,slot,conflicts,zlot_finite_sb_conflicts).
struct_opv(z,claz_finite_sb,slot,current_size,zlot_finite_sb_current_size).
struct_opv(z,claz_finite_sb,slot,last_block_count,zlot_finite_sb_last_block_count).
struct_opv(z,claz_finite_sb,slot,last_offset,zlot_finite_sb_last_offset).
struct_opv(z,claz_finite_sb,slot,live_tns,zlot_finite_sb_live_tns).
struct_opv(z,claz_finite_sb,slot,size_alignment,zlot_finite_sb_size_alignment).
struct_opv(z,claz_finite_sb,slot,size_increment,zlot_finite_sb_size_increment).
struct_opv(z,claz_finite_sb,subtypep,claz_sb).
struct_opv(z,claz_finite_sb,super_priority,[claz_sb,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_fixup,classname,"FIXUP").
struct_opv(z,claz_fixup,classof,claz_built_in_class).
struct_opv(z,claz_fixup,name,"FLAVOR",zlot_fixup_flavor).
struct_opv(z,claz_fixup,name,"NAME",zlot_fixup_name).
struct_opv(z,claz_fixup,name,"OFFSET",zlot_fixup_offset).
struct_opv(z,claz_fixup,slot,flavor,zlot_fixup_flavor).
struct_opv(z,claz_fixup,slot,name,zlot_fixup_name).
struct_opv(z,claz_fixup,slot,offset,zlot_fixup_offset).
struct_opv(z,claz_fixup,subtypep,claz_structure_object).
struct_opv(z,claz_fixup,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_fixup_note,classname,"FIXUP-NOTE").
struct_opv(z,claz_fixup_note,classof,claz_built_in_class).
struct_opv(z,claz_fixup_note,name,"FIXUP",zlot_fixup_note_fixup).
struct_opv(z,claz_fixup_note,name,"KIND",zlot_fixup_note_kind).
struct_opv(z,claz_fixup_note,name,"POSITION",zlot_fixup_note_position).
struct_opv(z,claz_fixup_note,slot,fixup,zlot_fixup_note_fixup).
struct_opv(z,claz_fixup_note,slot,kind,zlot_fixup_note_kind).
struct_opv(z,claz_fixup_note,slot,position,zlot_fixup_note_position).
struct_opv(z,claz_fixup_note,subtypep,claz_structure_object).
struct_opv(z,claz_fixup_note,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_fnode,classname,"FNODE").
struct_opv(z,claz_fnode,classof,claz_built_in_class).
struct_opv(z,claz_fnode,name,"ALLOW-OTHER-KEYS-FLAG",zlot_fnode_allow_other_keys_flag).
struct_opv(z,claz_fnode,name,"BLOCKS",zlot_fnode_blocks).
struct_opv(z,claz_fnode,name,"BLOCKS-OFFSET",zlot_fnode_blocks_offset).
struct_opv(z,claz_fnode,name,"CODE",zlot_fnode_code).
struct_opv(z,claz_fnode,name,"CONSTS",zlot_fnode_consts).
struct_opv(z,claz_fnode,name,"CONSTS-FORMS",zlot_fnode_consts_forms).
struct_opv(z,claz_fnode,name,"CONSTS-LTV-FORMS",zlot_fnode_consts_ltv_forms).
struct_opv(z,claz_fnode,name,"CONSTS-OFFSET",zlot_fnode_consts_offset).
struct_opv(z,claz_fnode,name,"DENV",zlot_fnode_denv).
struct_opv(z,claz_fnode,name,"DOCUMENTATION",zlot_fnode_documentation).
struct_opv(z,claz_fnode,name,"ENCLOSING",zlot_fnode_enclosing).
struct_opv(z,claz_fnode,name,"FAR-ASSIGNED-VARS",zlot_fnode_far_assigned_vars).
struct_opv(z,claz_fnode,name,"FAR-USED-BLOCKS",zlot_fnode_far_used_blocks).
struct_opv(z,claz_fnode,name,"FAR-USED-TAGBODYS",zlot_fnode_far_used_tagbodys).
struct_opv(z,claz_fnode,name,"FAR-USED-VARS",zlot_fnode_far_used_vars).
struct_opv(z,claz_fnode,name,"GF-P",zlot_fnode_gf_p).
struct_opv(z,claz_fnode,name,"IGNORABLE",zlot_fnode_ignorable).
struct_opv(z,claz_fnode,name,"IGNORE",zlot_fnode_ignore).
struct_opv(z,claz_fnode,name,"KEYWORD-FLAG",zlot_fnode_keyword_flag).
struct_opv(z,claz_fnode,name,"KEYWORD-OFFSET",zlot_fnode_keyword_offset).
struct_opv(z,claz_fnode,name,"KEYWORDS",zlot_fnode_keywords).
struct_opv(z,claz_fnode,name,"LAMBDA-LIST",zlot_fnode_lambda_list).
struct_opv(z,claz_fnode,name,"NAME",zlot_fnode_name).
struct_opv(z,claz_fnode,name,"OPT-NUM",zlot_fnode_opt_num).
struct_opv(z,claz_fnode,name,"REQ-NUM",zlot_fnode_req_num).
struct_opv(z,claz_fnode,name,"REST-FLAG",zlot_fnode_rest_flag).
struct_opv(z,claz_fnode,name,"TAGBODYS",zlot_fnode_tagbodys).
struct_opv(z,claz_fnode,name,"TAGBODYS-OFFSET",zlot_fnode_tagbodys_offset).
struct_opv(z,claz_fnode,name,"TAGS",zlot_fnode_tags).
struct_opv(z,claz_fnode,name,"USED",zlot_fnode_used).
struct_opv(z,claz_fnode,name,"VENVC",zlot_fnode_venvc).
struct_opv(z,claz_fnode,name,"VENVCONST",zlot_fnode_venvconst).
struct_opv(z,claz_fnode,slot,allow_other_keys_flag,zlot_fnode_allow_other_keys_flag).
struct_opv(z,claz_fnode,slot,blocks,zlot_fnode_blocks).
struct_opv(z,claz_fnode,slot,blocks_offset,zlot_fnode_blocks_offset).
struct_opv(z,claz_fnode,slot,code,zlot_fnode_code).
struct_opv(z,claz_fnode,slot,consts,zlot_fnode_consts).
struct_opv(z,claz_fnode,slot,consts_forms,zlot_fnode_consts_forms).
struct_opv(z,claz_fnode,slot,consts_ltv_forms,zlot_fnode_consts_ltv_forms).
struct_opv(z,claz_fnode,slot,consts_offset,zlot_fnode_consts_offset).
struct_opv(z,claz_fnode,slot,denv,zlot_fnode_denv).
struct_opv(z,claz_fnode,slot,documentation,zlot_fnode_documentation).
struct_opv(z,claz_fnode,slot,enclosing,zlot_fnode_enclosing).
struct_opv(z,claz_fnode,slot,far_assigned_vars,zlot_fnode_far_assigned_vars).
struct_opv(z,claz_fnode,slot,far_used_blocks,zlot_fnode_far_used_blocks).
struct_opv(z,claz_fnode,slot,far_used_tagbodys,zlot_fnode_far_used_tagbodys).
struct_opv(z,claz_fnode,slot,far_used_vars,zlot_fnode_far_used_vars).
struct_opv(z,claz_fnode,slot,gf_p,zlot_fnode_gf_p).
struct_opv(z,claz_fnode,slot,ignorable,zlot_fnode_ignorable).
struct_opv(z,claz_fnode,slot,ignore,zlot_fnode_ignore).
struct_opv(z,claz_fnode,slot,keyword_flag,zlot_fnode_keyword_flag).
struct_opv(z,claz_fnode,slot,keyword_offset,zlot_fnode_keyword_offset).
struct_opv(z,claz_fnode,slot,keywords,zlot_fnode_keywords).
struct_opv(z,claz_fnode,slot,lambda_list,zlot_fnode_lambda_list).
struct_opv(z,claz_fnode,slot,name,zlot_fnode_name).
struct_opv(z,claz_fnode,slot,opt_num,zlot_fnode_opt_num).
struct_opv(z,claz_fnode,slot,req_num,zlot_fnode_req_num).
struct_opv(z,claz_fnode,slot,rest_flag,zlot_fnode_rest_flag).
struct_opv(z,claz_fnode,slot,tagbodys,zlot_fnode_tagbodys).
struct_opv(z,claz_fnode,slot,tagbodys_offset,zlot_fnode_tagbodys_offset).
struct_opv(z,claz_fnode,slot,tags,zlot_fnode_tags).
struct_opv(z,claz_fnode,slot,used,zlot_fnode_used).
struct_opv(z,claz_fnode,slot,venvc,zlot_fnode_venvc).
struct_opv(z,claz_fnode,slot,venvconst,zlot_fnode_venvconst).
struct_opv(z,claz_fnode,subtypep,claz_structure_object).
struct_opv(z,claz_fnode,super_priority,[claz_structure_object,claz_t]).
struct_opv(z,claz_foreign_thread,classname,"FOREIGN-THREAD").
struct_opv(z,claz_foreign_thread,classof,claz_built_in_class).
struct_opv(z,claz_foreign_thread,subtypep,claz_thread).
struct_opv(z,claz_foreign_thread,super_priority,[claz_thread,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_format_args_mismatch,classname,"FORMAT-ARGS-MISMATCH").
struct_opv(z,claz_format_args_mismatch,classof,claz_built_in_class).
struct_opv(z,claz_format_directive,classname,"FORMAT-DIRECTIVE").
struct_opv(z,claz_format_directive,classof,claz_built_in_class).
struct_opv(z,claz_format_directive,name,"ATSIGNP",zlot_format_directive_atsignp).
struct_opv(z,claz_format_directive,name,"CHARACTER",zlot_format_directive_character).
struct_opv(z,claz_format_directive,name,"COLONP",zlot_format_directive_colonp).
struct_opv(z,claz_format_directive,name,"END",zlot_format_directive_end).
struct_opv(z,claz_format_directive,name,"PARAMS",zlot_format_directive_params).
struct_opv(z,claz_format_directive,name,"START",zlot_format_directive_start).
struct_opv(z,claz_format_directive,name,"STRING",zlot_format_directive_string).
struct_opv(z,claz_format_directive,slot,atsignp,zlot_format_directive_atsignp).
struct_opv(z,claz_format_directive,slot,character,zlot_format_directive_character).
struct_opv(z,claz_format_directive,slot,colonp,zlot_format_directive_colonp).
struct_opv(z,claz_format_directive,slot,end,zlot_format_directive_end).
struct_opv(z,claz_format_directive,slot,params,zlot_format_directive_params).
struct_opv(z,claz_format_directive,slot,start,zlot_format_directive_start).
struct_opv(z,claz_format_directive,slot,string,zlot_format_directive_string).
struct_opv(z,claz_format_directive,subtypep,claz_structure_object).
struct_opv(z,claz_format_directive,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_forward_referenced_class,classname,"FORWARD-REFERENCED-CLASS").
struct_opv(z,claz_forward_referenced_class,classof,claz_built_in_class).
struct_opv(z,claz_forward_referenced_class,subtypep,claz_pcl_class).
struct_opv(z,claz_forward_referenced_class,subtypep,claz_super_class).
struct_opv(z,claz_forward_referenced_class,super_priority,[claz_pcl_class,claz_class,claz_dependent_update_mixin,claz_plist_mixin,claz_definition_source_mixin,claz_standard_specializer,claz_specializer,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(z,claz_forward_referenced_class,super_priority,[claz_super_class,claz_standard_stablehash,claz_metaobject,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(z,claz_frame,classname,"FRAME").
struct_opv(z,claz_frame,classof,claz_built_in_class).
struct_opv(z,claz_frame,name,"CATCHES",zlot_frame_catches).
struct_opv(z,claz_frame,name,"CODE-LOCATION",zlot_frame_code_location).
struct_opv(z,claz_frame,name,"DEBUG-FUN",zlot_frame_debug_fun).
struct_opv(z,claz_frame,name,"DOWN",zlot_frame_down).
struct_opv(z,claz_frame,name,"NUMBER",zlot_frame_number).
struct_opv(z,claz_frame,name,"POINTER",zlot_frame_pointer).
struct_opv(z,claz_frame,name,"UP",zlot_frame_up).
struct_opv(z,claz_frame,slot,catches,zlot_frame_catches).
struct_opv(z,claz_frame,slot,code_location,zlot_frame_code_location).
struct_opv(z,claz_frame,slot,debug_fun,zlot_frame_debug_fun).
struct_opv(z,claz_frame,slot,down,zlot_frame_down).
struct_opv(z,claz_frame,slot,number,zlot_frame_number).
struct_opv(z,claz_frame,slot,pointer,zlot_frame_pointer).
struct_opv(z,claz_frame,slot,up,zlot_frame_up).
struct_opv(z,claz_frame,subtypep,claz_structure_object).
struct_opv(z,claz_frame,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_frame_fun_mismatch,classname,"FRAME-FUN-MISMATCH").
struct_opv(z,claz_frame_fun_mismatch,classof,claz_built_in_class).
struct_opv(z,claz_frame_fun_mismatch,name,"CODE-LOCATION",zlot_frame_fun_mismatch_code_location).
struct_opv(z,claz_frame_fun_mismatch,name,"FORM",zlot_frame_fun_mismatch_form).
struct_opv(z,claz_frame_fun_mismatch,name,"FRAME",zlot_frame_fun_mismatch_frame).
struct_opv(z,claz_frame_fun_mismatch,slot,code_location,zlot_frame_fun_mismatch_code_location).
struct_opv(z,claz_frame_fun_mismatch,slot,form,zlot_frame_fun_mismatch_form).
struct_opv(z,claz_frame_fun_mismatch,slot,frame,zlot_frame_fun_mismatch_frame).
struct_opv(z,claz_ftype_proclamation_mismatch,classname,"FTYPE-PROCLAMATION-MISMATCH").
struct_opv(z,claz_ftype_proclamation_mismatch,classof,claz_built_in_class).
struct_opv(z,claz_ftype_proclamation_mismatch,subtypep,claz_proclamation_mismatch).
struct_opv(z,claz_fun_cache,classname,"FUN-CACHE").
struct_opv(z,claz_fun_cache,classof,claz_built_in_class).
struct_opv(z,claz_fun_cache,name,"LABELLERS",zlot_fun_cache_labellers).
struct_opv(z,claz_fun_cache,name,"PREFILTERS",zlot_fun_cache_prefilters).
struct_opv(z,claz_fun_cache,name,"PRINTERS",zlot_fun_cache_printers).
struct_opv(z,claz_fun_cache,name,"SERIAL-NUMBER",zlot_fun_cache_serial_number).
struct_opv(z,claz_fun_cache,slot,labellers,zlot_fun_cache_labellers).
struct_opv(z,claz_fun_cache,slot,prefilters,zlot_fun_cache_prefilters).
struct_opv(z,claz_fun_cache,slot,printers,zlot_fun_cache_printers).
struct_opv(z,claz_fun_cache,slot,serial_number,zlot_fun_cache_serial_number).
struct_opv(z,claz_fun_cache,subtypep,claz_structure_object).
struct_opv(z,claz_fun_cache,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_fun_end_cookie,classname,"FUN-END-COOKIE").
struct_opv(z,claz_fun_end_cookie,classof,claz_built_in_class).
struct_opv(z,claz_fun_end_cookie,name,"BOGUS-LRA",zlot_fun_end_cookie_bogus_lra).
struct_opv(z,claz_fun_end_cookie,name,"DEBUG-FUN",zlot_fun_end_cookie_debug_fun).
struct_opv(z,claz_fun_end_cookie,slot,bogus_lra,zlot_fun_end_cookie_bogus_lra).
struct_opv(z,claz_fun_end_cookie,slot,debug_fun,zlot_fun_end_cookie_debug_fun).
struct_opv(z,claz_fun_end_cookie,subtypep,claz_structure_object).
struct_opv(z,claz_fun_end_cookie,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_fun_info,classname,"FUN-INFO").
struct_opv(z,claz_fun_info,classof,claz_built_in_class).
struct_opv(z,claz_fun_info,name,"ATTRIBUTES",zlot_fun_info_attributes).
struct_opv(z,claz_fun_info,name,"CONSTRAINT-PROPAGATE",zlot_fun_info_constraint_propagate).
struct_opv(z,claz_fun_info,name,"CONSTRAINT-PROPAGATE-IF",zlot_fun_info_constraint_propagate_if).
struct_opv(z,claz_fun_info,name,"DERIVE-TYPE",zlot_fun_info_derive_type).
struct_opv(z,claz_fun_info,name,"DESTROYED-CONSTANT-ARGS",zlot_fun_info_destroyed_constant_args).
struct_opv(z,claz_fun_info,name,"IR2-CONVERT",zlot_fun_info_ir2_convert).
struct_opv(z,claz_fun_info,name,"LTN-ANNOTATE",zlot_fun_info_ltn_annotate).
struct_opv(z,claz_fun_info,name,"OPTIMIZER",zlot_fun_info_optimizer).
struct_opv(z,claz_fun_info,name,"PREDICATE-TYPE",zlot_fun_info_predicate_type).
struct_opv(z,claz_fun_info,name,"RESULT-ARG",zlot_fun_info_result_arg).
struct_opv(z,claz_fun_info,name,"STACK-ALLOCATE-RESULT",zlot_fun_info_stack_allocate_result).
struct_opv(z,claz_fun_info,name,"TEMPLATES",zlot_fun_info_templates).
struct_opv(z,claz_fun_info,name,"TRANSFORMS",zlot_fun_info_transforms).
struct_opv(z,claz_fun_info,slot,attributes,zlot_fun_info_attributes).
struct_opv(z,claz_fun_info,slot,constraint_propagate,zlot_fun_info_constraint_propagate).
struct_opv(z,claz_fun_info,slot,constraint_propagate_if,zlot_fun_info_constraint_propagate_if).
struct_opv(z,claz_fun_info,slot,derive_type,zlot_fun_info_derive_type).
struct_opv(z,claz_fun_info,slot,destroyed_constant_args,zlot_fun_info_destroyed_constant_args).
struct_opv(z,claz_fun_info,slot,ir2_convert,zlot_fun_info_ir2_convert).
struct_opv(z,claz_fun_info,slot,ltn_annotate,zlot_fun_info_ltn_annotate).
struct_opv(z,claz_fun_info,slot,optimizer,zlot_fun_info_optimizer).
struct_opv(z,claz_fun_info,slot,predicate_type,zlot_fun_info_predicate_type).
struct_opv(z,claz_fun_info,slot,result_arg,zlot_fun_info_result_arg).
struct_opv(z,claz_fun_info,slot,stack_allocate_result,zlot_fun_info_stack_allocate_result).
struct_opv(z,claz_fun_info,slot,templates,zlot_fun_info_templates).
struct_opv(z,claz_fun_info,slot,transforms,zlot_fun_info_transforms).
struct_opv(z,claz_fun_info,subtypep,claz_structure_object).
struct_opv(z,claz_fun_info,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_fun_type,classname,"FUN-TYPE").
struct_opv(z,claz_fun_type,classof,claz_built_in_class).
struct_opv(z,claz_fun_type,name,"CLASS-INFO",zlot_fun_type_class_info).
struct_opv(z,claz_fun_type,name,"RETURNS",zlot_fun_type_returns).
struct_opv(z,claz_fun_type,name,"WILD-ARGS",zlot_fun_type_wild_args).
struct_opv(z,claz_fun_type,slot,class_info,zlot_fun_type_class_info).
struct_opv(z,claz_fun_type,slot,returns,zlot_fun_type_returns).
struct_opv(z,claz_fun_type,slot,wild_args,zlot_fun_type_wild_args).
struct_opv(z,claz_fun_type,subtypep,claz_args_type).
struct_opv(z,claz_fun_type,super_priority,[claz_args_type,claz_ctype,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_funcallable_standard_class,classname,"FUNCALLABLE-STANDARD-CLASS").
struct_opv(z,claz_funcallable_standard_class,classof,claz_built_in_class).
struct_opv(z,claz_funcallable_standard_class,subtypep,claz_semi_standard_class).
struct_opv(z,claz_funcallable_standard_class,subtypep,claz_standard_class).
struct_opv(z,claz_funcallable_standard_class,subtypep,claz_std_class).
struct_opv(z,claz_funcallable_standard_class,super_priority,[claz_semi_standard_class,claz_slotted_class,claz_class,claz_potential_class,claz_specializer,claz_super_class,claz_standard_stablehash,claz_metaobject,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(z,claz_funcallable_standard_class,super_priority,[claz_std_class,claz_slot_class,claz_pcl_class,claz_class,claz_dependent_update_mixin,claz_plist_mixin,claz_definition_source_mixin,claz_standard_specializer,claz_specializer,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(z,claz_funcallable_standard_object,classname,"FUNCALLABLE-STANDARD-OBJECT").
struct_opv(z,claz_funcallable_standard_object,classof,claz_built_in_class).
struct_opv(z,claz_funcallable_standard_object,name,"CACHE",zlot_funcallable_standard_object_cache).
struct_opv(z,claz_funcallable_standard_object,name,"CALL-COUNT",zlot_funcallable_standard_object_call_count).
struct_opv(z,claz_funcallable_standard_object,name,"FUNCTION",zlot_funcallable_standard_object_function).
struct_opv(z,claz_funcallable_standard_object,name,"HOT-COUNT",zlot_funcallable_standard_object_hot_count).
struct_opv(z,claz_funcallable_standard_object,name,"NAME",zlot_funcallable_standard_object_name).
struct_opv(z,claz_funcallable_standard_object,returns,claz_emf_cache,zlot_funcallable_standard_object_cache).
struct_opv(z,claz_funcallable_standard_object,returns,claz_integer,zlot_funcallable_standard_object_call_count).
struct_opv(z,claz_funcallable_standard_object,returns,claz_integer,zlot_funcallable_standard_object_hot_count).
struct_opv(z,claz_funcallable_standard_object,returns,claz_t,zlot_funcallable_standard_object_function).
struct_opv(z,claz_funcallable_standard_object,slot,cache,zlot_funcallable_standard_object_cache).
struct_opv(z,claz_funcallable_standard_object,slot,call_count,zlot_funcallable_standard_object_call_count).
struct_opv(z,claz_funcallable_standard_object,slot,function,zlot_funcallable_standard_object_function).
struct_opv(z,claz_funcallable_standard_object,slot,hot_count,zlot_funcallable_standard_object_hot_count).
struct_opv(z,claz_funcallable_standard_object,slot,name,zlot_funcallable_standard_object_name).
struct_opv(z,claz_funcallable_standard_object,subtypep,claz_function).
struct_opv(z,claz_funcallable_standard_object,subtypep,claz_standard_object).
struct_opv(z,claz_funcallable_standard_object,super_priority,[claz_function,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(z,claz_funcallable_standard_object,super_priority,[claz_function,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(z,claz_function,classname,"FUNCTION").
struct_opv(z,claz_function,classof,claz_built_in_class).
struct_opv(z,claz_function,name,"CALL-COUNT",zlot_function_call_count).
struct_opv(z,claz_function,name,"HOT-COUNT",zlot_function_hot_count).
struct_opv(z,claz_function,name,"LOADED-FROM",zlot_function_loaded_from).
struct_opv(z,claz_function,name,"PROPERTY-LIST",zlot_function_property_list).
struct_opv(z,claz_function,readonly,t,zlot_function_loaded_from).
struct_opv(z,claz_function,returns,claz_integer,zlot_function_call_count).
struct_opv(z,claz_function,returns,claz_integer,zlot_function_hot_count).
struct_opv(z,claz_function,returns,claz_list,zlot_function_property_list).
struct_opv(z,claz_function,returns,claz_t,zlot_function_loaded_from).
struct_opv(z,claz_function,slot,call_count,zlot_function_call_count).
struct_opv(z,claz_function,slot,hot_count,zlot_function_hot_count).
struct_opv(z,claz_function,slot,loaded_from,zlot_function_loaded_from).
struct_opv(z,claz_function,slot,property_list,zlot_function_property_list).
struct_opv(z,claz_function,subtypep,claz_operator).
struct_opv(z,claz_function,subtypep,claz_t).
struct_opv(z,claz_function,super_priority,[claz_t]).
struct_opv(z,claz_function_binding,classname,"FUNCTION-BINDING").
struct_opv(z,claz_function_binding,classof,claz_built_in_class).
struct_opv(z,claz_function_binding,name,"NAME",zlot_function_binding_name).
struct_opv(z,claz_function_binding,name,"NEXT",zlot_function_binding_next).
struct_opv(z,claz_function_binding,name,"VALUE",zlot_function_binding_value).
struct_opv(z,claz_function_binding,readonly,t,zlot_function_binding_next).
struct_opv(z,claz_function_binding,returns,claz_function_binding,zlot_function_binding_next).
struct_opv(z,claz_function_binding,returns,claz_t,zlot_function_binding_name).
struct_opv(z,claz_function_binding,returns,claz_t,zlot_function_binding_value).
struct_opv(z,claz_function_binding,slot,name,zlot_function_binding_name).
struct_opv(z,claz_function_binding,slot,next,zlot_function_binding_next).
struct_opv(z,claz_function_binding,slot,value,zlot_function_binding_value).
struct_opv(z,claz_functional,classname,"FUNCTIONAL").
struct_opv(z,claz_functional,classof,claz_built_in_class).
struct_opv(z,claz_functional,name,"ALLOCATOR",zlot_functional_allocator).
struct_opv(z,claz_functional,name,"ARG-DOCUMENTATION",zlot_functional_arg_documentation).
struct_opv(z,claz_functional,name,"DEBUG-NAME",zlot_functional_debug_name).
struct_opv(z,claz_functional,name,"DOCUMENTATION",zlot_functional_documentation).
struct_opv(z,claz_functional,name,"ENTRY-FUN",zlot_functional_entry_fun).
struct_opv(z,claz_functional,name,"HAS-EXTERNAL-REFERENCES-P",zlot_functional_has_external_references_p).
struct_opv(z,claz_functional,name,"INLINE-EXPANDED",zlot_functional_inline_expanded).
struct_opv(z,claz_functional,name,"INLINE-EXPANSION",zlot_functional_inline_expansion).
struct_opv(z,claz_functional,name,"INLINEP",zlot_functional_inlinep).
struct_opv(z,claz_functional,name,"KIND",zlot_functional_kind).
struct_opv(z,claz_functional,name,"LEXENV",zlot_functional_lexenv).
struct_opv(z,claz_functional,name,"PLIST",zlot_functional_plist).
struct_opv(z,claz_functional,name,"SOURCE-NAME",zlot_functional_source_name).
struct_opv(z,claz_functional,name,"TYPE",zlot_functional_type).
struct_opv(z,claz_functional,name,"WHERE-FROM",zlot_functional_where_from).
struct_opv(z,claz_functional,name,"XREF",zlot_functional_xref).
struct_opv(z,claz_functional,slot,allocator,zlot_functional_allocator).
struct_opv(z,claz_functional,slot,arg_documentation,zlot_functional_arg_documentation).
struct_opv(z,claz_functional,slot,debug_name,zlot_functional_debug_name).
struct_opv(z,claz_functional,slot,documentation,zlot_functional_documentation).
struct_opv(z,claz_functional,slot,entry_fun,zlot_functional_entry_fun).
struct_opv(z,claz_functional,slot,has_external_references_p,zlot_functional_has_external_references_p).
struct_opv(z,claz_functional,slot,inline_expanded,zlot_functional_inline_expanded).
struct_opv(z,claz_functional,slot,inline_expansion,zlot_functional_inline_expansion).
struct_opv(z,claz_functional,slot,inlinep,zlot_functional_inlinep).
struct_opv(z,claz_functional,slot,kind,zlot_functional_kind).
struct_opv(z,claz_functional,slot,lexenv,zlot_functional_lexenv).
struct_opv(z,claz_functional,slot,plist,zlot_functional_plist).
struct_opv(z,claz_functional,slot,source_name,zlot_functional_source_name).
struct_opv(z,claz_functional,slot,type,zlot_functional_type).
struct_opv(z,claz_functional,slot,where_from,zlot_functional_where_from).
struct_opv(z,claz_functional,slot,xref,zlot_functional_xref).
struct_opv(z,claz_functional,subtypep,claz_leaf).
struct_opv(z,claz_functional,super_priority,[claz_leaf,claz_sset_element,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_funstate,classname,"FUNSTATE").
struct_opv(z,claz_funstate,classof,claz_built_in_class).
struct_opv(z,claz_funstate,name,"ARG-TEMPS",zlot_funstate_arg_temps).
struct_opv(z,claz_funstate,name,"ARGS",zlot_funstate_args).
struct_opv(z,claz_funstate,slot,arg_temps,zlot_funstate_arg_temps).
struct_opv(z,claz_funstate,slot,args,zlot_funstate_args).
struct_opv(z,claz_funstate,subtypep,claz_structure_object).
struct_opv(z,claz_funstate,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_global_boundp_method,classname,"GLOBAL-BOUNDP-METHOD").
struct_opv(z,claz_global_boundp_method,classof,claz_built_in_class).
struct_opv(z,claz_global_boundp_method,subtypep,claz_accessor_method).
struct_opv(z,claz_global_boundp_method,super_priority,[claz_accessor_method,claz_standard_method,claz_plist_mixin,claz_definition_source_mixin,claz_method,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(z,claz_global_conflicts,classname,"GLOBAL-CONFLICTS").
struct_opv(z,claz_global_conflicts,classof,claz_built_in_class).
struct_opv(z,claz_global_conflicts,name,"BLOCK",zlot_global_conflicts_block).
struct_opv(z,claz_global_conflicts,name,"CONFLICTS",zlot_global_conflicts_conflicts).
struct_opv(z,claz_global_conflicts,name,"KIND",zlot_global_conflicts_kind).
struct_opv(z,claz_global_conflicts,name,"NEXT-BLOCKWISE",zlot_global_conflicts_next_blockwise).
struct_opv(z,claz_global_conflicts,name,"NEXT-TNWISE",zlot_global_conflicts_next_tnwise).
struct_opv(z,claz_global_conflicts,name,"NUMBER",zlot_global_conflicts_number).
struct_opv(z,claz_global_conflicts,name,"TN",zlot_global_conflicts_tn).
struct_opv(z,claz_global_conflicts,slot,block,zlot_global_conflicts_block).
struct_opv(z,claz_global_conflicts,slot,conflicts,zlot_global_conflicts_conflicts).
struct_opv(z,claz_global_conflicts,slot,kind,zlot_global_conflicts_kind).
struct_opv(z,claz_global_conflicts,slot,next_blockwise,zlot_global_conflicts_next_blockwise).
struct_opv(z,claz_global_conflicts,slot,next_tnwise,zlot_global_conflicts_next_tnwise).
struct_opv(z,claz_global_conflicts,slot,number,zlot_global_conflicts_number).
struct_opv(z,claz_global_conflicts,slot,tn,zlot_global_conflicts_tn).
struct_opv(z,claz_global_conflicts,subtypep,claz_structure_c33_object).
struct_opv(z,claz_global_conflicts,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_global_reader_method,classname,"GLOBAL-READER-METHOD").
struct_opv(z,claz_global_reader_method,classof,claz_built_in_class).
struct_opv(z,claz_global_reader_method,subtypep,claz_accessor_method).
struct_opv(z,claz_global_reader_method,super_priority,[claz_accessor_method,claz_standard_method,claz_plist_mixin,claz_definition_source_mixin,claz_method,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(z,claz_global_var,classname,"GLOBAL-VAR").
struct_opv(z,claz_global_var,classof,claz_built_in_class).
struct_opv(z,claz_global_var,name,"KIND",zlot_global_var_kind).
struct_opv(z,claz_global_var,slot,kind,zlot_global_var_kind).
struct_opv(z,claz_global_var,subtypep,claz_basic_var).
struct_opv(z,claz_global_var,super_priority,[claz_basic_var,claz_leaf,claz_sset_element,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_global_writer_method,classname,"GLOBAL-WRITER-METHOD").
struct_opv(z,claz_global_writer_method,classof,claz_built_in_class).
struct_opv(z,claz_global_writer_method,subtypep,claz_accessor_method).
struct_opv(z,claz_global_writer_method,super_priority,[claz_accessor_method,claz_standard_method,claz_plist_mixin,claz_definition_source_mixin,claz_method,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(z,claz_go,classname,"GO").
struct_opv(z,claz_go,classof,claz_built_in_class).
struct_opv(z,claz_go,name,"TAG",zlot_go_tag).
struct_opv(z,claz_go,name,"TAGBODY",zlot_go_tagbody).
struct_opv(z,claz_go,readonly,t,zlot_go_tag).
struct_opv(z,claz_go,readonly,t,zlot_go_tagbody).
struct_opv(z,claz_go,returns,claz_t,zlot_go_tag).
struct_opv(z,claz_go,returns,claz_t,zlot_go_tagbody).
struct_opv(z,claz_go,slot,tag,zlot_go_tag).
struct_opv(z,claz_go,slot,tagbody,zlot_go_tagbody).
struct_opv(z,claz_go,subtypep,claz_control_transfer).
struct_opv(z,claz_group_info,classname,"GROUP-INFO").
struct_opv(z,claz_group_info,classof,claz_built_in_class).
struct_opv(z,claz_group_info,name,"GID",zlot_group_info_gid).
struct_opv(z,claz_group_info,name,"MEMBERS",zlot_group_info_members).
struct_opv(z,claz_group_info,name,"NAME",zlot_group_info_name).
struct_opv(z,claz_group_info,slot,gid,zlot_group_info_gid).
struct_opv(z,claz_group_info,slot,members,zlot_group_info_members).
struct_opv(z,claz_group_info,slot,name,zlot_group_info_name).
struct_opv(z,claz_group_info,subtypep,claz_structure_object).
struct_opv(z,claz_group_info,super_priority,[claz_structure_object,claz_t]).
struct_opv(z,claz_hairy_type,classname,"HAIRY-TYPE").
struct_opv(z,claz_hairy_type,classof,claz_built_in_class).
struct_opv(z,claz_hairy_type,name,"CLASS-INFO",zlot_hairy_type_class_info).
struct_opv(z,claz_hairy_type,name,"SPECIFIER",zlot_hairy_type_specifier).
struct_opv(z,claz_hairy_type,slot,class_info,zlot_hairy_type_class_info).
struct_opv(z,claz_hairy_type,slot,specifier,zlot_hairy_type_specifier).
struct_opv(z,claz_hairy_type,subtypep,claz_ctype).
struct_opv(z,claz_hairy_type,super_priority,[claz_ctype,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_handler,classname,"HANDLER").
struct_opv(z,claz_handler,classof,claz_built_in_class).
struct_opv(z,claz_handler,name,"ACTIVE",zlot_handler_active).
struct_opv(z,claz_handler,name,"BOGUS",zlot_handler_bogus).
struct_opv(z,claz_handler,name,"DESCRIPTOR",zlot_handler_descriptor).
struct_opv(z,claz_handler,name,"DIRECTION",zlot_handler_direction).
struct_opv(z,claz_handler,name,"FUNCTION",zlot_handler_function).
struct_opv(z,claz_handler,slot,active,zlot_handler_active).
struct_opv(z,claz_handler,slot,bogus,zlot_handler_bogus).
struct_opv(z,claz_handler,slot,descriptor,zlot_handler_descriptor).
struct_opv(z,claz_handler,slot,direction,zlot_handler_direction).
struct_opv(z,claz_handler,slot,function,zlot_handler_function).
struct_opv(z,claz_handler,subtypep,claz_structure_object).
struct_opv(z,claz_handler,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_hash_table(claz_emf_cache_cache_entry,claz_t),classname,"EMF-CACHE-ENTRY-OBJECT-HASH-TABLE").
struct_opv(z,claz_hash_table(claz_emf_cache_cache_entry,claz_t),classof,claz_built_in_class).
struct_opv(z,claz_hash_table(claz_prolog_character,_7614),classname,"CHARACTER-<GENERIC>-HASH-TABLE").
struct_opv(z,claz_hash_table(claz_prolog_character,_7614),classof,claz_built_in_class).
struct_opv(z,claz_hash_table(claz_string,claz_ffi_object),classname,"STRING-FFI-OBJECT-HASH-TABLE").
struct_opv(z,claz_hash_table(claz_string,claz_ffi_object),classof,claz_built_in_class).
struct_opv(z,claz_hash_table(claz_string,claz_package),classname,"STRING-PACKAGE-HASH-TABLE").
struct_opv(z,claz_hash_table(claz_string,claz_package),classof,claz_built_in_class).
struct_opv(z,claz_hash_table(claz_string,claz_symbol),classname,"STRING-SYMBOL-HASH-TABLE").
struct_opv(z,claz_hash_table(claz_string,claz_symbol),classof,claz_built_in_class).
struct_opv(z,claz_hash_table(claz_t,claz_t),classname,"OBJECT-OBJECT-HASH-TABLE").
struct_opv(z,claz_hash_table(claz_t,claz_t),classof,claz_built_in_class).
struct_opv(z,claz_hash_table(claz_t,claz_t),subtypep,claz_hash_table).
struct_opv(z,claz_hash_table,classname,"HASH-TABLE").
struct_opv(z,claz_hash_table,classof,claz_built_in_class).
struct_opv(z,claz_hash_table,name,"BUCKETS",zlot_hash_table_buckets).
struct_opv(z,claz_hash_table,name,"CACHE",zlot_hash_table_cache).
struct_opv(z,claz_hash_table,name,"COMPARATOR",zlot_hash_table_comparator).
struct_opv(z,claz_hash_table,name,"COUNT",zlot_hash_table_count).
struct_opv(z,claz_hash_table,name,"HASH-FUN",zlot_hash_table_hash_fun).
struct_opv(z,claz_hash_table,name,"HASH-VECTOR",zlot_hash_table_hash_vector).
struct_opv(z,claz_hash_table,name,"INDEX-VECTOR",zlot_hash_table_index_vector).
struct_opv(z,claz_hash_table,name,"LOCK",zlot_hash_table_lock).
struct_opv(z,claz_hash_table,name,"NEEDS-REHASH-P",zlot_hash_table_needs_rehash_p).
struct_opv(z,claz_hash_table,name,"NEXT-FREE-KV",zlot_hash_table_next_free_kv).
struct_opv(z,claz_hash_table,name,"NEXT-VECTOR",zlot_hash_table_next_vector).
struct_opv(z,claz_hash_table,name,"NEXT-WEAK-HASH-TABLE",zlot_hash_table_next_weak_hash_table).
struct_opv(z,claz_hash_table,name,"NUMBER-ENTRIES",zlot_hash_table_number_entries).
struct_opv(z,claz_hash_table,name,"REHASH-SIZE",zlot_hash_table_rehash_size).
struct_opv(z,claz_hash_table,name,"REHASH-THRESHOLD",zlot_hash_table_rehash_threshold).
struct_opv(z,claz_hash_table,name,"REHASH-TRIGGER",zlot_hash_table_rehash_trigger).
struct_opv(z,claz_hash_table,name,"SYNCHRONIZED-P",zlot_hash_table_synchronized_p).
struct_opv(z,claz_hash_table,name,"TABLE",zlot_hash_table_table).
struct_opv(z,claz_hash_table,name,"TEST",zlot_hash_table_test).
struct_opv(z,claz_hash_table,name,"TEST-FUN",zlot_hash_table_test_fun).
struct_opv(z,claz_hash_table,name,"THRESHOLD",zlot_hash_table_threshold).
struct_opv(z,claz_hash_table,name,"WEAKNESS",zlot_hash_table_weakness).
struct_opv(z,claz_hash_table,readonly,t,zlot_hash_table_comparator).
struct_opv(z,claz_hash_table,readonly,t,zlot_hash_table_lock).
struct_opv(z,claz_hash_table,readonly,t,zlot_hash_table_rehash_size).
struct_opv(z,claz_hash_table,readonly,t,zlot_hash_table_rehash_threshold).
struct_opv(z,claz_hash_table,returns,claz_hash_table_comparator,zlot_hash_table_comparator).
struct_opv(z,claz_hash_table,returns,claz_integer,zlot_hash_table_count).
struct_opv(z,claz_hash_table,returns,claz_integer,zlot_hash_table_rehash_size).
struct_opv(z,claz_hash_table,returns,claz_integer,zlot_hash_table_threshold).
struct_opv(z,claz_hash_table,returns,claz_j_reentrant_lock,zlot_hash_table_lock).
struct_opv(z,claz_hash_table,returns,claz_number,zlot_hash_table_rehash_threshold).
struct_opv(z,claz_hash_table,returns,claz_simple_vector(claz_hash_table_hash_entry),zlot_hash_table_buckets).
struct_opv(z,claz_hash_table,slot,buckets,zlot_hash_table_buckets).
struct_opv(z,claz_hash_table,slot,cache,zlot_hash_table_cache).
struct_opv(z,claz_hash_table,slot,comparator,zlot_hash_table_comparator).
struct_opv(z,claz_hash_table,slot,count,zlot_hash_table_count).
struct_opv(z,claz_hash_table,slot,hash_fun,zlot_hash_table_hash_fun).
struct_opv(z,claz_hash_table,slot,hash_vector,zlot_hash_table_hash_vector).
struct_opv(z,claz_hash_table,slot,index_vector,zlot_hash_table_index_vector).
struct_opv(z,claz_hash_table,slot,lock,zlot_hash_table_lock).
struct_opv(z,claz_hash_table,slot,needs_rehash_p,zlot_hash_table_needs_rehash_p).
struct_opv(z,claz_hash_table,slot,next_free_kv,zlot_hash_table_next_free_kv).
struct_opv(z,claz_hash_table,slot,next_vector,zlot_hash_table_next_vector).
struct_opv(z,claz_hash_table,slot,next_weak_hash_table,zlot_hash_table_next_weak_hash_table).
struct_opv(z,claz_hash_table,slot,number_entries,zlot_hash_table_number_entries).
struct_opv(z,claz_hash_table,slot,rehash_size,zlot_hash_table_rehash_size).
struct_opv(z,claz_hash_table,slot,rehash_threshold,zlot_hash_table_rehash_threshold).
struct_opv(z,claz_hash_table,slot,rehash_trigger,zlot_hash_table_rehash_trigger).
struct_opv(z,claz_hash_table,slot,synchronized_p,zlot_hash_table_synchronized_p).
struct_opv(z,claz_hash_table,slot,table,zlot_hash_table_table).
struct_opv(z,claz_hash_table,slot,test,zlot_hash_table_test).
struct_opv(z,claz_hash_table,slot,test_fun,zlot_hash_table_test_fun).
struct_opv(z,claz_hash_table,slot,threshold,zlot_hash_table_threshold).
struct_opv(z,claz_hash_table,slot,weakness,zlot_hash_table_weakness).
struct_opv(z,claz_hash_table,subtypep,claz_hash_table(claz_t,claz_t)).
struct_opv(z,claz_hash_table,subtypep,claz_structure_object).
struct_opv(z,claz_hash_table,subtypep,claz_t).
struct_opv(z,claz_hash_table,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_hash_table,super_priority,[claz_t]).
struct_opv(z,claz_hash_table_comparator,classname,"HASH-TABLE-COMPARATOR").
struct_opv(z,claz_hash_table_comparator,classof,claz_built_in_class).
struct_opv(z,claz_hash_table_hash_entry,classname,"HASH-TABLE-HASH-ENTRY").
struct_opv(z,claz_hash_table_hash_entry,classof,claz_built_in_class).
struct_opv(z,claz_hash_table_hash_entry,name,"HASH",zlot_hash_table_hash_entry_hash).
struct_opv(z,claz_hash_table_hash_entry,name,"KEY",zlot_hash_table_hash_entry_key).
struct_opv(z,claz_hash_table_hash_entry,name,"NEXT",zlot_hash_table_hash_entry_next).
struct_opv(z,claz_hash_table_hash_entry,name,"VALUE",zlot_hash_table_hash_entry_value).
struct_opv(z,claz_hash_table_hash_entry,returns,claz_hash_table_hash_entry,zlot_hash_table_hash_entry_next).
struct_opv(z,claz_hash_table_hash_entry,returns,claz_integer,zlot_hash_table_hash_entry_hash).
struct_opv(z,claz_hash_table_hash_entry,returns,claz_t,zlot_hash_table_hash_entry_key).
struct_opv(z,claz_hash_table_hash_entry,returns,claz_t,zlot_hash_table_hash_entry_value).
struct_opv(z,claz_hash_table_hash_entry,slot,hash,zlot_hash_table_hash_entry_hash).
struct_opv(z,claz_hash_table_hash_entry,slot,key,zlot_hash_table_hash_entry_key).
struct_opv(z,claz_hash_table_hash_entry,slot,next,zlot_hash_table_hash_entry_next).
struct_opv(z,claz_hash_table_hash_entry,slot,value,zlot_hash_table_hash_entry_value).
struct_opv(z,claz_heap_alien_info,classname,"HEAP-ALIEN-INFO").
struct_opv(z,claz_heap_alien_info,classof,claz_built_in_class).
struct_opv(z,claz_heap_alien_info,name,"ALIEN-NAME",zlot_heap_alien_info_alien_name).
struct_opv(z,claz_heap_alien_info,name,"DATAP",zlot_heap_alien_info_datap).
struct_opv(z,claz_heap_alien_info,name,"TYPE",zlot_heap_alien_info_type).
struct_opv(z,claz_heap_alien_info,slot,alien_name,zlot_heap_alien_info_alien_name).
struct_opv(z,claz_heap_alien_info,slot,datap,zlot_heap_alien_info_datap).
struct_opv(z,claz_heap_alien_info,slot,type,zlot_heap_alien_info_type).
struct_opv(z,claz_heap_alien_info,subtypep,claz_structure_c33_object).
struct_opv(z,claz_heap_alien_info,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_host,classname,"HOST").
struct_opv(z,claz_host,classof,claz_built_in_class).
struct_opv(z,claz_host,name,"CUSTOMARY-CASE",zlot_host_customary_case).
struct_opv(z,claz_host,name,"PARSE",zlot_host_parse).
struct_opv(z,claz_host,name,"PARSE-NATIVE",zlot_host_parse_native).
struct_opv(z,claz_host,name,"SIMPLIFY-NAMESTRING",zlot_host_simplify_namestring).
struct_opv(z,claz_host,name,"UNPARSE",zlot_host_unparse).
struct_opv(z,claz_host,name,"UNPARSE-DIRECTORY",zlot_host_unparse_directory).
struct_opv(z,claz_host,name,"UNPARSE-DIRECTORY-SEPARATOR",zlot_host_unparse_directory_separator).
struct_opv(z,claz_host,name,"UNPARSE-ENOUGH",zlot_host_unparse_enough).
struct_opv(z,claz_host,name,"UNPARSE-FILE",zlot_host_unparse_file).
struct_opv(z,claz_host,name,"UNPARSE-HOST",zlot_host_unparse_host).
struct_opv(z,claz_host,name,"UNPARSE-NATIVE",zlot_host_unparse_native).
struct_opv(z,claz_host,slot,customary_case,zlot_host_customary_case).
struct_opv(z,claz_host,slot,parse,zlot_host_parse).
struct_opv(z,claz_host,slot,parse_native,zlot_host_parse_native).
struct_opv(z,claz_host,slot,simplify_namestring,zlot_host_simplify_namestring).
struct_opv(z,claz_host,slot,unparse,zlot_host_unparse).
struct_opv(z,claz_host,slot,unparse_directory,zlot_host_unparse_directory).
struct_opv(z,claz_host,slot,unparse_directory_separator,zlot_host_unparse_directory_separator).
struct_opv(z,claz_host,slot,unparse_enough,zlot_host_unparse_enough).
struct_opv(z,claz_host,slot,unparse_file,zlot_host_unparse_file).
struct_opv(z,claz_host,slot,unparse_host,zlot_host_unparse_host).
struct_opv(z,claz_host,slot,unparse_native,zlot_host_unparse_native).
struct_opv(z,claz_host,subtypep,claz_structure_object).
struct_opv(z,claz_host,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_hostent,classname,"HOSTENT").
struct_opv(z,claz_hostent,classof,claz_built_in_class).
struct_opv(z,claz_hostent,name,"ADDR-LIST",zlot_hostent_addr_list).
struct_opv(z,claz_hostent,name,"ADDRTYPE",zlot_hostent_addrtype).
struct_opv(z,claz_hostent,name,"ALIASES",zlot_hostent_aliases).
struct_opv(z,claz_hostent,name,"NAME",zlot_hostent_name).
struct_opv(z,claz_hostent,slot,addr_list,zlot_hostent_addr_list).
struct_opv(z,claz_hostent,slot,addrtype,zlot_hostent_addrtype).
struct_opv(z,claz_hostent,slot,aliases,zlot_hostent_aliases).
struct_opv(z,claz_hostent,slot,name,zlot_hostent_name).
struct_opv(z,claz_hostent,subtypep,claz_structure_object).
struct_opv(z,claz_hostent,super_priority,[claz_structure_object,claz_t]).
struct_opv(z,claz_html_stream_out,classname,"HTML-STREAM-OUT").
struct_opv(z,claz_html_stream_out,classof,claz_built_in_class).
struct_opv(z,claz_html_stream_out,name,"TARGET-STREAM",zlot_html_stream_out_target_stream).
struct_opv(z,claz_html_stream_out,slot,target_stream,zlot_html_stream_out_target_stream).
struct_opv(z,claz_html_stream_out,subtypep,claz_fundamental_character_output_stream).
struct_opv(z,claz_html_stream_out,super_priority,[claz_fundamental_character_output_stream,claz_fundamental_output_stream,claz_fundamental_character_stream,claz_fundamental_stream,claz_stream,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(z,claz_huffman_node,classname,"HUFFMAN-NODE").
struct_opv(z,claz_huffman_node,classof,claz_built_in_class).
struct_opv(z,claz_huffman_node,name,"KEY",zlot_huffman_node_key).
struct_opv(z,claz_huffman_node,name,"WEIGHT",zlot_huffman_node_weight).
struct_opv(z,claz_huffman_node,slot,key,zlot_huffman_node_key).
struct_opv(z,claz_huffman_node,slot,weight,zlot_huffman_node_weight).
struct_opv(z,claz_huffman_node,subtypep,claz_structure_object).
struct_opv(z,claz_huffman_node,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_huffman_pair,classname,"HUFFMAN-PAIR").
struct_opv(z,claz_huffman_pair,classof,claz_built_in_class).
struct_opv(z,claz_huffman_pair,name,"LEFT",zlot_huffman_pair_left).
struct_opv(z,claz_huffman_pair,name,"RIGHT",zlot_huffman_pair_right).
struct_opv(z,claz_huffman_pair,slot,left,zlot_huffman_pair_left).
struct_opv(z,claz_huffman_pair,slot,right,zlot_huffman_pair_right).
struct_opv(z,claz_huffman_pair,subtypep,claz_huffman_node).
struct_opv(z,claz_huffman_pair,super_priority,[claz_huffman_node,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_illegal_monitor_state,classname,"ILLEGAL-MONITOR-STATE").
struct_opv(z,claz_illegal_monitor_state,classof,claz_built_in_class).
struct_opv(z,claz_illegal_monitor_state,name,"MESSAGE",zlot_illegal_monitor_state_message).
struct_opv(z,claz_illegal_monitor_state,returns,claz_string,zlot_illegal_monitor_state_message).
struct_opv(z,claz_illegal_monitor_state,slot,message,zlot_illegal_monitor_state_message).
struct_opv(z,claz_indentation,classname,"INDENTATION").
struct_opv(z,claz_indentation,classof,claz_built_in_class).
struct_opv(z,claz_indentation,name,"AMOUNT",zlot_indentation_amount).
struct_opv(z,claz_indentation,name,"KIND",zlot_indentation_kind).
struct_opv(z,claz_indentation,slot,amount,zlot_indentation_amount).
struct_opv(z,claz_indentation,slot,kind,zlot_indentation_kind).
struct_opv(z,claz_indentation,subtypep,claz_queued_op).
struct_opv(z,claz_indentation,super_priority,[claz_queued_op,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_index_of(claz_emf_cache_eql_specialization),classname,"INDEX-OF").
struct_opv(z,claz_index_of(claz_emf_cache_eql_specialization),classof,claz_built_in_class).
struct_opv(z,claz_info_hashtable,classname,"INFO-HASHTABLE").
struct_opv(z,claz_info_hashtable,classof,claz_built_in_class).
struct_opv(z,claz_info_hashtable,name,"COMPARATOR",zlot_info_hashtable_comparator).
struct_opv(z,claz_info_hashtable,name,"COUNT",zlot_info_hashtable_count).
struct_opv(z,claz_info_hashtable,name,"HASH-FUNCTION",zlot_info_hashtable_hash_function).
struct_opv(z,claz_info_hashtable,name,"MUTEX",zlot_info_hashtable_mutex).
struct_opv(z,claz_info_hashtable,name,"STORAGE",zlot_info_hashtable_storage).
struct_opv(z,claz_info_hashtable,slot,comparator,zlot_info_hashtable_comparator).
struct_opv(z,claz_info_hashtable,slot,count,zlot_info_hashtable_count).
struct_opv(z,claz_info_hashtable,slot,hash_function,zlot_info_hashtable_hash_function).
struct_opv(z,claz_info_hashtable,slot,mutex,zlot_info_hashtable_mutex).
struct_opv(z,claz_info_hashtable,slot,storage,zlot_info_hashtable_storage).
struct_opv(z,claz_info_hashtable,subtypep,claz_structure_object).
struct_opv(z,claz_info_hashtable,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_initial,classname,"INITIAL").
struct_opv(z,claz_initial,classof,claz_built_in_class).
struct_opv(z,claz_initial,subtypep,claz_dfun_info).
struct_opv(z,claz_initial,super_priority,[claz_dfun_info,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_inlining_dependency_failure,classname,"INLINING-DEPENDENCY-FAILURE").
struct_opv(z,claz_inlining_dependency_failure,classof,claz_built_in_class).
struct_opv(z,claz_input_character,classname,"INPUT-CHARACTER").
struct_opv(z,claz_input_character,classof,claz_built_in_class).
struct_opv(z,claz_input_character,name,"BITS",zlot_input_character_bits).
struct_opv(z,claz_input_character,name,"CHAR",zlot_input_character_char).
struct_opv(z,claz_input_character,name,"FONT",zlot_input_character_font).
struct_opv(z,claz_input_character,name,"KEY",zlot_input_character_key).
struct_opv(z,claz_input_character,slot,bits,zlot_input_character_bits).
struct_opv(z,claz_input_character,slot,char,zlot_input_character_char).
struct_opv(z,claz_input_character,slot,font,zlot_input_character_font).
struct_opv(z,claz_input_character,slot,key,zlot_input_character_key).
struct_opv(z,claz_input_character,subtypep,claz_structure_object).
struct_opv(z,claz_input_character,super_priority,[claz_structure_object,claz_t]).
struct_opv(z,claz_inspection,classname,"INSPECTION").
struct_opv(z,claz_inspection,classof,claz_built_in_class).
struct_opv(z,claz_inspection,name,"BLURB",zlot_inspection_blurb).
struct_opv(z,claz_inspection,name,"ID",zlot_inspection_id).
struct_opv(z,claz_inspection,name,"NTH-SLOT",zlot_inspection_nth_slot).
struct_opv(z,claz_inspection,name,"NUM-SLOTS",zlot_inspection_num_slots).
struct_opv(z,claz_inspection,name,"POS",zlot_inspection_pos).
struct_opv(z,claz_inspection,name,"SELF",zlot_inspection_self).
struct_opv(z,claz_inspection,name,"SET-SLOT",zlot_inspection_set_slot).
struct_opv(z,claz_inspection,name,"TITLE",zlot_inspection_title).
struct_opv(z,claz_inspection,name,"UP",zlot_inspection_up).
struct_opv(z,claz_inspection,slot,blurb,zlot_inspection_blurb).
struct_opv(z,claz_inspection,slot,id,zlot_inspection_id).
struct_opv(z,claz_inspection,slot,nth_slot,zlot_inspection_nth_slot).
struct_opv(z,claz_inspection,slot,num_slots,zlot_inspection_num_slots).
struct_opv(z,claz_inspection,slot,pos,zlot_inspection_pos).
struct_opv(z,claz_inspection,slot,self,zlot_inspection_self).
struct_opv(z,claz_inspection,slot,set_slot,zlot_inspection_set_slot).
struct_opv(z,claz_inspection,slot,title,zlot_inspection_title).
struct_opv(z,claz_inspection,slot,up,zlot_inspection_up).
struct_opv(z,claz_inspection,subtypep,claz_structure_object).
struct_opv(z,claz_inspection,super_priority,[claz_structure_object,claz_t]).
struct_opv(z,claz_inst_space,classname,"INST-SPACE").
struct_opv(z,claz_inst_space,classof,claz_built_in_class).
struct_opv(z,claz_inst_space,name,"CHOICES",zlot_inst_space_choices).
struct_opv(z,claz_inst_space,name,"VALID-MASK",zlot_inst_space_valid_mask).
struct_opv(z,claz_inst_space,slot,choices,zlot_inst_space_choices).
struct_opv(z,claz_inst_space,slot,valid_mask,zlot_inst_space_valid_mask).
struct_opv(z,claz_inst_space,subtypep,claz_structure_object).
struct_opv(z,claz_inst_space,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_inst_space_choice,classname,"INST-SPACE-CHOICE").
struct_opv(z,claz_inst_space_choice,classof,claz_built_in_class).
struct_opv(z,claz_inst_space_choice,name,"COMMON-ID",zlot_inst_space_choice_common_id).
struct_opv(z,claz_inst_space_choice,name,"SUBSPACE",zlot_inst_space_choice_subspace).
struct_opv(z,claz_inst_space_choice,slot,common_id,zlot_inst_space_choice_common_id).
struct_opv(z,claz_inst_space_choice,slot,subspace,zlot_inst_space_choice_subspace).
struct_opv(z,claz_inst_space_choice,subtypep,claz_structure_object).
struct_opv(z,claz_inst_space_choice,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_instruction,classname,"INSTRUCTION").
struct_opv(z,claz_instruction,classof,claz_built_in_class).
struct_opv(z,claz_instruction,name,"ATTRIBUTES",zlot_instruction_attributes).
struct_opv(z,claz_instruction,name,"CONTROL",zlot_instruction_control).
struct_opv(z,claz_instruction,name,"DELAY",zlot_instruction_delay).
struct_opv(z,claz_instruction,name,"DEPTH",zlot_instruction_depth).
struct_opv(z,claz_instruction,name,"EMITTER",zlot_instruction_emitter).
struct_opv(z,claz_instruction,name,"FORMAT-NAME",zlot_instruction_format_name).
struct_opv(z,claz_instruction,name,"ID",zlot_instruction_id).
struct_opv(z,claz_instruction,name,"LABELLER",zlot_instruction_labeller).
struct_opv(z,claz_instruction,name,"LENGTH",zlot_instruction_length).
struct_opv(z,claz_instruction,name,"MASK",zlot_instruction_mask).
struct_opv(z,claz_instruction,name,"NAME",zlot_instruction_name).
struct_opv(z,claz_instruction,name,"PREFILTER",zlot_instruction_prefilter).
struct_opv(z,claz_instruction,name,"PRINT-NAME",zlot_instruction_print_name).
struct_opv(z,claz_instruction,name,"PRINTER",zlot_instruction_printer).
struct_opv(z,claz_instruction,name,"READ-DEPENDENCIES",zlot_instruction_read_dependencies).
struct_opv(z,claz_instruction,name,"READ-DEPENDENTS",zlot_instruction_read_dependents).
struct_opv(z,claz_instruction,name,"SPECIALIZERS",zlot_instruction_specializers).
struct_opv(z,claz_instruction,name,"WRITE-DEPENDENCIES",zlot_instruction_write_dependencies).
struct_opv(z,claz_instruction,name,"WRITE-DEPENDENTS",zlot_instruction_write_dependents).
struct_opv(z,claz_instruction,slot,attributes,zlot_instruction_attributes).
struct_opv(z,claz_instruction,slot,control,zlot_instruction_control).
struct_opv(z,claz_instruction,slot,delay,zlot_instruction_delay).
struct_opv(z,claz_instruction,slot,depth,zlot_instruction_depth).
struct_opv(z,claz_instruction,slot,emitter,zlot_instruction_emitter).
struct_opv(z,claz_instruction,slot,format_name,zlot_instruction_format_name).
struct_opv(z,claz_instruction,slot,id,zlot_instruction_id).
struct_opv(z,claz_instruction,slot,labeller,zlot_instruction_labeller).
struct_opv(z,claz_instruction,slot,length,zlot_instruction_length).
struct_opv(z,claz_instruction,slot,mask,zlot_instruction_mask).
struct_opv(z,claz_instruction,slot,name,zlot_instruction_name).
struct_opv(z,claz_instruction,slot,prefilter,zlot_instruction_prefilter).
struct_opv(z,claz_instruction,slot,print_name,zlot_instruction_print_name).
struct_opv(z,claz_instruction,slot,printer,zlot_instruction_printer).
struct_opv(z,claz_instruction,slot,read_dependencies,zlot_instruction_read_dependencies).
struct_opv(z,claz_instruction,slot,read_dependents,zlot_instruction_read_dependents).
struct_opv(z,claz_instruction,slot,specializers,zlot_instruction_specializers).
struct_opv(z,claz_instruction,slot,write_dependencies,zlot_instruction_write_dependencies).
struct_opv(z,claz_instruction,slot,write_dependents,zlot_instruction_write_dependents).
struct_opv(z,claz_instruction,subtypep,claz_sset_element).
struct_opv(z,claz_instruction,subtypep,claz_structure_object).
struct_opv(z,claz_instruction,super_priority,[claz_sset_element,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_instruction,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_instruction_format,classname,"INSTRUCTION-FORMAT").
struct_opv(z,claz_instruction_format,classof,claz_built_in_class).
struct_opv(z,claz_instruction_format,name,"ARGS",zlot_instruction_format_args).
struct_opv(z,claz_instruction_format,name,"DEFAULT-PRINTER",zlot_instruction_format_default_printer).
struct_opv(z,claz_instruction_format,name,"LENGTH",zlot_instruction_format_length).
struct_opv(z,claz_instruction_format,name,"NAME",zlot_instruction_format_name).
struct_opv(z,claz_instruction_format,slot,args,zlot_instruction_format_args).
struct_opv(z,claz_instruction_format,slot,default_printer,zlot_instruction_format_default_printer).
struct_opv(z,claz_instruction_format,slot,length,zlot_instruction_format_length).
struct_opv(z,claz_instruction_format,slot,name,zlot_instruction_format_name).
struct_opv(z,claz_instruction_format,subtypep,claz_structure_object).
struct_opv(z,claz_instruction_format,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_integer,classname,"INTEGER").
struct_opv(z,claz_integer,classof,claz_built_in_class).
struct_opv(z,claz_integer,subtypep,claz_rational).
struct_opv(z,claz_integer,super_priority,[claz_rational,claz_real,claz_number,claz_t]).
struct_opv(z,claz_interactive_interrupt,classname,"INTERACTIVE-INTERRUPT").
struct_opv(z,claz_interactive_interrupt,classof,claz_built_in_class).
struct_opv(z,claz_interference_graph,classname,"INTERFERENCE-GRAPH").
struct_opv(z,claz_interference_graph,classof,claz_built_in_class).
struct_opv(z,claz_interference_graph,name,"PRECOLORED-VERTICES",zlot_interference_graph_precolored_vertices).
struct_opv(z,claz_interference_graph,name,"TN-VERTEX",zlot_interference_graph_tn_vertex).
struct_opv(z,claz_interference_graph,name,"TN-VERTEX-MAPPING",zlot_interference_graph_tn_vertex_mapping).
struct_opv(z,claz_interference_graph,name,"VERTICES",zlot_interference_graph_vertices).
struct_opv(z,claz_interference_graph,slot,precolored_vertices,zlot_interference_graph_precolored_vertices).
struct_opv(z,claz_interference_graph,slot,tn_vertex,zlot_interference_graph_tn_vertex).
struct_opv(z,claz_interference_graph,slot,tn_vertex_mapping,zlot_interference_graph_tn_vertex_mapping).
struct_opv(z,claz_interference_graph,slot,vertices,zlot_interference_graph_vertices).
struct_opv(z,claz_interference_graph,subtypep,claz_structure_c33_object).
struct_opv(z,claz_interference_graph,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_interpreted_function,classname,"INTERPRETED-FUNCTION").
struct_opv(z,claz_interpreted_function,classof,claz_built_in_class).
struct_opv(z,claz_interpreted_function,name,"BODY",zlot_interpreted_function_body).
struct_opv(z,claz_interpreted_function,name,"DEBUG-LAMBDA-LIST",zlot_interpreted_function_debug_lambda_list).
struct_opv(z,claz_interpreted_function,name,"DEBUG-NAME",zlot_interpreted_function_debug_name).
struct_opv(z,claz_interpreted_function,name,"DECLARATIONS",zlot_interpreted_function_declarations).
struct_opv(z,claz_interpreted_function,name,"DOCUMENTATION",zlot_interpreted_function_documentation).
struct_opv(z,claz_interpreted_function,name,"ENV",zlot_interpreted_function_env).
struct_opv(z,claz_interpreted_function,name,"LAMBDA-LIST",zlot_interpreted_function_lambda_list).
struct_opv(z,claz_interpreted_function,name,"NAME",zlot_interpreted_function_name).
struct_opv(z,claz_interpreted_function,name,"SOURCE-LOCATION",zlot_interpreted_function_source_location).
struct_opv(z,claz_interpreted_function,slot,body,zlot_interpreted_function_body).
struct_opv(z,claz_interpreted_function,slot,debug_lambda_list,zlot_interpreted_function_debug_lambda_list).
struct_opv(z,claz_interpreted_function,slot,debug_name,zlot_interpreted_function_debug_name).
struct_opv(z,claz_interpreted_function,slot,declarations,zlot_interpreted_function_declarations).
struct_opv(z,claz_interpreted_function,slot,documentation,zlot_interpreted_function_documentation).
struct_opv(z,claz_interpreted_function,slot,env,zlot_interpreted_function_env).
struct_opv(z,claz_interpreted_function,slot,lambda_list,zlot_interpreted_function_lambda_list).
struct_opv(z,claz_interpreted_function,slot,name,zlot_interpreted_function_name).
struct_opv(z,claz_interpreted_function,slot,source_location,zlot_interpreted_function_source_location).
struct_opv(z,claz_interpreted_function,subtypep,claz_function).
struct_opv(z,claz_interpreted_function,super_priority,[claz_t]).
struct_opv(z,claz_interpreter,classname,"INTERPRETER").
struct_opv(z,claz_interpreter,classof,claz_built_in_class).
struct_opv(z,claz_interpreter,name,"INPUT-STREAM",zlot_interpreter_input_stream).
struct_opv(z,claz_interpreter,name,"JLISP",zlot_interpreter_jlisp).
struct_opv(z,claz_interpreter,name,"OUTPUT-STREAM",zlot_interpreter_output_stream).
struct_opv(z,claz_interpreter,readonly,t,zlot_interpreter_input_stream).
struct_opv(z,claz_interpreter,readonly,t,zlot_interpreter_jlisp).
struct_opv(z,claz_interpreter,readonly,t,zlot_interpreter_output_stream).
struct_opv(z,claz_interpreter,returns,claz_boolean,zlot_interpreter_jlisp).
struct_opv(z,claz_interpreter,returns,claz_prolog_input_stream,zlot_interpreter_input_stream).
struct_opv(z,claz_interpreter,returns,claz_prolog_output_stream,zlot_interpreter_output_stream).
struct_opv(z,claz_interpreter,slot,input_stream,zlot_interpreter_input_stream).
struct_opv(z,claz_interpreter,slot,jlisp,zlot_interpreter_jlisp).
struct_opv(z,claz_interpreter,slot,output_stream,zlot_interpreter_output_stream).
struct_opv(z,claz_intersection_type,classname,"INTERSECTION-TYPE").
struct_opv(z,claz_intersection_type,classof,claz_built_in_class).
struct_opv(z,claz_intersection_type,name,"CLASS-INFO",zlot_intersection_type_class_info).
struct_opv(z,claz_intersection_type,slot,class_info,zlot_intersection_type_class_info).
struct_opv(z,claz_intersection_type,subtypep,claz_compound_type).
struct_opv(z,claz_intersection_type,super_priority,[claz_compound_type,claz_ctype,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_interval,classname,"INTERVAL").
struct_opv(z,claz_interval,classof,claz_built_in_class).
struct_opv(z,claz_interval,name,"HIGH",zlot_interval_high).
struct_opv(z,claz_interval,name,"LOW",zlot_interval_low).
struct_opv(z,claz_interval,slot,high,zlot_interval_high).
struct_opv(z,claz_interval,slot,low,zlot_interval_low).
struct_opv(z,claz_interval,subtypep,claz_structure_object).
struct_opv(z,claz_interval,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_invalid_control_stack_pointer,classname,"INVALID-CONTROL-STACK-POINTER").
struct_opv(z,claz_invalid_control_stack_pointer,classof,claz_built_in_class).
struct_opv(z,claz_invalid_euc_jp_continuation_byte,classname,"INVALID-EUC-JP-CONTINUATION-BYTE").
struct_opv(z,claz_invalid_euc_jp_continuation_byte,classof,claz_built_in_class).
struct_opv(z,claz_invalid_euc_jp_starter_byte,classname,"INVALID-EUC-JP-STARTER-BYTE").
struct_opv(z,claz_invalid_euc_jp_starter_byte,classof,claz_built_in_class).
struct_opv(z,claz_invalid_fasl,classname,"INVALID-FASL").
struct_opv(z,claz_invalid_fasl,classof,claz_built_in_class).
struct_opv(z,claz_invalid_fasl,name,"EXPECTED",zlot_invalid_fasl_expected).
struct_opv(z,claz_invalid_fasl,name,"STREAM",zlot_invalid_fasl_stream).
struct_opv(z,claz_invalid_fasl,slot,expected,zlot_invalid_fasl_expected).
struct_opv(z,claz_invalid_fasl,slot,stream,zlot_invalid_fasl_stream).
struct_opv(z,claz_invalid_fasl_features,classname,"INVALID-FASL-FEATURES").
struct_opv(z,claz_invalid_fasl_features,classof,claz_built_in_class).
struct_opv(z,claz_invalid_fasl_features,name,"FEATURES",zlot_invalid_fasl_features_features).
struct_opv(z,claz_invalid_fasl_features,name,"POTENTIAL-FEATURES",zlot_invalid_fasl_features_potential_features).
struct_opv(z,claz_invalid_fasl_features,slot,features,zlot_invalid_fasl_features_features).
struct_opv(z,claz_invalid_fasl_features,slot,potential_features,zlot_invalid_fasl_features_potential_features).
struct_opv(z,claz_invalid_fasl_features,subtypep,claz_invalid_fasl).
struct_opv(z,claz_invalid_fasl_header,classname,"INVALID-FASL-HEADER").
struct_opv(z,claz_invalid_fasl_header,classof,claz_built_in_class).
struct_opv(z,claz_invalid_fasl_header,name,"BYTE",zlot_invalid_fasl_header_byte).
struct_opv(z,claz_invalid_fasl_header,name,"BYTE-NR",zlot_invalid_fasl_header_byte_nr).
struct_opv(z,claz_invalid_fasl_header,slot,byte,zlot_invalid_fasl_header_byte).
struct_opv(z,claz_invalid_fasl_header,slot,byte_nr,zlot_invalid_fasl_header_byte_nr).
struct_opv(z,claz_invalid_fasl_header,subtypep,claz_invalid_fasl).
struct_opv(z,claz_invalid_fasl_implementation,classname,"INVALID-FASL-IMPLEMENTATION").
struct_opv(z,claz_invalid_fasl_implementation,classof,claz_built_in_class).
struct_opv(z,claz_invalid_fasl_implementation,name,"IMPLEMENTATION",zlot_invalid_fasl_implementation_implementation).
struct_opv(z,claz_invalid_fasl_implementation,slot,implementation,zlot_invalid_fasl_implementation_implementation).
struct_opv(z,claz_invalid_fasl_implementation,subtypep,claz_invalid_fasl).
struct_opv(z,claz_invalid_fasl_version,classname,"INVALID-FASL-VERSION").
struct_opv(z,claz_invalid_fasl_version,classof,claz_built_in_class).
struct_opv(z,claz_invalid_fasl_version,name,"VERSION",zlot_invalid_fasl_version_version).
struct_opv(z,claz_invalid_fasl_version,slot,version,zlot_invalid_fasl_version_version).
struct_opv(z,claz_invalid_fasl_version,subtypep,claz_invalid_fasl).
struct_opv(z,claz_invalid_gbk_continuation_byte,classname,"INVALID-GBK-CONTINUATION-BYTE").
struct_opv(z,claz_invalid_gbk_continuation_byte,classof,claz_built_in_class).
struct_opv(z,claz_invalid_gbk_starter_byte,classname,"INVALID-GBK-STARTER-BYTE").
struct_opv(z,claz_invalid_gbk_starter_byte,classof,claz_built_in_class).
struct_opv(z,claz_invalid_method_initarg,classname,"INVALID-METHOD-INITARG").
struct_opv(z,claz_invalid_method_initarg,classof,claz_built_in_class).
struct_opv(z,claz_invalid_method_initarg,name,"METHOD",zlot_invalid_method_initarg_method).
struct_opv(z,claz_invalid_method_initarg,slot,method,zlot_invalid_method_initarg_method).
struct_opv(z,claz_invalid_shift_jis_continuation_byte,classname,"INVALID-SHIFT-JIS-CONTINUATION-BYTE").
struct_opv(z,claz_invalid_shift_jis_continuation_byte,classof,claz_built_in_class).
struct_opv(z,claz_invalid_shift_jis_starter_byte,classname,"INVALID-SHIFT-JIS-STARTER-BYTE").
struct_opv(z,claz_invalid_shift_jis_starter_byte,classof,claz_built_in_class).
struct_opv(z,claz_invalid_superclass,classname,"INVALID-SUPERCLASS").
struct_opv(z,claz_invalid_superclass,classof,claz_built_in_class).
struct_opv(z,claz_invalid_superclass,name,"CLASS",zlot_invalid_superclass_class).
struct_opv(z,claz_invalid_superclass,name,"SUPERCLASS",zlot_invalid_superclass_superclass).
struct_opv(z,claz_invalid_superclass,slot,class,zlot_invalid_superclass_class).
struct_opv(z,claz_invalid_superclass,slot,superclass,zlot_invalid_superclass_superclass).
struct_opv(z,claz_invalid_utf8_continuation_byte,classname,"INVALID-UTF8-CONTINUATION-BYTE").
struct_opv(z,claz_invalid_utf8_continuation_byte,classof,claz_built_in_class).
struct_opv(z,claz_invalid_utf8_starter_byte,classname,"INVALID-UTF8-STARTER-BYTE").
struct_opv(z,claz_invalid_utf8_starter_byte,classof,claz_built_in_class).
struct_opv(z,claz_invalid_value,classname,"INVALID-VALUE").
struct_opv(z,claz_invalid_value,classof,claz_built_in_class).
struct_opv(z,claz_invalid_value,name,"DEBUG-VAR",zlot_invalid_value_debug_var).
struct_opv(z,claz_invalid_value,name,"FRAME",zlot_invalid_value_frame).
struct_opv(z,claz_invalid_value,slot,debug_var,zlot_invalid_value_debug_var).
struct_opv(z,claz_invalid_value,slot,frame,zlot_invalid_value_frame).
struct_opv(z,claz_io_timeout,classname,"IO-TIMEOUT").
struct_opv(z,claz_io_timeout,classof,claz_built_in_class).
struct_opv(z,claz_io_timeout,name,"DIRECTION",zlot_io_timeout_direction).
struct_opv(z,claz_io_timeout,slot,direction,zlot_io_timeout_direction).
struct_opv(z,claz_io_timeout,subtypep,claz_timeout).
struct_opv(z,claz_ir2_block,classname,"IR2-BLOCK").
struct_opv(z,claz_ir2_block,classof,claz_built_in_class).
struct_opv(z,claz_ir2_block,name,"DROPPED-THRU-TO",zlot_ir2_block_dropped_thru_to).
struct_opv(z,claz_ir2_block,name,"END-STACK",zlot_ir2_block_end_stack).
struct_opv(z,claz_ir2_block,name,"GLOBAL-TNS",zlot_ir2_block_global_tns).
struct_opv(z,claz_ir2_block,name,"LABEL",zlot_ir2_block_label).
struct_opv(z,claz_ir2_block,name,"LAST-VOP",zlot_ir2_block_last_vop).
struct_opv(z,claz_ir2_block,name,"LIVE-IN",zlot_ir2_block_live_in).
struct_opv(z,claz_ir2_block,name,"LIVE-OUT",zlot_ir2_block_live_out).
struct_opv(z,claz_ir2_block,name,"LOCAL-TN-COUNT",zlot_ir2_block_local_tn_count).
struct_opv(z,claz_ir2_block,name,"LOCAL-TNS",zlot_ir2_block_local_tns).
struct_opv(z,claz_ir2_block,name,"LOCATIONS",zlot_ir2_block_locations).
struct_opv(z,claz_ir2_block,name,"NUMBER",zlot_ir2_block_number).
struct_opv(z,claz_ir2_block,name,"POPPED",zlot_ir2_block_popped).
struct_opv(z,claz_ir2_block,name,"PUSHED",zlot_ir2_block_pushed).
struct_opv(z,claz_ir2_block,name,"START-STACK",zlot_ir2_block_start_stack).
struct_opv(z,claz_ir2_block,name,"START-VOP",zlot_ir2_block_start_vop).
struct_opv(z,claz_ir2_block,name,"TRAMPOLINE-LABEL",zlot_ir2_block_trampoline_label).
struct_opv(z,claz_ir2_block,name,"WRITTEN",zlot_ir2_block_written).
struct_opv(z,claz_ir2_block,slot,dropped_thru_to,zlot_ir2_block_dropped_thru_to).
struct_opv(z,claz_ir2_block,slot,end_stack,zlot_ir2_block_end_stack).
struct_opv(z,claz_ir2_block,slot,global_tns,zlot_ir2_block_global_tns).
struct_opv(z,claz_ir2_block,slot,label,zlot_ir2_block_label).
struct_opv(z,claz_ir2_block,slot,last_vop,zlot_ir2_block_last_vop).
struct_opv(z,claz_ir2_block,slot,live_in,zlot_ir2_block_live_in).
struct_opv(z,claz_ir2_block,slot,live_out,zlot_ir2_block_live_out).
struct_opv(z,claz_ir2_block,slot,local_tn_count,zlot_ir2_block_local_tn_count).
struct_opv(z,claz_ir2_block,slot,local_tns,zlot_ir2_block_local_tns).
struct_opv(z,claz_ir2_block,slot,locations,zlot_ir2_block_locations).
struct_opv(z,claz_ir2_block,slot,number,zlot_ir2_block_number).
struct_opv(z,claz_ir2_block,slot,popped,zlot_ir2_block_popped).
struct_opv(z,claz_ir2_block,slot,pushed,zlot_ir2_block_pushed).
struct_opv(z,claz_ir2_block,slot,start_stack,zlot_ir2_block_start_stack).
struct_opv(z,claz_ir2_block,slot,start_vop,zlot_ir2_block_start_vop).
struct_opv(z,claz_ir2_block,slot,trampoline_label,zlot_ir2_block_trampoline_label).
struct_opv(z,claz_ir2_block,slot,written,zlot_ir2_block_written).
struct_opv(z,claz_ir2_block,subtypep,claz_block_annotation).
struct_opv(z,claz_ir2_block,super_priority,[claz_block_annotation,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_ir2_component,classname,"IR2-COMPONENT").
struct_opv(z,claz_ir2_component,classof,claz_built_in_class).
struct_opv(z,claz_ir2_component,name,"ALIAS-TNS",zlot_ir2_component_alias_tns).
struct_opv(z,claz_ir2_component,name,"COMPONENT-TNS",zlot_ir2_component_component_tns).
struct_opv(z,claz_ir2_component,name,"CONSTANT-TNS",zlot_ir2_component_constant_tns).
struct_opv(z,claz_ir2_component,name,"CONSTANTS",zlot_ir2_component_constants).
struct_opv(z,claz_ir2_component,name,"ENTRIES",zlot_ir2_component_entries).
struct_opv(z,claz_ir2_component,name,"FORMAT",zlot_ir2_component_format).
struct_opv(z,claz_ir2_component,name,"GLOBAL-TN-COUNTER",zlot_ir2_component_global_tn_counter).
struct_opv(z,claz_ir2_component,name,"NFP",zlot_ir2_component_nfp).
struct_opv(z,claz_ir2_component,name,"NORMAL-TNS",zlot_ir2_component_normal_tns).
struct_opv(z,claz_ir2_component,name,"RESTRICTED-TNS",zlot_ir2_component_restricted_tns).
struct_opv(z,claz_ir2_component,name,"SPECIFIED-SAVE-TNS",zlot_ir2_component_specified_save_tns).
struct_opv(z,claz_ir2_component,name,"SPILLED-TNS",zlot_ir2_component_spilled_tns).
struct_opv(z,claz_ir2_component,name,"SPILLED-VOPS",zlot_ir2_component_spilled_vops).
struct_opv(z,claz_ir2_component,name,"VALUES-RECEIVERS",zlot_ir2_component_values_receivers).
struct_opv(z,claz_ir2_component,name,"WIRED-TNS",zlot_ir2_component_wired_tns).
struct_opv(z,claz_ir2_component,slot,alias_tns,zlot_ir2_component_alias_tns).
struct_opv(z,claz_ir2_component,slot,component_tns,zlot_ir2_component_component_tns).
struct_opv(z,claz_ir2_component,slot,constant_tns,zlot_ir2_component_constant_tns).
struct_opv(z,claz_ir2_component,slot,constants,zlot_ir2_component_constants).
struct_opv(z,claz_ir2_component,slot,entries,zlot_ir2_component_entries).
struct_opv(z,claz_ir2_component,slot,format,zlot_ir2_component_format).
struct_opv(z,claz_ir2_component,slot,global_tn_counter,zlot_ir2_component_global_tn_counter).
struct_opv(z,claz_ir2_component,slot,nfp,zlot_ir2_component_nfp).
struct_opv(z,claz_ir2_component,slot,normal_tns,zlot_ir2_component_normal_tns).
struct_opv(z,claz_ir2_component,slot,restricted_tns,zlot_ir2_component_restricted_tns).
struct_opv(z,claz_ir2_component,slot,specified_save_tns,zlot_ir2_component_specified_save_tns).
struct_opv(z,claz_ir2_component,slot,spilled_tns,zlot_ir2_component_spilled_tns).
struct_opv(z,claz_ir2_component,slot,spilled_vops,zlot_ir2_component_spilled_vops).
struct_opv(z,claz_ir2_component,slot,values_receivers,zlot_ir2_component_values_receivers).
struct_opv(z,claz_ir2_component,slot,wired_tns,zlot_ir2_component_wired_tns).
struct_opv(z,claz_ir2_component,subtypep,claz_structure_c33_object).
struct_opv(z,claz_ir2_component,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_ir2_lvar,classname,"IR2-LVAR").
struct_opv(z,claz_ir2_lvar,classof,claz_built_in_class).
struct_opv(z,claz_ir2_lvar,name,"KIND",zlot_ir2_lvar_kind).
struct_opv(z,claz_ir2_lvar,name,"LOCS",zlot_ir2_lvar_locs).
struct_opv(z,claz_ir2_lvar,name,"PRIMITIVE-TYPE",zlot_ir2_lvar_primitive_type).
struct_opv(z,claz_ir2_lvar,name,"STACK-POINTER",zlot_ir2_lvar_stack_pointer).
struct_opv(z,claz_ir2_lvar,slot,kind,zlot_ir2_lvar_kind).
struct_opv(z,claz_ir2_lvar,slot,locs,zlot_ir2_lvar_locs).
struct_opv(z,claz_ir2_lvar,slot,primitive_type,zlot_ir2_lvar_primitive_type).
struct_opv(z,claz_ir2_lvar,slot,stack_pointer,zlot_ir2_lvar_stack_pointer).
struct_opv(z,claz_ir2_lvar,subtypep,claz_structure_object).
struct_opv(z,claz_ir2_lvar,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_ir2_nlx_info,classname,"IR2-NLX-INFO").
struct_opv(z,claz_ir2_nlx_info,classof,claz_built_in_class).
struct_opv(z,claz_ir2_nlx_info,name,"DYNAMIC-STATE",zlot_ir2_nlx_info_dynamic_state).
struct_opv(z,claz_ir2_nlx_info,name,"HOME",zlot_ir2_nlx_info_home).
struct_opv(z,claz_ir2_nlx_info,name,"SAVE-SP",zlot_ir2_nlx_info_save_sp).
struct_opv(z,claz_ir2_nlx_info,name,"TARGET",zlot_ir2_nlx_info_target).
struct_opv(z,claz_ir2_nlx_info,slot,dynamic_state,zlot_ir2_nlx_info_dynamic_state).
struct_opv(z,claz_ir2_nlx_info,slot,home,zlot_ir2_nlx_info_home).
struct_opv(z,claz_ir2_nlx_info,slot,save_sp,zlot_ir2_nlx_info_save_sp).
struct_opv(z,claz_ir2_nlx_info,slot,target,zlot_ir2_nlx_info_target).
struct_opv(z,claz_ir2_nlx_info,subtypep,claz_structure_object).
struct_opv(z,claz_ir2_nlx_info,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_ir2_physenv,classname,"IR2-PHYSENV").
struct_opv(z,claz_ir2_physenv,classof,claz_built_in_class).
struct_opv(z,claz_ir2_physenv,name,"BSP-SAVE-TN",zlot_ir2_physenv_bsp_save_tn).
struct_opv(z,claz_ir2_physenv,name,"CLOSURE",zlot_ir2_physenv_closure).
struct_opv(z,claz_ir2_physenv,name,"CLOSURE-SAVE-TN",zlot_ir2_physenv_closure_save_tn).
struct_opv(z,claz_ir2_physenv,name,"DEBUG-LIVE-TNS",zlot_ir2_physenv_debug_live_tns).
struct_opv(z,claz_ir2_physenv,name,"ELSEWHERE-START",zlot_ir2_physenv_elsewhere_start).
struct_opv(z,claz_ir2_physenv,name,"ENVIRONMENT-START",zlot_ir2_physenv_env_start).
struct_opv(z,claz_ir2_physenv,name,"LIVE-TNS",zlot_ir2_physenv_live_tns).
struct_opv(z,claz_ir2_physenv,name,"NUMBER-STACK-P",zlot_ir2_physenv_number_stack_p).
struct_opv(z,claz_ir2_physenv,name,"OLD-FP",zlot_ir2_physenv_old_fp).
struct_opv(z,claz_ir2_physenv,name,"RETURN-PC",zlot_ir2_physenv_return_pc).
struct_opv(z,claz_ir2_physenv,name,"RETURN-PC-PASS",zlot_ir2_physenv_return_pc_pass).
struct_opv(z,claz_ir2_physenv,slot,bsp_save_tn,zlot_ir2_physenv_bsp_save_tn).
struct_opv(z,claz_ir2_physenv,slot,closure,zlot_ir2_physenv_closure).
struct_opv(z,claz_ir2_physenv,slot,closure_save_tn,zlot_ir2_physenv_closure_save_tn).
struct_opv(z,claz_ir2_physenv,slot,debug_live_tns,zlot_ir2_physenv_debug_live_tns).
struct_opv(z,claz_ir2_physenv,slot,elsewhere_start,zlot_ir2_physenv_elsewhere_start).
struct_opv(z,claz_ir2_physenv,slot,env_start,zlot_ir2_physenv_env_start).
struct_opv(z,claz_ir2_physenv,slot,live_tns,zlot_ir2_physenv_live_tns).
struct_opv(z,claz_ir2_physenv,slot,number_stack_p,zlot_ir2_physenv_number_stack_p).
struct_opv(z,claz_ir2_physenv,slot,old_fp,zlot_ir2_physenv_old_fp).
struct_opv(z,claz_ir2_physenv,slot,return_pc,zlot_ir2_physenv_return_pc).
struct_opv(z,claz_ir2_physenv,slot,return_pc_pass,zlot_ir2_physenv_return_pc_pass).
struct_opv(z,claz_ir2_physenv,subtypep,claz_structure_object).
struct_opv(z,claz_ir2_physenv,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_j_reentrant_lock,classname,"J-REENTRANT-LOCK").
struct_opv(z,claz_j_reentrant_lock,classof,claz_built_in_class).
struct_opv(z,claz_j_zip_file,classname,"J-ZIP-FILE").
struct_opv(z,claz_j_zip_file,classof,claz_built_in_class).
struct_opv(z,claz_key_info,classname,"KEY-INFO").
struct_opv(z,claz_key_info,classof,claz_built_in_class).
struct_opv(z,claz_key_info,name,"NAME",zlot_key_info_name).
struct_opv(z,claz_key_info,name,"TYPE",zlot_key_info_type).
struct_opv(z,claz_key_info,slot,name,zlot_key_info_name).
struct_opv(z,claz_key_info,slot,type,zlot_key_info_type).
struct_opv(z,claz_key_info,subtypep,claz_structure_object).
struct_opv(z,claz_key_info,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_label,classname,"LABEL").
struct_opv(z,claz_label,classof,claz_built_in_class).
struct_opv(z,claz_label,subtypep,claz_annotation).
struct_opv(z,claz_label,super_priority,[claz_annotation,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_lambda_list_unavailable,classname,"LAMBDA-LIST-UNAVAILABLE").
struct_opv(z,claz_lambda_list_unavailable,classof,claz_built_in_class).
struct_opv(z,claz_lambda_list_unavailable,name,"DEBUG-FUN",zlot_lambda_list_unavailable_debug_fun).
struct_opv(z,claz_lambda_list_unavailable,slot,debug_fun,zlot_lambda_list_unavailable_debug_fun).
struct_opv(z,claz_lambda_var,classname,"LAMBDA-VAR").
struct_opv(z,claz_lambda_var,classof,claz_built_in_class).
struct_opv(z,claz_lambda_var,name,"ARG-INFO",zlot_lambda_var_arg_info).
struct_opv(z,claz_lambda_var,name,"CONSTRAINTS",zlot_lambda_var_constraints).
struct_opv(z,claz_lambda_var,name,"CTYPE-CONSTRAINTS",zlot_lambda_var_ctype_constraints).
struct_opv(z,claz_lambda_var,name,"EQ-CONSTRAINTS",zlot_lambda_var_eq_constraints).
struct_opv(z,claz_lambda_var,name,"EQL-VAR-CONSTRAINTS",zlot_lambda_var_eql_var_constraints).
struct_opv(z,claz_lambda_var,name,"FLAGS",zlot_lambda_var_flags).
struct_opv(z,claz_lambda_var,name,"FOP-VALUE",zlot_lambda_var_fop_value).
struct_opv(z,claz_lambda_var,name,"HOME",zlot_lambda_var_home).
struct_opv(z,claz_lambda_var,name,"INHERITABLE-CONSTRAINTS",zlot_lambda_var_inheritable_constraints).
struct_opv(z,claz_lambda_var,name,"LAST-INITIAL-TYPE",zlot_lambda_var_last_initial_type).
struct_opv(z,claz_lambda_var,name,"PRIVATE-CONSTRAINTS",zlot_lambda_var_private_constraints).
struct_opv(z,claz_lambda_var,name,"SPECVAR",zlot_lambda_var_specvar).
struct_opv(z,claz_lambda_var,slot,arg_info,zlot_lambda_var_arg_info).
struct_opv(z,claz_lambda_var,slot,constraints,zlot_lambda_var_constraints).
struct_opv(z,claz_lambda_var,slot,ctype_constraints,zlot_lambda_var_ctype_constraints).
struct_opv(z,claz_lambda_var,slot,eq_constraints,zlot_lambda_var_eq_constraints).
struct_opv(z,claz_lambda_var,slot,eql_var_constraints,zlot_lambda_var_eql_var_constraints).
struct_opv(z,claz_lambda_var,slot,flags,zlot_lambda_var_flags).
struct_opv(z,claz_lambda_var,slot,fop_value,zlot_lambda_var_fop_value).
struct_opv(z,claz_lambda_var,slot,home,zlot_lambda_var_home).
struct_opv(z,claz_lambda_var,slot,inheritable_constraints,zlot_lambda_var_inheritable_constraints).
struct_opv(z,claz_lambda_var,slot,last_initial_type,zlot_lambda_var_last_initial_type).
struct_opv(z,claz_lambda_var,slot,private_constraints,zlot_lambda_var_private_constraints).
struct_opv(z,claz_lambda_var,slot,specvar,zlot_lambda_var_specvar).
struct_opv(z,claz_lambda_var,subtypep,claz_basic_var).
struct_opv(z,claz_lambda_var,super_priority,[claz_basic_var,claz_leaf,claz_sset_element,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_leaf,classname,"LEAF").
struct_opv(z,claz_leaf,classof,claz_built_in_class).
struct_opv(z,claz_leaf,name,"DEFINED-TYPE",zlot_leaf_defined_type).
struct_opv(z,claz_leaf,name,"EVER-USED",zlot_leaf_ever_used).
struct_opv(z,claz_leaf,name,"EXTENT",zlot_leaf_extent).
struct_opv(z,claz_leaf,name,"INFO",zlot_leaf_info).
struct_opv(z,claz_leaf,name,"NUMBER",zlot_leaf_number).
struct_opv(z,claz_leaf,name,"REFS",zlot_leaf_refs).
struct_opv(z,claz_leaf,name,"SOURCE-NAME",zlot_leaf_source_name).
struct_opv(z,claz_leaf,name,"TYPE",zlot_leaf_type).
struct_opv(z,claz_leaf,name,"WHERE-FROM",zlot_leaf_where_from).
struct_opv(z,claz_leaf,slot,defined_type,zlot_leaf_defined_type).
struct_opv(z,claz_leaf,slot,ever_used,zlot_leaf_ever_used).
struct_opv(z,claz_leaf,slot,extent,zlot_leaf_extent).
struct_opv(z,claz_leaf,slot,info,zlot_leaf_info).
struct_opv(z,claz_leaf,slot,number,zlot_leaf_number).
struct_opv(z,claz_leaf,slot,refs,zlot_leaf_refs).
struct_opv(z,claz_leaf,slot,source_name,zlot_leaf_source_name).
struct_opv(z,claz_leaf,slot,type,zlot_leaf_type).
struct_opv(z,claz_leaf,slot,where_from,zlot_leaf_where_from).
struct_opv(z,claz_leaf,subtypep,claz_sset_element).
struct_opv(z,claz_leaf,super_priority,[claz_sset_element,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_lexenv,classname,"LEXENV").
struct_opv(z,claz_lexenv,classof,claz_built_in_class).
struct_opv(z,claz_lexenv,name,"BLOCKS",zlot_lexenv_blocks).
struct_opv(z,claz_lexenv,name,"CLEANUP",zlot_lexenv_cleanup).
struct_opv(z,claz_lexenv,name,"DISABLED-PACKAGE-LOCKS",zlot_lexenv_disabled_package_locks).
struct_opv(z,claz_lexenv,name,"FUNS",zlot_lexenv_funs).
struct_opv(z,claz_lexenv,name,"LAMBDA",zlot_lexenv_lambda).
struct_opv(z,claz_lexenv,name,"PARENT",zlot_lexenv_parent).
struct_opv(z,claz_lexenv,name,"POLICY",zlot_lexenv_policy).
struct_opv(z,claz_lexenv,name,"TAGS",zlot_lexenv_tags).
struct_opv(z,claz_lexenv,name,"TYPE-RESTRICTIONS",zlot_lexenv_type_restrictions).
struct_opv(z,claz_lexenv,name,"USER-DATA",zlot_lexenv_user_data).
struct_opv(z,claz_lexenv,name,"VARS",zlot_lexenv_vars).
struct_opv(z,claz_lexenv,slot,blocks,zlot_lexenv_blocks).
struct_opv(z,claz_lexenv,slot,cleanup,zlot_lexenv_cleanup).
struct_opv(z,claz_lexenv,slot,disabled_package_locks,zlot_lexenv_disabled_package_locks).
struct_opv(z,claz_lexenv,slot,funs,zlot_lexenv_funs).
struct_opv(z,claz_lexenv,slot,lambda,zlot_lexenv_lambda).
struct_opv(z,claz_lexenv,slot,parent,zlot_lexenv_parent).
struct_opv(z,claz_lexenv,slot,policy,zlot_lexenv_policy).
struct_opv(z,claz_lexenv,slot,tags,zlot_lexenv_tags).
struct_opv(z,claz_lexenv,slot,type_restrictions,zlot_lexenv_type_restrictions).
struct_opv(z,claz_lexenv,slot,user_data,zlot_lexenv_user_data).
struct_opv(z,claz_lexenv,slot,vars,zlot_lexenv_vars).
struct_opv(z,claz_lexenv,subtypep,claz_abstract_lexenv).
struct_opv(z,claz_lexenv,super_priority,[claz_abstract_lexenv,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_lexical_env_too_complex,classname,"LEXICAL-ENVIRONMENT-TOO-COMPLEX").
struct_opv(z,claz_lexical_env_too_complex,classof,claz_built_in_class).
struct_opv(z,claz_lexical_env_too_complex,name,"FORM",zlot_lexical_env_too_complex_form).
struct_opv(z,claz_lexical_env_too_complex,name,"LEXENV",zlot_lexical_env_too_complex_lexenv).
struct_opv(z,claz_lexical_env_too_complex,slot,form,zlot_lexical_env_too_complex_form).
struct_opv(z,claz_lexical_env_too_complex,slot,lexenv,zlot_lexical_env_too_complex_lexenv).
struct_opv(z,claz_lisp_stack_frame,classname,"LISP-STACK-FRAME").
struct_opv(z,claz_lisp_stack_frame,classof,claz_built_in_class).
struct_opv(z,claz_lisp_stack_frame,name,"ARGS",zlot_lisp_stack_frame_args).
struct_opv(z,claz_lisp_stack_frame,name,"OPERATOR",zlot_lisp_stack_frame_operator).
struct_opv(z,claz_lisp_stack_frame,readonly,t,zlot_lisp_stack_frame_args).
struct_opv(z,claz_lisp_stack_frame,readonly,t,zlot_lisp_stack_frame_operator).
struct_opv(z,claz_lisp_stack_frame,returns,claz_list,zlot_lisp_stack_frame_args).
struct_opv(z,claz_lisp_stack_frame,returns,claz_t,zlot_lisp_stack_frame_operator).
struct_opv(z,claz_lisp_stack_frame,slot,args,zlot_lisp_stack_frame_args).
struct_opv(z,claz_lisp_stack_frame,slot,operator,zlot_lisp_stack_frame_operator).
struct_opv(z,claz_lisp_stack_frame,subtypep,claz_stack_frame).
struct_opv(z,claz_local_alien_info,classname,"LOCAL-ALIEN-INFO").
struct_opv(z,claz_local_alien_info,classof,claz_built_in_class).
struct_opv(z,claz_local_alien_info,name,"FORCE-TO-MEMORY-P",zlot_local_alien_info_force_to_memory_p).
struct_opv(z,claz_local_alien_info,name,"TYPE",zlot_local_alien_info_type).
struct_opv(z,claz_local_alien_info,slot,force_to_memory_p,zlot_local_alien_info_force_to_memory_p).
struct_opv(z,claz_local_alien_info,slot,type,zlot_local_alien_info_type).
struct_opv(z,claz_local_alien_info,subtypep,claz_structure_c33_object).
struct_opv(z,claz_local_alien_info,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_local_argument_mismatch,classname,"LOCAL-ARGUMENT-MISMATCH").
struct_opv(z,claz_local_argument_mismatch,classof,claz_built_in_class).
struct_opv(z,claz_locale_conv,classname,"LOCALE-CONV").
struct_opv(z,claz_locale_conv,classof,claz_built_in_class).
struct_opv(z,claz_locale_conv,name,"CURRENCY-SYMBOL",zlot_locale_conv_currency_symbol).
struct_opv(z,claz_locale_conv,name,"DECIMAL-POINT",zlot_locale_conv_decimal_point).
struct_opv(z,claz_locale_conv,name,"FRAC-DIGITS",zlot_locale_conv_frac_digits).
struct_opv(z,claz_locale_conv,name,"GROUPING",zlot_locale_conv_grouping).
struct_opv(z,claz_locale_conv,name,"INT-CURR-SYMBOL",zlot_locale_conv_int_curr_symbol).
struct_opv(z,claz_locale_conv,name,"INT-FRAC-DIGITS",zlot_locale_conv_int_frac_digits).
struct_opv(z,claz_locale_conv,name,"INT-N-CS-PRECEDES",zlot_locale_conv_int_n_cs_precedes).
struct_opv(z,claz_locale_conv,name,"INT-N-SEP-BY-SPACE",zlot_locale_conv_int_n_sep_by_space).
struct_opv(z,claz_locale_conv,name,"INT-N-SIGN-POSN",zlot_locale_conv_int_n_sign_posn).
struct_opv(z,claz_locale_conv,name,"INT-P-CS-PRECEDES",zlot_locale_conv_int_p_cs_precedes).
struct_opv(z,claz_locale_conv,name,"INT-P-SEP-BY-SPACE",zlot_locale_conv_int_p_sep_by_space).
struct_opv(z,claz_locale_conv,name,"INT-P-SIGN-POSN",zlot_locale_conv_int_p_sign_posn).
struct_opv(z,claz_locale_conv,name,"MON-DECIMAL-POINT",zlot_locale_conv_mon_decimal_point).
struct_opv(z,claz_locale_conv,name,"MON-GROUPING",zlot_locale_conv_mon_grouping).
struct_opv(z,claz_locale_conv,name,"MON-THOUSANDS-SEP",zlot_locale_conv_mon_thousands_sep).
struct_opv(z,claz_locale_conv,name,"N-CS-PRECEDES",zlot_locale_conv_n_cs_precedes).
struct_opv(z,claz_locale_conv,name,"N-SEP-BY-SPACE",zlot_locale_conv_n_sep_by_space).
struct_opv(z,claz_locale_conv,name,"N-SIGN-POSN",zlot_locale_conv_n_sign_posn).
struct_opv(z,claz_locale_conv,name,"NEGATIVE-SIGN",zlot_locale_conv_negative_sign).
struct_opv(z,claz_locale_conv,name,"P-CS-PRECEDES",zlot_locale_conv_p_cs_precedes).
struct_opv(z,claz_locale_conv,name,"P-SEP-BY-SPACE",zlot_locale_conv_p_sep_by_space).
struct_opv(z,claz_locale_conv,name,"P-SIGN-POSN",zlot_locale_conv_p_sign_posn).
struct_opv(z,claz_locale_conv,name,"POSITIVE-SIGN",zlot_locale_conv_positive_sign).
struct_opv(z,claz_locale_conv,name,"THOUSANDS-SEP",zlot_locale_conv_thousands_sep).
struct_opv(z,claz_locale_conv,slot,currency_symbol,zlot_locale_conv_currency_symbol).
struct_opv(z,claz_locale_conv,slot,decimal_point,zlot_locale_conv_decimal_point).
struct_opv(z,claz_locale_conv,slot,frac_digits,zlot_locale_conv_frac_digits).
struct_opv(z,claz_locale_conv,slot,grouping,zlot_locale_conv_grouping).
struct_opv(z,claz_locale_conv,slot,int_curr_symbol,zlot_locale_conv_int_curr_symbol).
struct_opv(z,claz_locale_conv,slot,int_frac_digits,zlot_locale_conv_int_frac_digits).
struct_opv(z,claz_locale_conv,slot,int_n_cs_precedes,zlot_locale_conv_int_n_cs_precedes).
struct_opv(z,claz_locale_conv,slot,int_n_sep_by_space,zlot_locale_conv_int_n_sep_by_space).
struct_opv(z,claz_locale_conv,slot,int_n_sign_posn,zlot_locale_conv_int_n_sign_posn).
struct_opv(z,claz_locale_conv,slot,int_p_cs_precedes,zlot_locale_conv_int_p_cs_precedes).
struct_opv(z,claz_locale_conv,slot,int_p_sep_by_space,zlot_locale_conv_int_p_sep_by_space).
struct_opv(z,claz_locale_conv,slot,int_p_sign_posn,zlot_locale_conv_int_p_sign_posn).
struct_opv(z,claz_locale_conv,slot,mon_decimal_point,zlot_locale_conv_mon_decimal_point).
struct_opv(z,claz_locale_conv,slot,mon_grouping,zlot_locale_conv_mon_grouping).
struct_opv(z,claz_locale_conv,slot,mon_thousands_sep,zlot_locale_conv_mon_thousands_sep).
struct_opv(z,claz_locale_conv,slot,n_cs_precedes,zlot_locale_conv_n_cs_precedes).
struct_opv(z,claz_locale_conv,slot,n_sep_by_space,zlot_locale_conv_n_sep_by_space).
struct_opv(z,claz_locale_conv,slot,n_sign_posn,zlot_locale_conv_n_sign_posn).
struct_opv(z,claz_locale_conv,slot,negative_sign,zlot_locale_conv_negative_sign).
struct_opv(z,claz_locale_conv,slot,p_cs_precedes,zlot_locale_conv_p_cs_precedes).
struct_opv(z,claz_locale_conv,slot,p_sep_by_space,zlot_locale_conv_p_sep_by_space).
struct_opv(z,claz_locale_conv,slot,p_sign_posn,zlot_locale_conv_p_sign_posn).
struct_opv(z,claz_locale_conv,slot,positive_sign,zlot_locale_conv_positive_sign).
struct_opv(z,claz_locale_conv,slot,thousands_sep,zlot_locale_conv_thousands_sep).
struct_opv(z,claz_locale_conv,subtypep,claz_structure_object).
struct_opv(z,claz_locale_conv,super_priority,[claz_structure_object,claz_t]).
struct_opv(z,claz_location_group,classname,"LOCATION-GROUP").
struct_opv(z,claz_location_group,classof,claz_built_in_class).
struct_opv(z,claz_location_group,name,"LOCATIONS",zlot_location_group_locations).
struct_opv(z,claz_location_group,slot,locations,zlot_location_group_locations).
struct_opv(z,claz_location_group,subtypep,claz_structure_object).
struct_opv(z,claz_location_group,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_location_info,classname,"LOCATION-INFO").
struct_opv(z,claz_location_info,classof,claz_built_in_class).
struct_opv(z,claz_location_info,name,"KIND",zlot_location_info_kind).
struct_opv(z,claz_location_info,name,"LABEL",zlot_location_info_label).
struct_opv(z,claz_location_info,name,"VOP",zlot_location_info_vop).
struct_opv(z,claz_location_info,slot,kind,zlot_location_info_kind).
struct_opv(z,claz_location_info,slot,label,zlot_location_info_label).
struct_opv(z,claz_location_info,slot,vop,zlot_location_info_vop).
struct_opv(z,claz_location_info,subtypep,claz_structure_object).
struct_opv(z,claz_location_info,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_logical_block,classname,"LOGICAL-BLOCK").
struct_opv(z,claz_logical_block,classof,claz_built_in_class).
struct_opv(z,claz_logical_block,name,"PER-LINE-PREFIX-END",zlot_logical_block_per_line_prefix_end).
struct_opv(z,claz_logical_block,name,"PREFIX-LENGTH",zlot_logical_block_prefix_length).
struct_opv(z,claz_logical_block,name,"SECTION-COLUMN",zlot_logical_block_section_column).
struct_opv(z,claz_logical_block,name,"SECTION-START-LINE",zlot_logical_block_section_start_line).
struct_opv(z,claz_logical_block,name,"START-COLUMN",zlot_logical_block_start_column).
struct_opv(z,claz_logical_block,name,"SUFFIX-LENGTH",zlot_logical_block_suffix_length).
struct_opv(z,claz_logical_block,slot,per_line_prefix_end,zlot_logical_block_per_line_prefix_end).
struct_opv(z,claz_logical_block,slot,prefix_length,zlot_logical_block_prefix_length).
struct_opv(z,claz_logical_block,slot,section_column,zlot_logical_block_section_column).
struct_opv(z,claz_logical_block,slot,section_start_line,zlot_logical_block_section_start_line).
struct_opv(z,claz_logical_block,slot,start_column,zlot_logical_block_start_column).
struct_opv(z,claz_logical_block,slot,suffix_length,zlot_logical_block_suffix_length).
struct_opv(z,claz_logical_block,subtypep,claz_structure_object).
struct_opv(z,claz_logical_block,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_logical_host,classname,"LOGICAL-HOST").
struct_opv(z,claz_logical_host,classof,claz_built_in_class).
struct_opv(z,claz_logical_host,name,"CANON-TRANSLS",zlot_logical_host_canon_transls).
struct_opv(z,claz_logical_host,name,"CUSTOMARY-CASE",zlot_logical_host_customary_case).
struct_opv(z,claz_logical_host,name,"NAME",zlot_logical_host_name).
struct_opv(z,claz_logical_host,name,"PARSE",zlot_logical_host_parse).
struct_opv(z,claz_logical_host,name,"PARSE-NATIVE",zlot_logical_host_parse_native).
struct_opv(z,claz_logical_host,name,"SIMPLIFY-NAMESTRING",zlot_logical_host_simplify_namestring).
struct_opv(z,claz_logical_host,name,"TRANSLATIONS",zlot_logical_host_translations).
struct_opv(z,claz_logical_host,name,"UNPARSE",zlot_logical_host_unparse).
struct_opv(z,claz_logical_host,name,"UNPARSE-DIRECTORY",zlot_logical_host_unparse_directory).
struct_opv(z,claz_logical_host,name,"UNPARSE-DIRECTORY-SEPARATOR",zlot_logical_host_unparse_directory_separator).
struct_opv(z,claz_logical_host,name,"UNPARSE-ENOUGH",zlot_logical_host_unparse_enough).
struct_opv(z,claz_logical_host,name,"UNPARSE-FILE",zlot_logical_host_unparse_file).
struct_opv(z,claz_logical_host,name,"UNPARSE-HOST",zlot_logical_host_unparse_host).
struct_opv(z,claz_logical_host,name,"UNPARSE-NATIVE",zlot_logical_host_unparse_native).
struct_opv(z,claz_logical_host,slot,canon_transls,zlot_logical_host_canon_transls).
struct_opv(z,claz_logical_host,slot,customary_case,zlot_logical_host_customary_case).
struct_opv(z,claz_logical_host,slot,name,zlot_logical_host_name).
struct_opv(z,claz_logical_host,slot,parse,zlot_logical_host_parse).
struct_opv(z,claz_logical_host,slot,parse_native,zlot_logical_host_parse_native).
struct_opv(z,claz_logical_host,slot,simplify_namestring,zlot_logical_host_simplify_namestring).
struct_opv(z,claz_logical_host,slot,translations,zlot_logical_host_translations).
struct_opv(z,claz_logical_host,slot,unparse,zlot_logical_host_unparse).
struct_opv(z,claz_logical_host,slot,unparse_directory,zlot_logical_host_unparse_directory).
struct_opv(z,claz_logical_host,slot,unparse_directory_separator,zlot_logical_host_unparse_directory_separator).
struct_opv(z,claz_logical_host,slot,unparse_enough,zlot_logical_host_unparse_enough).
struct_opv(z,claz_logical_host,slot,unparse_file,zlot_logical_host_unparse_file).
struct_opv(z,claz_logical_host,slot,unparse_host,zlot_logical_host_unparse_host).
struct_opv(z,claz_logical_host,slot,unparse_native,zlot_logical_host_unparse_native).
struct_opv(z,claz_logical_host,subtypep,claz_host).
struct_opv(z,claz_logical_host,super_priority,[claz_host,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_logical_pathname,classname,"LOGICAL-PATHNAME").
struct_opv(z,claz_logical_pathname,classof,claz_built_in_class).
struct_opv(z,claz_logical_pathname,subtypep,claz_pathname).
struct_opv(z,claz_logical_pathname,super_priority,[claz_pathname,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_logical_pathname,super_priority,[claz_pathname,claz_t]).
struct_opv(z,claz_long,classname,"LONG").
struct_opv(z,claz_long,classof,claz_built_in_class).
struct_opv(z,claz_long_method_combination,classname,"LONG-METHOD-COMBINATION").
struct_opv(z,claz_long_method_combination,classof,claz_built_in_class).
struct_opv(z,claz_long_method_combination,name,"ARGS-LAMBDA-LIST",zlot_long_method_combination_args_lambda_list).
struct_opv(z,claz_long_method_combination,name,"FUNCTION",zlot_long_method_combination_function).
struct_opv(z,claz_long_method_combination,slot,args_lambda_list,zlot_long_method_combination_args_lambda_list).
struct_opv(z,claz_long_method_combination,slot,function,zlot_long_method_combination_function).
struct_opv(z,claz_long_method_combination,subtypep,claz_standard_method_combination).
struct_opv(z,claz_long_method_combination,super_priority,[claz_standard_method_combination,claz_definition_source_mixin,claz_method_combination,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(z,claz_loop_collector,classname,"LOOP-COLLECTOR").
struct_opv(z,claz_loop_collector,classof,claz_built_in_class).
struct_opv(z,claz_loop_collector,name,"CLASS",zlot_loop_collector_class).
struct_opv(z,claz_loop_collector,name,"DATA",zlot_loop_collector_data).
struct_opv(z,claz_loop_collector,name,"DTYPE",zlot_loop_collector_dtype).
struct_opv(z,claz_loop_collector,name,"HISTORY",zlot_loop_collector_history).
struct_opv(z,claz_loop_collector,name,"NAME",zlot_loop_collector_name).
struct_opv(z,claz_loop_collector,name,"SPECIFIED-TYPE",zlot_loop_collector_specified_type).
struct_opv(z,claz_loop_collector,name,"TEMPVARS",zlot_loop_collector_tempvars).
struct_opv(z,claz_loop_collector,slot,class,zlot_loop_collector_class).
struct_opv(z,claz_loop_collector,slot,data,zlot_loop_collector_data).
struct_opv(z,claz_loop_collector,slot,dtype,zlot_loop_collector_dtype).
struct_opv(z,claz_loop_collector,slot,history,zlot_loop_collector_history).
struct_opv(z,claz_loop_collector,slot,name,zlot_loop_collector_name).
struct_opv(z,claz_loop_collector,slot,specified_type,zlot_loop_collector_specified_type).
struct_opv(z,claz_loop_collector,slot,tempvars,zlot_loop_collector_tempvars).
struct_opv(z,claz_loop_collector,subtypep,claz_structure_object).
struct_opv(z,claz_loop_collector,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_loop_initialization,classname,"LOOP-INITIALIZATION").
struct_opv(z,claz_loop_initialization,classof,claz_built_in_class).
struct_opv(z,claz_loop_initialization,name,"BINDINGS",zlot_loop_initialization_bindings).
struct_opv(z,claz_loop_initialization,name,"DECLSPECS",zlot_loop_initialization_declspecs).
struct_opv(z,claz_loop_initialization,name,"DEPENDS-PRECEDING",zlot_loop_initialization_depends_preceding).
struct_opv(z,claz_loop_initialization,name,"ENDTEST-FORMS",zlot_loop_initialization_endtest_forms).
struct_opv(z,claz_loop_initialization,name,"EVERYTIME",zlot_loop_initialization_everytime).
struct_opv(z,claz_loop_initialization,name,"LATER-DEPEND",zlot_loop_initialization_later_depend).
struct_opv(z,claz_loop_initialization,name,"PREAMBLE",zlot_loop_initialization_preamble).
struct_opv(z,claz_loop_initialization,name,"REQUIRES-STEPBEFORE",zlot_loop_initialization_requires_stepbefore).
struct_opv(z,claz_loop_initialization,name,"SPECFORM",zlot_loop_initialization_specform).
struct_opv(z,claz_loop_initialization,slot,bindings,zlot_loop_initialization_bindings).
struct_opv(z,claz_loop_initialization,slot,declspecs,zlot_loop_initialization_declspecs).
struct_opv(z,claz_loop_initialization,slot,depends_preceding,zlot_loop_initialization_depends_preceding).
struct_opv(z,claz_loop_initialization,slot,endtest_forms,zlot_loop_initialization_endtest_forms).
struct_opv(z,claz_loop_initialization,slot,everytime,zlot_loop_initialization_everytime).
struct_opv(z,claz_loop_initialization,slot,later_depend,zlot_loop_initialization_later_depend).
struct_opv(z,claz_loop_initialization,slot,preamble,zlot_loop_initialization_preamble).
struct_opv(z,claz_loop_initialization,slot,requires_stepbefore,zlot_loop_initialization_requires_stepbefore).
struct_opv(z,claz_loop_initialization,slot,specform,zlot_loop_initialization_specform).
struct_opv(z,claz_loop_initialization,subtypep,claz_structure_object).
struct_opv(z,claz_loop_initialization,super_priority,[claz_structure_object,claz_t]).
struct_opv(z,claz_loop_minimax,classname,"LOOP-MINIMAX").
struct_opv(z,claz_loop_minimax,classof,claz_built_in_class).
struct_opv(z,claz_loop_minimax,name,"ANSWER-VARIABLE",zlot_loop_minimax_answer_variable).
struct_opv(z,claz_loop_minimax,name,"FLAG-VARIABLE",zlot_loop_minimax_flag_variable).
struct_opv(z,claz_loop_minimax,name,"INFINITY-DATA",zlot_loop_minimax_infinity_data).
struct_opv(z,claz_loop_minimax,name,"OPERATIONS",zlot_loop_minimax_operations).
struct_opv(z,claz_loop_minimax,name,"TEMP-VARIABLE",zlot_loop_minimax_temp_variable).
struct_opv(z,claz_loop_minimax,name,"TYPE",zlot_loop_minimax_type).
struct_opv(z,claz_loop_minimax,slot,answer_variable,zlot_loop_minimax_answer_variable).
struct_opv(z,claz_loop_minimax,slot,flag_variable,zlot_loop_minimax_flag_variable).
struct_opv(z,claz_loop_minimax,slot,infinity_data,zlot_loop_minimax_infinity_data).
struct_opv(z,claz_loop_minimax,slot,operations,zlot_loop_minimax_operations).
struct_opv(z,claz_loop_minimax,slot,temp_variable,zlot_loop_minimax_temp_variable).
struct_opv(z,claz_loop_minimax,slot,type,zlot_loop_minimax_type).
struct_opv(z,claz_loop_minimax,subtypep,claz_structure_object).
struct_opv(z,claz_loop_minimax,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_loop_path,classname,"LOOP-PATH").
struct_opv(z,claz_loop_path,classof,claz_built_in_class).
struct_opv(z,claz_loop_path,name,"FUNCTION",zlot_loop_path_function).
struct_opv(z,claz_loop_path,name,"INCLUSIVE-PERMITTED",zlot_loop_path_inclusive_permitted).
struct_opv(z,claz_loop_path,name,"NAMES",zlot_loop_path_names).
struct_opv(z,claz_loop_path,name,"PREPOSITION-GROUPS",zlot_loop_path_preposition_groups).
struct_opv(z,claz_loop_path,name,"USER-DATA",zlot_loop_path_user_data).
struct_opv(z,claz_loop_path,slot,function,zlot_loop_path_function).
struct_opv(z,claz_loop_path,slot,inclusive_permitted,zlot_loop_path_inclusive_permitted).
struct_opv(z,claz_loop_path,slot,names,zlot_loop_path_names).
struct_opv(z,claz_loop_path,slot,preposition_groups,zlot_loop_path_preposition_groups).
struct_opv(z,claz_loop_path,slot,user_data,zlot_loop_path_user_data).
struct_opv(z,claz_loop_path,subtypep,claz_structure_object).
struct_opv(z,claz_loop_path,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_loop_universe,classname,"LOOP-UNIVERSE").
struct_opv(z,claz_loop_universe,classof,claz_built_in_class).
struct_opv(z,claz_loop_universe,name,"FOR-KEYWORDS",zlot_loop_universe_for_keywords).
struct_opv(z,claz_loop_universe,name,"ITERATION-KEYWORDS",zlot_loop_universe_iteration_keywords).
struct_opv(z,claz_loop_universe,name,"KEYWORDS",zlot_loop_universe_keywords).
struct_opv(z,claz_loop_universe,name,"PATH-KEYWORDS",zlot_loop_universe_path_keywords).
struct_opv(z,claz_loop_universe,name,"TYPE-KEYWORDS",zlot_loop_universe_type_keywords).
struct_opv(z,claz_loop_universe,name,"TYPE-SYMBOLS",zlot_loop_universe_type_symbols).
struct_opv(z,claz_loop_universe,slot,for_keywords,zlot_loop_universe_for_keywords).
struct_opv(z,claz_loop_universe,slot,iteration_keywords,zlot_loop_universe_iteration_keywords).
struct_opv(z,claz_loop_universe,slot,keywords,zlot_loop_universe_keywords).
struct_opv(z,claz_loop_universe,slot,path_keywords,zlot_loop_universe_path_keywords).
struct_opv(z,claz_loop_universe,slot,type_keywords,zlot_loop_universe_type_keywords).
struct_opv(z,claz_loop_universe,slot,type_symbols,zlot_loop_universe_type_symbols).
struct_opv(z,claz_loop_universe,subtypep,claz_structure_object).
struct_opv(z,claz_loop_universe,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_lra,classname,"LRA").
struct_opv(z,claz_lra,classof,claz_built_in_class).
struct_opv(z,claz_lra,subtypep,claz_t).
struct_opv(z,claz_lra,super_priority,[claz_t]).
struct_opv(z,claz_lvar,classname,"LVAR").
struct_opv(z,claz_lvar,classof,claz_built_in_class).
struct_opv(z,claz_lvar,name,"DERIVED-TYPE",zlot_lvar_derived_type).
struct_opv(z,claz_lvar,name,"DEST",zlot_lvar_dest).
struct_opv(z,claz_lvar,name,"DYNAMIC-EXTENT",zlot_lvar_dynamic_extent).
struct_opv(z,claz_lvar,name,"EXTERNALLY-CHECKABLE-TYPE",zlot_lvar_externally_checkable_type).
struct_opv(z,claz_lvar,name,"INFO",zlot_lvar_info).
struct_opv(z,claz_lvar,name,"REOPTIMIZE",zlot_lvar_reoptimize).
struct_opv(z,claz_lvar,name,"USES",zlot_lvar_uses).
struct_opv(z,claz_lvar,slot,derived_type,zlot_lvar_derived_type).
struct_opv(z,claz_lvar,slot,dest,zlot_lvar_dest).
struct_opv(z,claz_lvar,slot,dynamic_extent,zlot_lvar_dynamic_extent).
struct_opv(z,claz_lvar,slot,externally_checkable_type,zlot_lvar_externally_checkable_type).
struct_opv(z,claz_lvar,slot,info,zlot_lvar_info).
struct_opv(z,claz_lvar,slot,reoptimize,zlot_lvar_reoptimize).
struct_opv(z,claz_lvar,slot,uses,zlot_lvar_uses).
struct_opv(z,claz_lvar,subtypep,claz_structure_c33_object).
struct_opv(z,claz_lvar,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_macro_object,classname,"MACRO-OBJECT").
struct_opv(z,claz_macro_object,classof,claz_built_in_class).
struct_opv(z,claz_macro_object,name,"EXPANDER",zlot_macro_object_expander).
struct_opv(z,claz_macro_object,name,"NAME",zlot_macro_object_name).
struct_opv(z,claz_macro_object,readonly,t,zlot_macro_object_expander).
struct_opv(z,claz_macro_object,readonly,t,zlot_macro_object_name).
struct_opv(z,claz_macro_object,returns,claz_t,zlot_macro_object_expander).
struct_opv(z,claz_macro_object,returns,claz_t,zlot_macro_object_name).
struct_opv(z,claz_macro_object,slot,expander,zlot_macro_object_expander).
struct_opv(z,claz_macro_object,slot,name,zlot_macro_object_name).
struct_opv(z,claz_macro_object,subtypep,claz_function).
struct_opv(z,claz_malformed_ascii,classname,"MALFORMED-ASCII").
struct_opv(z,claz_malformed_ascii,classof,claz_built_in_class).
struct_opv(z,claz_malformed_euc_jp,classname,"MALFORMED-EUC-JP").
struct_opv(z,claz_malformed_euc_jp,classof,claz_built_in_class).
struct_opv(z,claz_malformed_gbk,classname,"MALFORMED-GBK").
struct_opv(z,claz_malformed_gbk,classof,claz_built_in_class).
struct_opv(z,claz_malformed_shift_jis,classname,"MALFORMED-SHIFT-JIS").
struct_opv(z,claz_malformed_shift_jis,classof,claz_built_in_class).
struct_opv(z,claz_match,classname,"MATCH").
struct_opv(z,claz_match,classof,claz_built_in_class).
struct_opv(z,claz_match,name,"END",zlot_match_end).
struct_opv(z,claz_match,name,"START",zlot_match_start).
struct_opv(z,claz_match,slot,end,zlot_match_end).
struct_opv(z,claz_match,slot,start,zlot_match_start).
struct_opv(z,claz_match,subtypep,claz_structure_object).
struct_opv(z,claz_match,super_priority,[claz_structure_object,claz_t]).
struct_opv(z,claz_member_type,classname,"MEMBER-TYPE").
struct_opv(z,claz_member_type,classof,claz_built_in_class).
struct_opv(z,claz_member_type,name,"CLASS-INFO",zlot_member_type_class_info).
struct_opv(z,claz_member_type,name,"FP-ZEROES",zlot_member_type_fp_zeroes).
struct_opv(z,claz_member_type,name,"XSET",zlot_member_type_xset).
struct_opv(z,claz_member_type,slot,class_info,zlot_member_type_class_info).
struct_opv(z,claz_member_type,slot,fp_zeroes,zlot_member_type_fp_zeroes).
struct_opv(z,claz_member_type,slot,xset,zlot_member_type_xset).
struct_opv(z,claz_member_type,subtypep,claz_ctype).
struct_opv(z,claz_member_type,super_priority,[claz_ctype,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_memory_class_loader,classname,"MEMORY-CLASS-LOADER").
struct_opv(z,claz_memory_class_loader,classof,claz_built_in_class).
struct_opv(z,claz_memory_class_loader,name,"BOXED-THIS",zlot_memory_class_loader_boxed_this).
struct_opv(z,claz_memory_class_loader,name,"HASHTABLE",zlot_memory_class_loader_hashtable).
struct_opv(z,claz_memory_class_loader,name,"INTERNAL-NAME-PREFIX",zlot_memory_class_loader_internal_name_prefix).
struct_opv(z,claz_memory_class_loader,readonly,t,zlot_memory_class_loader_boxed_this).
struct_opv(z,claz_memory_class_loader,readonly,t,zlot_memory_class_loader_hashtable).
struct_opv(z,claz_memory_class_loader,readonly,t,zlot_memory_class_loader_internal_name_prefix).
struct_opv(z,claz_memory_class_loader,returns,claz_ffi_object,zlot_memory_class_loader_boxed_this).
struct_opv(z,claz_memory_class_loader,returns,claz_hash_table(claz_string,claz_ffi_object),zlot_memory_class_loader_hashtable).
struct_opv(z,claz_memory_class_loader,returns,claz_string,zlot_memory_class_loader_internal_name_prefix).
struct_opv(z,claz_memory_class_loader,slot,boxed_this,zlot_memory_class_loader_boxed_this).
struct_opv(z,claz_memory_class_loader,slot,hashtable,zlot_memory_class_loader_hashtable).
struct_opv(z,claz_memory_class_loader,slot,internal_name_prefix,zlot_memory_class_loader_internal_name_prefix).
struct_opv(z,claz_memory_class_loader,subtypep,claz_ffi_class_loader).
struct_opv(z,claz_misdesigned_forward_referenced_class,classname,"MISDESIGNED-FORWARD-REFERENCED-CLASS").
struct_opv(z,claz_misdesigned_forward_referenced_class,classof,claz_built_in_class).
struct_opv(z,claz_misdesigned_forward_referenced_class,subtypep,claz_forward_referenced_class).
struct_opv(z,claz_misdesigned_forward_referenced_class,subtypep,claz_potential_class).
struct_opv(z,claz_misdesigned_forward_referenced_class,super_priority,[claz_forward_referenced_class,claz_potential_class,claz_specializer,claz_super_class,claz_standard_stablehash,claz_metaobject,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(z,claz_missing_load_form,classname,"MISSING-LOAD-FORM").
struct_opv(z,claz_missing_load_form,classof,claz_built_in_class).
struct_opv(z,claz_missing_load_form,name,"OBJECT",zlot_missing_load_form_object).
struct_opv(z,claz_missing_load_form,slot,object,zlot_missing_load_form_object).
struct_opv(z,claz_modular_class,classname,"MODULAR-CLASS").
struct_opv(z,claz_modular_class,classof,claz_built_in_class).
struct_opv(z,claz_modular_class,name,"FUNS",zlot_modular_class_funs).
struct_opv(z,claz_modular_class,name,"VERSIONS",zlot_modular_class_versions).
struct_opv(z,claz_modular_class,name,"WIDTHS",zlot_modular_class_widths).
struct_opv(z,claz_modular_class,slot,funs,zlot_modular_class_funs).
struct_opv(z,claz_modular_class,slot,versions,zlot_modular_class_versions).
struct_opv(z,claz_modular_class,slot,widths,zlot_modular_class_widths).
struct_opv(z,claz_modular_class,subtypep,claz_structure_object).
struct_opv(z,claz_modular_class,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_modular_fun_info,classname,"MODULAR-FUN-INFO").
struct_opv(z,claz_modular_fun_info,classof,claz_built_in_class).
struct_opv(z,claz_modular_fun_info,name,"LAMBDA-LIST",zlot_modular_fun_info_lambda_list).
struct_opv(z,claz_modular_fun_info,name,"NAME",zlot_modular_fun_info_name).
struct_opv(z,claz_modular_fun_info,name,"PROTOTYPE",zlot_modular_fun_info_prototype).
struct_opv(z,claz_modular_fun_info,name,"SIGNEDP",zlot_modular_fun_info_signedp).
struct_opv(z,claz_modular_fun_info,name,"WIDTH",zlot_modular_fun_info_width).
struct_opv(z,claz_modular_fun_info,slot,lambda_list,zlot_modular_fun_info_lambda_list).
struct_opv(z,claz_modular_fun_info,slot,name,zlot_modular_fun_info_name).
struct_opv(z,claz_modular_fun_info,slot,prototype,zlot_modular_fun_info_prototype).
struct_opv(z,claz_modular_fun_info,slot,signedp,zlot_modular_fun_info_signedp).
struct_opv(z,claz_modular_fun_info,slot,width,zlot_modular_fun_info_width).
struct_opv(z,claz_modular_fun_info,subtypep,claz_structure_object).
struct_opv(z,claz_modular_fun_info,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_mutex,classname,"MUTEX").
struct_opv(z,claz_mutex,classof,claz_built_in_class).
struct_opv(z,claz_mutex,name,"NAME",zlot_mutex_name).
struct_opv(z,claz_mutex,name,"OWNER",zlot_mutex_owner).
struct_opv(z,claz_mutex,name,"STATE",zlot_mutex_state).
struct_opv(z,claz_mutex,slot,name,zlot_mutex_name).
struct_opv(z,claz_mutex,slot,owner,zlot_mutex_owner).
struct_opv(z,claz_mutex,slot,state,zlot_mutex_state).
struct_opv(z,claz_mutex,subtypep,claz_structure_c33_object).
struct_opv(z,claz_mutex,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_mv_combination,classname,"MV-COMBINATION").
struct_opv(z,claz_mv_combination,classof,claz_built_in_class).
struct_opv(z,claz_mv_combination,subtypep,claz_basic_combination).
struct_opv(z,claz_mv_combination,super_priority,[claz_basic_combination,claz_valued_node,claz_node,claz_sset_element,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_n_n,classname,"N-N").
struct_opv(z,claz_n_n,classof,claz_built_in_class).
struct_opv(z,claz_n_n,subtypep,claz_accessor_dfun_info).
struct_opv(z,claz_n_n,super_priority,[claz_accessor_dfun_info,claz_dfun_info,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_name_conflict,classname,"NAME-CONFLICT").
struct_opv(z,claz_name_conflict,classof,claz_built_in_class).
struct_opv(z,claz_name_conflict,name,"DATUM",zlot_name_conflict_datum).
struct_opv(z,claz_name_conflict,name,"FUNCTION",zlot_name_conflict_function).
struct_opv(z,claz_name_conflict,name,"SYMBOLS",zlot_name_conflict_symbols).
struct_opv(z,claz_name_conflict,slot,datum,zlot_name_conflict_datum).
struct_opv(z,claz_name_conflict,slot,function,zlot_name_conflict_function).
struct_opv(z,claz_name_conflict,slot,symbols,zlot_name_conflict_symbols).
struct_opv(z,claz_named_type,classname,"NAMED-TYPE").
struct_opv(z,claz_named_type,classof,claz_built_in_class).
struct_opv(z,claz_named_type,name,"CLASS-INFO",zlot_named_type_class_info).
struct_opv(z,claz_named_type,name,"NAME",zlot_named_type_name).
struct_opv(z,claz_named_type,slot,class_info,zlot_named_type_class_info).
struct_opv(z,claz_named_type,slot,name,zlot_named_type_name).
struct_opv(z,claz_named_type,subtypep,claz_ctype).
struct_opv(z,claz_named_type,super_priority,[claz_ctype,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_negation_type,classname,"NEGATION-TYPE").
struct_opv(z,claz_negation_type,classof,claz_built_in_class).
struct_opv(z,claz_negation_type,name,"CLASS-INFO",zlot_negation_type_class_info).
struct_opv(z,claz_negation_type,name,"TYPE",zlot_negation_type_type).
struct_opv(z,claz_negation_type,slot,class_info,zlot_negation_type_class_info).
struct_opv(z,claz_negation_type,slot,type,zlot_negation_type_type).
struct_opv(z,claz_negation_type,subtypep,claz_ctype).
struct_opv(z,claz_negation_type,super_priority,[claz_ctype,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_new_value_specialization,classname,"NEW-VALUE-SPECIALIZATION").
struct_opv(z,claz_new_value_specialization,classof,claz_built_in_class).
struct_opv(z,claz_new_value_specialization,name,"METHOD",zlot_new_value_specialization_method).
struct_opv(z,claz_new_value_specialization,slot,method,zlot_new_value_specialization_method).
struct_opv(z,claz_newline,classname,"NEWLINE").
struct_opv(z,claz_newline,classof,claz_built_in_class).
struct_opv(z,claz_newline,name,"KIND",zlot_newline_kind).
struct_opv(z,claz_newline,slot,kind,zlot_newline_kind).
struct_opv(z,claz_newline,subtypep,claz_section_start).
struct_opv(z,claz_newline,super_priority,[claz_section_start,claz_queued_op,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_nil,classname,"NIL").
struct_opv(z,claz_nil,classof,claz_built_in_class).
struct_opv(z,claz_nil,subtypep,claz_symbol).
struct_opv(z,claz_nil_vector,classname,"NIL-VECTOR").
struct_opv(z,claz_nil_vector,classof,claz_built_in_class).
struct_opv(z,claz_nil_vector,name,"CAPACITY",zlot_nil_vector_capacity).
struct_opv(z,claz_nil_vector,returns,claz_integer,zlot_nil_vector_capacity).
struct_opv(z,claz_nil_vector,slot,capacity,zlot_nil_vector_capacity).
struct_opv(z,claz_nil_vector,subtypep,claz_string).
struct_opv(z,claz_nlx_info,classname,"NLX-INFO").
struct_opv(z,claz_nlx_info,classof,claz_built_in_class).
struct_opv(z,claz_nlx_info,name,"BLOCK",zlot_nlx_info_block).
struct_opv(z,claz_nlx_info,name,"CLEANUP",zlot_nlx_info_cleanup).
struct_opv(z,claz_nlx_info,name,"INFO",zlot_nlx_info_info).
struct_opv(z,claz_nlx_info,name,"SAFE-P",zlot_nlx_info_safe_p).
struct_opv(z,claz_nlx_info,name,"TARGET",zlot_nlx_info_target).
struct_opv(z,claz_nlx_info,slot,block,zlot_nlx_info_block).
struct_opv(z,claz_nlx_info,slot,cleanup,zlot_nlx_info_cleanup).
struct_opv(z,claz_nlx_info,slot,info,zlot_nlx_info_info).
struct_opv(z,claz_nlx_info,slot,safe_p,zlot_nlx_info_safe_p).
struct_opv(z,claz_nlx_info,slot,target,zlot_nlx_info_target).
struct_opv(z,claz_nlx_info,subtypep,claz_structure_c33_object).
struct_opv(z,claz_nlx_info,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_no_debug_blocks,classname,"NO-DEBUG-BLOCKS").
struct_opv(z,claz_no_debug_blocks,classof,claz_built_in_class).
struct_opv(z,claz_no_debug_blocks,name,"DEBUG-FUN",zlot_no_debug_blocks_debug_fun).
struct_opv(z,claz_no_debug_blocks,slot,debug_fun,zlot_no_debug_blocks_debug_fun).
struct_opv(z,claz_no_debug_fun_returns,classname,"NO-DEBUG-FUN-RETURNS").
struct_opv(z,claz_no_debug_fun_returns,classof,claz_built_in_class).
struct_opv(z,claz_no_debug_fun_returns,name,"DEBUG-FUN",zlot_no_debug_fun_returns_debug_fun).
struct_opv(z,claz_no_debug_fun_returns,slot,debug_fun,zlot_no_debug_fun_returns_debug_fun).
struct_opv(z,claz_no_debug_vars,classname,"NO-DEBUG-VARS").
struct_opv(z,claz_no_debug_vars,classof,claz_built_in_class).
struct_opv(z,claz_no_debug_vars,name,"DEBUG-FUN",zlot_no_debug_vars_debug_fun).
struct_opv(z,claz_no_debug_vars,slot,debug_fun,zlot_no_debug_vars_debug_fun).
struct_opv(z,claz_no_methods,classname,"NO-METHODS").
struct_opv(z,claz_no_methods,classof,claz_built_in_class).
struct_opv(z,claz_no_methods,subtypep,claz_dfun_info).
struct_opv(z,claz_no_methods,super_priority,[claz_dfun_info,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_no_primary_method,classname,"NO-PRIMARY-METHOD").
struct_opv(z,claz_no_primary_method,classof,claz_built_in_class).
struct_opv(z,claz_no_primary_method,name,"ARGS",zlot_no_primary_method_args).
struct_opv(z,claz_no_primary_method,name,"GENERIC-FUNCTION",zlot_no_primary_method_generic_function).
struct_opv(z,claz_no_primary_method,slot,args,zlot_no_primary_method_args).
struct_opv(z,claz_no_primary_method,slot,generic_function,zlot_no_primary_method_generic_function).
struct_opv(z,claz_node,classname,"NODE").
struct_opv(z,claz_node,classof,claz_built_in_class).
struct_opv(z,claz_node,name,"LEXENV",zlot_node_lexenv).
struct_opv(z,claz_node,name,"NEXT",zlot_node_next).
struct_opv(z,claz_node,name,"NUMBER",zlot_node_number).
struct_opv(z,claz_node,name,"PREV",zlot_node_prev).
struct_opv(z,claz_node,name,"REOPTIMIZE",zlot_node_reoptimize).
struct_opv(z,claz_node,name,"SOURCE-PATH",zlot_node_source_path).
struct_opv(z,claz_node,name,"TAIL-P",zlot_node_tail_p).
struct_opv(z,claz_node,slot,lexenv,zlot_node_lexenv).
struct_opv(z,claz_node,slot,next,zlot_node_next).
struct_opv(z,claz_node,slot,number,zlot_node_number).
struct_opv(z,claz_node,slot,prev,zlot_node_prev).
struct_opv(z,claz_node,slot,reoptimize,zlot_node_reoptimize).
struct_opv(z,claz_node,slot,source_path,zlot_node_source_path).
struct_opv(z,claz_node,slot,tail_p,zlot_node_tail_p).
struct_opv(z,claz_node,subtypep,claz_sset_element).
struct_opv(z,claz_node,super_priority,[claz_sset_element,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_null,classname,"NULL").
struct_opv(z,claz_null,classof,claz_built_in_class).
struct_opv(z,claz_null,subtypep,claz_list).
struct_opv(z,claz_null,subtypep,claz_symbol).
struct_opv(z,claz_null,super_priority,[claz_symbol,claz_list,claz_sequence,claz_t]).
struct_opv(z,claz_number,classname,"NUMBER").
struct_opv(z,claz_number,classof,claz_built_in_class).
struct_opv(z,claz_number,subtypep,claz_t).
struct_opv(z,claz_number,super_priority,[claz_t]).
struct_opv(z,claz_numeric_type,classname,"NUMERIC-TYPE").
struct_opv(z,claz_numeric_type,classof,claz_built_in_class).
struct_opv(z,claz_numeric_type,name,"CLASS",zlot_numeric_type_class).
struct_opv(z,claz_numeric_type,name,"CLASS-INFO",zlot_numeric_type_class_info).
struct_opv(z,claz_numeric_type,name,"COMPLEXP",zlot_numeric_type_complexp).
struct_opv(z,claz_numeric_type,name,"ENUMERABLE",zlot_numeric_type_enumerable).
struct_opv(z,claz_numeric_type,name,"FORMAT",zlot_numeric_type_format).
struct_opv(z,claz_numeric_type,name,"HIGH",zlot_numeric_type_high).
struct_opv(z,claz_numeric_type,name,"LOW",zlot_numeric_type_low).
struct_opv(z,claz_numeric_type,slot,class,zlot_numeric_type_class).
struct_opv(z,claz_numeric_type,slot,class_info,zlot_numeric_type_class_info).
struct_opv(z,claz_numeric_type,slot,complexp,zlot_numeric_type_complexp).
struct_opv(z,claz_numeric_type,slot,enumerable,zlot_numeric_type_enumerable).
struct_opv(z,claz_numeric_type,slot,format,zlot_numeric_type_format).
struct_opv(z,claz_numeric_type,slot,high,zlot_numeric_type_high).
struct_opv(z,claz_numeric_type,slot,low,zlot_numeric_type_low).
struct_opv(z,claz_numeric_type,subtypep,claz_ctype).
struct_opv(z,claz_numeric_type,super_priority,[claz_ctype,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_obsolete_structure,classname,"OBSOLETE-STRUCTURE").
struct_opv(z,claz_obsolete_structure,classof,claz_built_in_class).
struct_opv(z,claz_obsolete_structure,name,"DATUM",zlot_obsolete_structure_datum).
struct_opv(z,claz_obsolete_structure,slot,datum,zlot_obsolete_structure_datum).
struct_opv(z,claz_offs_hook,classname,"OFFS-HOOK").
struct_opv(z,claz_offs_hook,classof,claz_built_in_class).
struct_opv(z,claz_offs_hook,name,"BEFORE-ADDRESS",zlot_offs_hook_before_address).
struct_opv(z,claz_offs_hook,name,"FUN",zlot_offs_hook_fun).
struct_opv(z,claz_offs_hook,name,"OFFSET",zlot_offs_hook_offset).
struct_opv(z,claz_offs_hook,slot,before_address,zlot_offs_hook_before_address).
struct_opv(z,claz_offs_hook,slot,fun,zlot_offs_hook_fun).
struct_opv(z,claz_offs_hook,slot,offset,zlot_offs_hook_offset).
struct_opv(z,claz_offs_hook,subtypep,claz_structure_object).
struct_opv(z,claz_offs_hook,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_one_class,classname,"ONE-CLASS").
struct_opv(z,claz_one_class,classof,claz_built_in_class).
struct_opv(z,claz_one_class,name,"WRAPPER0",zlot_one_class_wrapper0).
struct_opv(z,claz_one_class,slot,wrapper0,zlot_one_class_wrapper0).
struct_opv(z,claz_one_class,subtypep,claz_one_index_dfun_info).
struct_opv(z,claz_one_class,super_priority,[claz_one_index_dfun_info,claz_accessor_dfun_info,claz_dfun_info,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_one_index,classname,"ONE-INDEX").
struct_opv(z,claz_one_index,classof,claz_built_in_class).
struct_opv(z,claz_one_index,subtypep,claz_one_index_dfun_info).
struct_opv(z,claz_one_index,super_priority,[claz_one_index_dfun_info,claz_accessor_dfun_info,claz_dfun_info,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_one_index_dfun_info,classname,"ONE-INDEX-DFUN-INFO").
struct_opv(z,claz_one_index_dfun_info,classof,claz_built_in_class).
struct_opv(z,claz_one_index_dfun_info,name,"INDEX",zlot_one_index_dfun_info_index).
struct_opv(z,claz_one_index_dfun_info,slot,index,zlot_one_index_dfun_info_index).
struct_opv(z,claz_one_index_dfun_info,subtypep,claz_accessor_dfun_info).
struct_opv(z,claz_one_index_dfun_info,super_priority,[claz_accessor_dfun_info,claz_dfun_info,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_operand_parse,classname,"OPERAND-PARSE").
struct_opv(z,claz_operand_parse,classof,claz_built_in_class).
struct_opv(z,claz_operand_parse,name,"BORN",zlot_operand_parse_born).
struct_opv(z,claz_operand_parse,name,"DIES",zlot_operand_parse_dies).
struct_opv(z,claz_operand_parse,name,"KIND",zlot_operand_parse_kind).
struct_opv(z,claz_operand_parse,name,"LOAD",zlot_operand_parse_load).
struct_opv(z,claz_operand_parse,name,"LOAD-TN",zlot_operand_parse_load_tn).
struct_opv(z,claz_operand_parse,name,"NAME",zlot_operand_parse_name).
struct_opv(z,claz_operand_parse,name,"OFFSET",zlot_operand_parse_offset).
struct_opv(z,claz_operand_parse,name,"SC",zlot_operand_parse_sc).
struct_opv(z,claz_operand_parse,name,"SCS",zlot_operand_parse_scs).
struct_opv(z,claz_operand_parse,name,"TARGET",zlot_operand_parse_target).
struct_opv(z,claz_operand_parse,name,"TEMP",zlot_operand_parse_temp).
struct_opv(z,claz_operand_parse,slot,born,zlot_operand_parse_born).
struct_opv(z,claz_operand_parse,slot,dies,zlot_operand_parse_dies).
struct_opv(z,claz_operand_parse,slot,kind,zlot_operand_parse_kind).
struct_opv(z,claz_operand_parse,slot,load,zlot_operand_parse_load).
struct_opv(z,claz_operand_parse,slot,load_tn,zlot_operand_parse_load_tn).
struct_opv(z,claz_operand_parse,slot,name,zlot_operand_parse_name).
struct_opv(z,claz_operand_parse,slot,offset,zlot_operand_parse_offset).
struct_opv(z,claz_operand_parse,slot,sc,zlot_operand_parse_sc).
struct_opv(z,claz_operand_parse,slot,scs,zlot_operand_parse_scs).
struct_opv(z,claz_operand_parse,slot,target,zlot_operand_parse_target).
struct_opv(z,claz_operand_parse,slot,temp,zlot_operand_parse_temp).
struct_opv(z,claz_operand_parse,subtypep,claz_structure_c33_object).
struct_opv(z,claz_operand_parse,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_operator,classname,"OPERATOR").
struct_opv(z,claz_operator,classof,claz_built_in_class).
struct_opv(z,claz_operator,name,"LAMBDA-LIST",zlot_operator_lambda_list).
struct_opv(z,claz_operator,name,"LAMBDA-NAME",zlot_operator_lambda_name).
struct_opv(z,claz_operator,returns,claz_t,zlot_operator_lambda_list).
struct_opv(z,claz_operator,returns,claz_t,zlot_operator_lambda_name).
struct_opv(z,claz_operator,slot,lambda_list,zlot_operator_lambda_list).
struct_opv(z,claz_operator,slot,lambda_name,zlot_operator_lambda_name).
struct_opv(z,claz_operator,subtypep,claz_t).
struct_opv(z,claz_optional_dispatch,classname,"OPTIONAL-DISPATCH").
struct_opv(z,claz_optional_dispatch,classof,claz_built_in_class).
struct_opv(z,claz_optional_dispatch,name,"ALLOWP",zlot_optional_dispatch_allowp).
struct_opv(z,claz_optional_dispatch,name,"ARGLIST",zlot_optional_dispatch_arglist).
struct_opv(z,claz_optional_dispatch,name,"ENTRY-POINTS",zlot_optional_dispatch_entry_points).
struct_opv(z,claz_optional_dispatch,name,"KEYP",zlot_optional_dispatch_keyp).
struct_opv(z,claz_optional_dispatch,name,"MAIN-ENTRY",zlot_optional_dispatch_main_entry).
struct_opv(z,claz_optional_dispatch,name,"MAX-ARGS",zlot_optional_dispatch_max_args).
struct_opv(z,claz_optional_dispatch,name,"MIN-ARGS",zlot_optional_dispatch_min_args).
struct_opv(z,claz_optional_dispatch,name,"MORE-ENTRY",zlot_optional_dispatch_more_entry).
struct_opv(z,claz_optional_dispatch,slot,allowp,zlot_optional_dispatch_allowp).
struct_opv(z,claz_optional_dispatch,slot,arglist,zlot_optional_dispatch_arglist).
struct_opv(z,claz_optional_dispatch,slot,entry_points,zlot_optional_dispatch_entry_points).
struct_opv(z,claz_optional_dispatch,slot,keyp,zlot_optional_dispatch_keyp).
struct_opv(z,claz_optional_dispatch,slot,main_entry,zlot_optional_dispatch_main_entry).
struct_opv(z,claz_optional_dispatch,slot,max_args,zlot_optional_dispatch_max_args).
struct_opv(z,claz_optional_dispatch,slot,min_args,zlot_optional_dispatch_min_args).
struct_opv(z,claz_optional_dispatch,slot,more_entry,zlot_optional_dispatch_more_entry).
struct_opv(z,claz_optional_dispatch,subtypep,claz_functional).
struct_opv(z,claz_optional_dispatch,super_priority,[claz_functional,claz_leaf,claz_sset_element,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_ordered_set,classname,"ORDERED-SET").
struct_opv(z,claz_ordered_set,classof,claz_built_in_class).
struct_opv(z,claz_ordered_set,name,"MEMBERS",zlot_ordered_set_members).
struct_opv(z,claz_ordered_set,slot,members,zlot_ordered_set_members).
struct_opv(z,claz_ordered_set,subtypep,claz_sset).
struct_opv(z,claz_ordered_set,super_priority,[claz_sset,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_overhead,classname,"OVERHEAD").
struct_opv(z,claz_overhead,classof,claz_built_in_class).
struct_opv(z,claz_overhead,name,"CALL",zlot_overhead_call).
struct_opv(z,claz_overhead,name,"INTERNAL",zlot_overhead_internal).
struct_opv(z,claz_overhead,name,"TOTAL",zlot_overhead_total).
struct_opv(z,claz_overhead,slot,call,zlot_overhead_call).
struct_opv(z,claz_overhead,slot,internal,zlot_overhead_internal).
struct_opv(z,claz_overhead,slot,total,zlot_overhead_total).
struct_opv(z,claz_overhead,subtypep,claz_structure_object).
struct_opv(z,claz_overhead,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_overlong_utf8_sequence,classname,"OVERLONG-UTF8-SEQUENCE").
struct_opv(z,claz_overlong_utf8_sequence,classof,claz_built_in_class).
struct_opv(z,claz_package,classname,"PACKAGE").
struct_opv(z,claz_package,classof,claz_built_in_class).
struct_opv(z,claz_package,name,"DOC-STRING",zlot_package_doc_string).
struct_opv(z,claz_package,name,"EXTERNAL-SYMBOLS",zlot_package_external_symbols).
struct_opv(z,claz_package,name,"IMPLEMENTATION-PACKAGES",zlot_package_implementation_packages).
struct_opv(z,claz_package,name,"INTERNAL-SYMBOLS",zlot_package_internal_symbols).
struct_opv(z,claz_package,name,"LOCAL-NICKNAMES",zlot_package_local_nicknames).
struct_opv(z,claz_package,name,"LOCALLY-NICKNAMED-BY",zlot_package_locally_nicknamed_by).
struct_opv(z,claz_package,name,"LOCK",zlot_package_lock).
struct_opv(z,claz_package,name,"MRU-TABLE-INDEX",zlot_package_mru_table_index).
struct_opv(z,claz_package,name,"NAME",zlot_package_name).
struct_opv(z,claz_package,name,"NICKNAMES",zlot_package_nicknames).
struct_opv(z,claz_package,name,"PROPERTY-LIST",zlot_package_property_list).
struct_opv(z,claz_package,name,"SHADOWING-SYMBOLS",zlot_package_shadowing_symbols).
struct_opv(z,claz_package,name,"SOURCE-LOCATION",zlot_package_source_location).
struct_opv(z,claz_package,name,"TABLES",zlot_package_tables).
struct_opv(z,claz_package,name,"USE-LIST",zlot_package_use_list).
struct_opv(z,claz_package,name,"USED-BY-LIST",zlot_package_used_by_list).
struct_opv(z,claz_package,predicate,package_name,zlot_package_name).
struct_opv(z,claz_package,predicate,package_nicknames,zlot_package_nicknames).
struct_opv(z,claz_package,predicate,package_shadowing_symbols,zlot_package_shadowing_symbols).
struct_opv(z,claz_package,predicate,package_use_list,zlot_package_use_list).
struct_opv(z,claz_package,returns,claz_cls_string,zlot_package_name).
struct_opv(z,claz_package,returns,claz_hash_table(claz_string,claz_package),zlot_package_local_nicknames).
struct_opv(z,claz_package,returns,claz_hash_table(claz_string,claz_symbol),zlot_package_external_symbols).
struct_opv(z,claz_package,returns,claz_hash_table(claz_string,claz_symbol),zlot_package_internal_symbols).
struct_opv(z,claz_package,returns,claz_hash_table(claz_string,claz_symbol),zlot_package_shadowing_symbols).
struct_opv(z,claz_package,returns,claz_list,zlot_package_property_list).
struct_opv(z,claz_package,returns,claz_prolog_array_list(claz_package),zlot_package_use_list).
struct_opv(z,claz_package,returns,claz_prolog_array_list(claz_package),zlot_package_used_by_list).
struct_opv(z,claz_package,returns,claz_prolog_array_list(claz_string),zlot_package_nicknames).
struct_opv(z,claz_package,slot,doc_string,zlot_package_doc_string).
struct_opv(z,claz_package,slot,external_symbols,zlot_package_external_symbols).
struct_opv(z,claz_package,slot,implementation_packages,zlot_package_implementation_packages).
struct_opv(z,claz_package,slot,internal_symbols,zlot_package_internal_symbols).
struct_opv(z,claz_package,slot,local_nicknames,zlot_package_local_nicknames).
struct_opv(z,claz_package,slot,locally_nicknamed_by,zlot_package_locally_nicknamed_by).
struct_opv(z,claz_package,slot,lock,zlot_package_lock).
struct_opv(z,claz_package,slot,mru_table_index,zlot_package_mru_table_index).
struct_opv(z,claz_package,slot,name,zlot_package_name).
struct_opv(z,claz_package,slot,nicknames,zlot_package_nicknames).
struct_opv(z,claz_package,slot,property_list,zlot_package_property_list).
struct_opv(z,claz_package,slot,shadowing_symbols,zlot_package_shadowing_symbols).
struct_opv(z,claz_package,slot,source_location,zlot_package_source_location).
struct_opv(z,claz_package,slot,tables,zlot_package_tables).
struct_opv(z,claz_package,slot,use_list,zlot_package_use_list).
struct_opv(z,claz_package,slot,used_by_list,zlot_package_used_by_list).
struct_opv(z,claz_package,subtypep,claz_structure_object).
struct_opv(z,claz_package,subtypep,claz_t).
struct_opv(z,claz_package,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_package,super_priority,[claz_t]).
struct_opv(z,claz_package_at_variance,classname,"PACKAGE-AT-VARIANCE").
struct_opv(z,claz_package_at_variance,classof,claz_built_in_class).
struct_opv(z,claz_package_hashtable,classname,"PACKAGE-HASHTABLE").
struct_opv(z,claz_package_hashtable,classof,claz_built_in_class).
struct_opv(z,claz_package_hashtable,name,"CELLS",zlot_package_hashtable_cells).
struct_opv(z,claz_package_hashtable,name,"DELETED",zlot_package_hashtable_deleted).
struct_opv(z,claz_package_hashtable,name,"FREE",zlot_package_hashtable_free).
struct_opv(z,claz_package_hashtable,name,"SIZE",zlot_package_hashtable_size).
struct_opv(z,claz_package_hashtable,slot,cells,zlot_package_hashtable_cells).
struct_opv(z,claz_package_hashtable,slot,deleted,zlot_package_hashtable_deleted).
struct_opv(z,claz_package_hashtable,slot,free,zlot_package_hashtable_free).
struct_opv(z,claz_package_hashtable,slot,size,zlot_package_hashtable_size).
struct_opv(z,claz_package_hashtable,subtypep,claz_structure_object).
struct_opv(z,claz_package_hashtable,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_package_lock_violation,classname,"PACKAGE-LOCK-VIOLATION").
struct_opv(z,claz_package_lock_violation,classof,claz_built_in_class).
struct_opv(z,claz_package_lock_violation,name,"CURRENT-PACKAGE",zlot_package_lock_violation_current_package).
struct_opv(z,claz_package_lock_violation,slot,current_package,zlot_package_lock_violation_current_package).
struct_opv(z,claz_parse_deprecated_type,classname,"PARSE-DEPRECATED-TYPE").
struct_opv(z,claz_parse_deprecated_type,classof,claz_built_in_class).
struct_opv(z,claz_parse_deprecated_type,name,"SPECIFIER",zlot_parse_deprecated_type_specifier).
struct_opv(z,claz_parse_deprecated_type,slot,specifier,zlot_parse_deprecated_type_specifier).
struct_opv(z,claz_parse_unknown_type,classname,"PARSE-UNKNOWN-TYPE").
struct_opv(z,claz_parse_unknown_type,classof,claz_built_in_class).
struct_opv(z,claz_parse_unknown_type,name,"SPECIFIER",zlot_parse_unknown_type_specifier).
struct_opv(z,claz_parse_unknown_type,slot,specifier,zlot_parse_unknown_type_specifier).
struct_opv(z,claz_pathname,classname,"PATHNAME").
struct_opv(z,claz_pathname,classof,claz_built_in_class).
struct_opv(z,claz_pathname,name,"DEVICE",zlot_pathname_device).
struct_opv(z,claz_pathname,name,"DIRECTORY",zlot_pathname_directory).
struct_opv(z,claz_pathname,name,"HOST",zlot_pathname_host).
struct_opv(z,claz_pathname,name,"NAME",zlot_pathname_name).
struct_opv(z,claz_pathname,name,"NAMESTRING",zlot_pathname_namestring).
struct_opv(z,claz_pathname,name,"TYPE",zlot_pathname_type).
struct_opv(z,claz_pathname,name,"VERSION",zlot_pathname_version).
struct_opv(z,claz_pathname,returns,claz_string,zlot_pathname_namestring).
struct_opv(z,claz_pathname,returns,claz_t,zlot_pathname_device).
struct_opv(z,claz_pathname,returns,claz_t,zlot_pathname_directory).
struct_opv(z,claz_pathname,returns,claz_t,zlot_pathname_host).
struct_opv(z,claz_pathname,returns,claz_t,zlot_pathname_name).
struct_opv(z,claz_pathname,returns,claz_t,zlot_pathname_type).
struct_opv(z,claz_pathname,returns,claz_t,zlot_pathname_version).
struct_opv(z,claz_pathname,slot,device,zlot_pathname_device).
struct_opv(z,claz_pathname,slot,directory,zlot_pathname_directory).
struct_opv(z,claz_pathname,slot,host,zlot_pathname_host).
struct_opv(z,claz_pathname,slot,name,zlot_pathname_name).
struct_opv(z,claz_pathname,slot,namestring,zlot_pathname_namestring).
struct_opv(z,claz_pathname,slot,type,zlot_pathname_type).
struct_opv(z,claz_pathname,slot,version,zlot_pathname_version).
struct_opv(z,claz_pathname,subtypep,claz_structure_object).
struct_opv(z,claz_pathname,subtypep,claz_t).
struct_opv(z,claz_pathname,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_pathname,super_priority,[claz_t]).
struct_opv(z,claz_pattern,classname,"PATTERN").
struct_opv(z,claz_pattern,classof,claz_built_in_class).
struct_opv(z,claz_pattern,name,"PIECES",zlot_pattern_pieces).
struct_opv(z,claz_pattern,slot,pieces,zlot_pattern_pieces).
struct_opv(z,claz_pattern,subtypep,claz_structure_c33_object).
struct_opv(z,claz_pattern,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_pcl_class,classname,"PCL-CLASS").
struct_opv(z,claz_pcl_class,classof,claz_built_in_class).
struct_opv(z,claz_pcl_class,name,"CAN-PRECEDE-LIST",zlot_pcl_class_can_precede_list).
struct_opv(z,claz_pcl_class,name,"CLASS-PRECEDENCE-LIST",zlot_pcl_class_class_precedence_list).
struct_opv(z,claz_pcl_class,name,"CPL-AVAILABLE-P",zlot_pcl_class_cpl_available_p).
struct_opv(z,claz_pcl_class,name,"INCOMPATIBLE-SUPERCLASS-LIST",zlot_pcl_class_incompatible_superclass_list).
struct_opv(z,claz_pcl_class,name,"PROTOTYPE",zlot_pcl_class_prototype).
struct_opv(z,claz_pcl_class,name,"WRAPPER",zlot_pcl_class_wrapper).
struct_opv(z,claz_pcl_class,slot,can_precede_list,zlot_pcl_class_can_precede_list).
struct_opv(z,claz_pcl_class,slot,class_precedence_list,zlot_pcl_class_class_precedence_list).
struct_opv(z,claz_pcl_class,slot,cpl_available_p,zlot_pcl_class_cpl_available_p).
struct_opv(z,claz_pcl_class,slot,incompatible_superclass_list,zlot_pcl_class_incompatible_superclass_list).
struct_opv(z,claz_pcl_class,slot,prototype,zlot_pcl_class_prototype).
struct_opv(z,claz_pcl_class,slot,wrapper,zlot_pcl_class_wrapper).
struct_opv(z,claz_pcl_class,subtypep,claz_class).
struct_opv(z,claz_pcl_class,super_priority,[claz_class,claz_dependent_update_mixin,claz_plist_mixin,claz_definition_source_mixin,claz_standard_specializer,claz_specializer,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(z,claz_pf_method_function,classname,"PF-METHOD-FUNCTION").
struct_opv(z,claz_pf_method_function,classof,claz_built_in_class).
struct_opv(z,claz_pf_method_function,name,"FAST-FUNCTION",zlot_pf_method_function_fast_function).
struct_opv(z,claz_pf_method_function,name,"NAME",zlot_pf_method_function_name).
struct_opv(z,claz_pf_method_function,slot,fast_function,zlot_pf_method_function_fast_function).
struct_opv(z,claz_pf_method_function,slot,name,zlot_pf_method_function_name).
struct_opv(z,claz_pf_method_function,subtypep,claz_function).
struct_opv(z,claz_pf_method_function,super_priority,[claz_t]).
struct_opv(z,claz_physenv,classname,"PHYSENV").
struct_opv(z,claz_physenv,classof,claz_built_in_class).
struct_opv(z,claz_physenv,name,"CLOSURE",zlot_physenv_closure).
struct_opv(z,claz_physenv,name,"INFO",zlot_physenv_info).
struct_opv(z,claz_physenv,name,"LAMBDA",zlot_physenv_lambda).
struct_opv(z,claz_physenv,name,"NLX-INFO",zlot_physenv_nlx_info).
struct_opv(z,claz_physenv,slot,closure,zlot_physenv_closure).
struct_opv(z,claz_physenv,slot,info,zlot_physenv_info).
struct_opv(z,claz_physenv,slot,lambda,zlot_physenv_lambda).
struct_opv(z,claz_physenv,slot,nlx_info,zlot_physenv_nlx_info).
struct_opv(z,claz_physenv,subtypep,claz_structure_c33_object).
struct_opv(z,claz_physenv,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_plist_mixin,classname,"PLIST-MIXIN").
struct_opv(z,claz_plist_mixin,classof,claz_built_in_class).
struct_opv(z,claz_plist_mixin,name,"PLIST",zlot_plist_mixin_plist).
struct_opv(z,claz_plist_mixin,slot,plist,zlot_plist_mixin_plist).
struct_opv(z,claz_plist_mixin,subtypep,claz_standard_object).
struct_opv(z,claz_plist_mixin,super_priority,[claz_standard_object,claz_slot_object,claz_t]).
struct_opv(z,claz_policy,classname,"POLICY").
struct_opv(z,claz_policy,classof,claz_built_in_class).
struct_opv(z,claz_policy,name,"DEPENDENT-QUALITIES",zlot_policy_dependent_qualities).
struct_opv(z,claz_policy,name,"PRESENCE-BITS",zlot_policy_presence_bits).
struct_opv(z,claz_policy,name,"PRIMARY-QUALITIES",zlot_policy_primary_qualities).
struct_opv(z,claz_policy,slot,dependent_qualities,zlot_policy_dependent_qualities).
struct_opv(z,claz_policy,slot,presence_bits,zlot_policy_presence_bits).
struct_opv(z,claz_policy,slot,primary_qualities,zlot_policy_primary_qualities).
struct_opv(z,claz_policy,subtypep,claz_structure_object).
struct_opv(z,claz_policy,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_policy_dependent_quality,classname,"POLICY-DEPENDENT-QUALITY").
struct_opv(z,claz_policy_dependent_quality,classof,claz_built_in_class).
struct_opv(z,claz_policy_dependent_quality,name,"EXPRESSION",zlot_policy_dependent_quality_expression).
struct_opv(z,claz_policy_dependent_quality,name,"GETTER",zlot_policy_dependent_quality_getter).
struct_opv(z,claz_policy_dependent_quality,name,"NAME",zlot_policy_dependent_quality_name).
struct_opv(z,claz_policy_dependent_quality,name,"VALUES-DOCUMENTATION",zlot_policy_dependent_quality_values_documentation).
struct_opv(z,claz_policy_dependent_quality,slot,expression,zlot_policy_dependent_quality_expression).
struct_opv(z,claz_policy_dependent_quality,slot,getter,zlot_policy_dependent_quality_getter).
struct_opv(z,claz_policy_dependent_quality,slot,name,zlot_policy_dependent_quality_name).
struct_opv(z,claz_policy_dependent_quality,slot,values_documentation,zlot_policy_dependent_quality_values_documentation).
struct_opv(z,claz_policy_dependent_quality,subtypep,claz_structure_object).
struct_opv(z,claz_policy_dependent_quality,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_pollfds,classname,"POLLFDS").
struct_opv(z,claz_pollfds,classof,claz_built_in_class).
struct_opv(z,claz_pollfds,name,"FDS",zlot_pollfds_fds).
struct_opv(z,claz_pollfds,name,"LIST",zlot_pollfds_list).
struct_opv(z,claz_pollfds,name,"MAP",zlot_pollfds_map).
struct_opv(z,claz_pollfds,name,"N-FDS",zlot_pollfds_n_fds).
struct_opv(z,claz_pollfds,slot,fds,zlot_pollfds_fds).
struct_opv(z,claz_pollfds,slot,list,zlot_pollfds_list).
struct_opv(z,claz_pollfds,slot,map,zlot_pollfds_map).
struct_opv(z,claz_pollfds,slot,n_fds,zlot_pollfds_n_fds).
struct_opv(z,claz_pollfds,subtypep,claz_structure_object).
struct_opv(z,claz_pollfds,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_potential_class,classname,"POTENTIAL-CLASS").
struct_opv(z,claz_potential_class,classof,claz_built_in_class).
struct_opv(z,claz_potential_class,subtypep,claz_specializer).
struct_opv(z,claz_potential_class,subtypep,claz_super_class).
struct_opv(z,claz_potential_class,super_priority,[claz_specializer,claz_super_class,claz_standard_stablehash,claz_metaobject,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(z,claz_pprint_dispatch_entry,classname,"PPRINT-DISPATCH-ENTRY").
struct_opv(z,claz_pprint_dispatch_entry,classof,claz_built_in_class).
struct_opv(z,claz_pprint_dispatch_entry,name,"FUN",zlot_pprint_dispatch_entry_fun).
struct_opv(z,claz_pprint_dispatch_entry,name,"INITIAL-P",zlot_pprint_dispatch_entry_initial_p).
struct_opv(z,claz_pprint_dispatch_entry,name,"PRIORITY",zlot_pprint_dispatch_entry_priority).
struct_opv(z,claz_pprint_dispatch_entry,name,"TEST-FN",zlot_pprint_dispatch_entry_test_fn).
struct_opv(z,claz_pprint_dispatch_entry,name,"TYPE",zlot_pprint_dispatch_entry_type).
struct_opv(z,claz_pprint_dispatch_entry,slot,fun,zlot_pprint_dispatch_entry_fun).
struct_opv(z,claz_pprint_dispatch_entry,slot,initial_p,zlot_pprint_dispatch_entry_initial_p).
struct_opv(z,claz_pprint_dispatch_entry,slot,priority,zlot_pprint_dispatch_entry_priority).
struct_opv(z,claz_pprint_dispatch_entry,slot,test_fn,zlot_pprint_dispatch_entry_test_fn).
struct_opv(z,claz_pprint_dispatch_entry,slot,type,zlot_pprint_dispatch_entry_type).
struct_opv(z,claz_pprint_dispatch_entry,subtypep,claz_structure_object).
struct_opv(z,claz_pprint_dispatch_entry,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_pprint_dispatch_table,classname,"PPRINT-DISPATCH-TABLE").
struct_opv(z,claz_pprint_dispatch_table,classof,claz_built_in_class).
struct_opv(z,claz_pprint_dispatch_table,name,"CONS-ENTRIES",zlot_pprint_dispatch_table_cons_entries).
struct_opv(z,claz_pprint_dispatch_table,name,"ENTRIES",zlot_pprint_dispatch_table_entries).
struct_opv(z,claz_pprint_dispatch_table,slot,cons_entries,zlot_pprint_dispatch_table_cons_entries).
struct_opv(z,claz_pprint_dispatch_table,slot,entries,zlot_pprint_dispatch_table_entries).
struct_opv(z,claz_pprint_dispatch_table,subtypep,claz_structure_object).
struct_opv(z,claz_pprint_dispatch_table,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_prim_object_slot,classname,"PRIM-OBJECT-SLOT").
struct_opv(z,claz_prim_object_slot,classof,claz_built_in_class).
struct_opv(z,claz_prim_object_slot,name,"DOCS",zlot_prim_object_slot_docs).
struct_opv(z,claz_prim_object_slot,name,"NAME",zlot_prim_object_slot_name).
struct_opv(z,claz_prim_object_slot,name,"OFFSET",zlot_prim_object_slot_offset).
struct_opv(z,claz_prim_object_slot,name,"OPTIONS",zlot_prim_object_slot_options).
struct_opv(z,claz_prim_object_slot,name,"REST-P",zlot_prim_object_slot_rest_p).
struct_opv(z,claz_prim_object_slot,name,"SPECIAL",zlot_prim_object_slot_special).
struct_opv(z,claz_prim_object_slot,slot,docs,zlot_prim_object_slot_docs).
struct_opv(z,claz_prim_object_slot,slot,name,zlot_prim_object_slot_name).
struct_opv(z,claz_prim_object_slot,slot,offset,zlot_prim_object_slot_offset).
struct_opv(z,claz_prim_object_slot,slot,options,zlot_prim_object_slot_options).
struct_opv(z,claz_prim_object_slot,slot,rest_p,zlot_prim_object_slot_rest_p).
struct_opv(z,claz_prim_object_slot,slot,special,zlot_prim_object_slot_special).
struct_opv(z,claz_prim_object_slot,subtypep,claz_structure_c33_object).
struct_opv(z,claz_prim_object_slot,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_primitive,classname,"PRIMITIVE").
struct_opv(z,claz_primitive,classof,claz_built_in_class).
struct_opv(z,claz_primitive,subtypep,claz_function).
struct_opv(z,claz_primitive_object,classname,"PRIMITIVE-OBJECT").
struct_opv(z,claz_primitive_object,classof,claz_built_in_class).
struct_opv(z,claz_primitive_object,name,"LOWTAG",zlot_primitive_object_lowtag).
struct_opv(z,claz_primitive_object,name,"NAME",zlot_primitive_object_name).
struct_opv(z,claz_primitive_object,name,"OPTIONS",zlot_primitive_object_options).
struct_opv(z,claz_primitive_object,name,"SIZE",zlot_primitive_object_size).
struct_opv(z,claz_primitive_object,name,"SLOTS",zlot_primitive_object_slots).
struct_opv(z,claz_primitive_object,name,"VARIABLE-LENGTH-P",zlot_primitive_object_variable_length_p).
struct_opv(z,claz_primitive_object,name,"WIDETAG",zlot_primitive_object_widetag).
struct_opv(z,claz_primitive_object,slot,lowtag,zlot_primitive_object_lowtag).
struct_opv(z,claz_primitive_object,slot,name,zlot_primitive_object_name).
struct_opv(z,claz_primitive_object,slot,options,zlot_primitive_object_options).
struct_opv(z,claz_primitive_object,slot,size,zlot_primitive_object_size).
struct_opv(z,claz_primitive_object,slot,slots,zlot_primitive_object_slots).
struct_opv(z,claz_primitive_object,slot,variable_length_p,zlot_primitive_object_variable_length_p).
struct_opv(z,claz_primitive_object,slot,widetag,zlot_primitive_object_widetag).
struct_opv(z,claz_primitive_object,subtypep,claz_structure_c33_object).
struct_opv(z,claz_primitive_object,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_primitive_type,classname,"PRIMITIVE-TYPE").
struct_opv(z,claz_primitive_type,classof,claz_built_in_class).
struct_opv(z,claz_primitive_type,name,"CHECK",zlot_primitive_type_check).
struct_opv(z,claz_primitive_type,name,"NAME",zlot_primitive_type_name).
struct_opv(z,claz_primitive_type,name,"SCS",zlot_primitive_type_scs).
struct_opv(z,claz_primitive_type,name,"SPECIFIER",zlot_primitive_type_specifier).
struct_opv(z,claz_primitive_type,slot,check,zlot_primitive_type_check).
struct_opv(z,claz_primitive_type,slot,name,zlot_primitive_type_name).
struct_opv(z,claz_primitive_type,slot,scs,zlot_primitive_type_scs).
struct_opv(z,claz_primitive_type,slot,specifier,zlot_primitive_type_specifier).
struct_opv(z,claz_primitive_type,subtypep,claz_structure_object).
struct_opv(z,claz_primitive_type,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_primitives_pf_finalize,classname,"PRIMITIVES-PF-FINALIZE").
struct_opv(z,claz_primitives_pf_finalize,classof,claz_built_in_class).
struct_opv(z,claz_primitives_pf_finalize_1,classname,"PRIMITIVES-PF-FINALIZE-1").
struct_opv(z,claz_primitives_pf_finalize_1,classof,claz_built_in_class).
struct_opv(z,claz_primitives_pf_finalize_1,name,"THIS-0",zlot_primitives_pf_finalize_1_this_0).
struct_opv(z,claz_primitives_pf_finalize_1,name,"THREAD",zlot_primitives_pf_finalize_1_thread).
struct_opv(z,claz_primitives_pf_finalize_1,name,"VAL-FUN",zlot_primitives_pf_finalize_1_val_fun).
struct_opv(z,claz_primitives_pf_finalize_1,readonly,t,zlot_primitives_pf_finalize_1_this_0).
struct_opv(z,claz_primitives_pf_finalize_1,readonly,t,zlot_primitives_pf_finalize_1_val_fun).
struct_opv(z,claz_primitives_pf_finalize_1,returns,claz_primitives_pf_finalize,zlot_primitives_pf_finalize_1_this_0).
struct_opv(z,claz_primitives_pf_finalize_1,returns,claz_prolog_thread,zlot_primitives_pf_finalize_1_thread).
struct_opv(z,claz_primitives_pf_finalize_1,returns,claz_t,zlot_primitives_pf_finalize_1_val_fun).
struct_opv(z,claz_primitives_pf_finalize_1,slot,this_0,zlot_primitives_pf_finalize_1_this_0).
struct_opv(z,claz_primitives_pf_finalize_1,slot,thread,zlot_primitives_pf_finalize_1_thread).
struct_opv(z,claz_primitives_pf_finalize_1,slot,val_fun,zlot_primitives_pf_finalize_1_val_fun).
struct_opv(z,claz_print_not_readable,classname,"PRINT-NOT-READABLE").
struct_opv(z,claz_print_not_readable,classof,claz_built_in_class).
struct_opv(z,claz_print_not_readable,name,"OBJECT",zlot_print_not_readable_object).
struct_opv(z,claz_print_not_readable,slot,object,zlot_print_not_readable_object).
struct_opv(z,claz_print_object_stream_specializer,classname,"PRINT-OBJECT-STREAM-SPECIALIZER").
struct_opv(z,claz_print_object_stream_specializer,classof,claz_built_in_class).
struct_opv(z,claz_priority_queue,classname,"PRIORITY-QUEUE").
struct_opv(z,claz_priority_queue,classof,claz_built_in_class).
struct_opv(z,claz_priority_queue,name,"CONTENTS",zlot_priority_queue_contents).
struct_opv(z,claz_priority_queue,name,"KEYFUN",zlot_priority_queue_keyfun).
struct_opv(z,claz_priority_queue,slot,contents,zlot_priority_queue_contents).
struct_opv(z,claz_priority_queue,slot,keyfun,zlot_priority_queue_keyfun).
struct_opv(z,claz_priority_queue,subtypep,claz_structure_object).
struct_opv(z,claz_priority_queue,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_process,classname,"PROCESS").
struct_opv(z,claz_process,classof,claz_built_in_class).
struct_opv(z,claz_process,name,"COOKIE",zlot_process_cookie).
struct_opv(z,claz_process,name,"CORE-DUMPED",zlot_process_core_dumped).
struct_opv(z,claz_process,name,"EXIT-CODE",zlot_process_exit_code).
struct_opv(z,claz_process,name,"INPUT",zlot_process_input).
struct_opv(z,claz_process,name,"OUTPUT",zlot_process_output).
struct_opv(z,claz_process,name,"PID",zlot_process_pid).
struct_opv(z,claz_process,name,"PLIST",zlot_process_plist).
struct_opv(z,claz_process,name,"PTY",zlot_process_pty).
struct_opv(z,claz_process,name,"STATUS",zlot_process_status).
struct_opv(z,claz_process,name,"STATUS-HOOK",zlot_process_status_hook).
struct_opv(z,claz_process,slot,cookie,zlot_process_cookie).
struct_opv(z,claz_process,slot,core_dumped,zlot_process_core_dumped).
struct_opv(z,claz_process,slot,exit_code,zlot_process_exit_code).
struct_opv(z,claz_process,slot,input,zlot_process_input).
struct_opv(z,claz_process,slot,output,zlot_process_output).
struct_opv(z,claz_process,slot,pid,zlot_process_pid).
struct_opv(z,claz_process,slot,plist,zlot_process_plist).
struct_opv(z,claz_process,slot,pty,zlot_process_pty).
struct_opv(z,claz_process,slot,status,zlot_process_status).
struct_opv(z,claz_process,slot,status_hook,zlot_process_status_hook).
struct_opv(z,claz_process,subtypep,claz_structure_object).
struct_opv(z,claz_process,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_processing_terminated,classname,"PROCESSING-TERMINATED").
struct_opv(z,claz_processing_terminated,classof,claz_built_in_class).
struct_opv(z,claz_processing_terminated,name,"STATUS",zlot_processing_terminated_status).
struct_opv(z,claz_processing_terminated,returns,claz_integer,zlot_processing_terminated_status).
struct_opv(z,claz_processing_terminated,slot,status,zlot_processing_terminated_status).
struct_opv(z,claz_proclamation_mismatch,classname,"PROCLAMATION-MISMATCH").
struct_opv(z,claz_proclamation_mismatch,classof,claz_built_in_class).
struct_opv(z,claz_proclamation_mismatch,name,"DESCRIPTION",zlot_proclamation_mismatch_description).
struct_opv(z,claz_proclamation_mismatch,name,"KIND",zlot_proclamation_mismatch_kind).
struct_opv(z,claz_proclamation_mismatch,name,"NAME",zlot_proclamation_mismatch_name).
struct_opv(z,claz_proclamation_mismatch,name,"NEW",zlot_proclamation_mismatch_new).
struct_opv(z,claz_proclamation_mismatch,name,"OLD",zlot_proclamation_mismatch_old).
struct_opv(z,claz_proclamation_mismatch,slot,description,zlot_proclamation_mismatch_description).
struct_opv(z,claz_proclamation_mismatch,slot,kind,zlot_proclamation_mismatch_kind).
struct_opv(z,claz_proclamation_mismatch,slot,name,zlot_proclamation_mismatch_name).
struct_opv(z,claz_proclamation_mismatch,slot,new,zlot_proclamation_mismatch_new).
struct_opv(z,claz_proclamation_mismatch,slot,old,zlot_proclamation_mismatch_old).
struct_opv(z,claz_profile_info,classname,"PROFILE-INFO").
struct_opv(z,claz_profile_info,classof,claz_built_in_class).
struct_opv(z,claz_profile_info,name,"CLEAR-STATS-FUN",zlot_profile_info_clear_stats_fun).
struct_opv(z,claz_profile_info,name,"ENCAPSULATED-FUN",zlot_profile_info_encapsulated_fun).
struct_opv(z,claz_profile_info,name,"ENCAPSULATION-FUN",zlot_profile_info_encapsulation_fun).
struct_opv(z,claz_profile_info,name,"NAME",zlot_profile_info_name).
struct_opv(z,claz_profile_info,name,"READ-STATS-FUN",zlot_profile_info_read_stats_fun).
struct_opv(z,claz_profile_info,slot,clear_stats_fun,zlot_profile_info_clear_stats_fun).
struct_opv(z,claz_profile_info,slot,encapsulated_fun,zlot_profile_info_encapsulated_fun).
struct_opv(z,claz_profile_info,slot,encapsulation_fun,zlot_profile_info_encapsulation_fun).
struct_opv(z,claz_profile_info,slot,name,zlot_profile_info_name).
struct_opv(z,claz_profile_info,slot,read_stats_fun,zlot_profile_info_read_stats_fun).
struct_opv(z,claz_profile_info,subtypep,claz_structure_object).
struct_opv(z,claz_profile_info,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_profiler_1,classname,"PROFILER-1").
struct_opv(z,claz_profiler_1,classof,claz_built_in_class).
struct_opv(z,claz_profiler_1_1,classname,"PROFILER-1-1").
struct_opv(z,claz_profiler_1_1,classof,claz_built_in_class).
struct_opv(z,claz_profiler_1_1,name,"THIS-0",zlot_profiler_1_1_this_0).
struct_opv(z,claz_profiler_1_1,name,"THREAD",zlot_profiler_1_1_thread).
struct_opv(z,claz_profiler_1_1,name,"VAL-THREAD",zlot_profiler_1_1_val_thread).
struct_opv(z,claz_profiler_1_1,readonly,t,zlot_profiler_1_1_this_0).
struct_opv(z,claz_profiler_1_1,readonly,t,zlot_profiler_1_1_val_thread).
struct_opv(z,claz_profiler_1_1,returns,claz_lisp_thread,zlot_profiler_1_1_val_thread).
struct_opv(z,claz_profiler_1_1,returns,claz_profiler_1,zlot_profiler_1_1_this_0).
struct_opv(z,claz_profiler_1_1,returns,claz_prolog_thread,zlot_profiler_1_1_thread).
struct_opv(z,claz_profiler_1_1,slot,this_0,zlot_profiler_1_1_this_0).
struct_opv(z,claz_profiler_1_1,slot,thread,zlot_profiler_1_1_thread).
struct_opv(z,claz_profiler_1_1,slot,val_thread,zlot_profiler_1_1_val_thread).
struct_opv(z,claz_prolog_array_list(claz_package),classname,"PROLOG-ARRAY-LIST").
struct_opv(z,claz_prolog_array_list(claz_package),classof,claz_built_in_class).
struct_opv(z,claz_prolog_array_list(claz_string),classname,"PROLOG-ARRAY-LIST").
struct_opv(z,claz_prolog_array_list(claz_string),classof,claz_built_in_class).
struct_opv(z,claz_prolog_big_integer,classname,"PROLOG-BIG-INTEGER").
struct_opv(z,claz_prolog_big_integer,classof,claz_built_in_class).
struct_opv(z,claz_prolog_buffered_reader,classname,"PROLOG-BUFFERED-READER").
struct_opv(z,claz_prolog_buffered_reader,classof,claz_built_in_class).
struct_opv(z,claz_prolog_byte_buffer,classname,"PROLOG-BYTE-BUFFER").
struct_opv(z,claz_prolog_byte_buffer,classof,claz_built_in_class).
struct_opv(z,claz_prolog_char_buffer,classname,"PROLOG-CHAR-BUFFER").
struct_opv(z,claz_prolog_char_buffer,classof,claz_built_in_class).
struct_opv(z,claz_prolog_charset,classname,"PROLOG-CHARSET").
struct_opv(z,claz_prolog_charset,classof,claz_built_in_class).
struct_opv(z,claz_prolog_charset_decoder,classname,"PROLOG-CHARSET-DECODER").
struct_opv(z,claz_prolog_charset_decoder,classof,claz_built_in_class).
struct_opv(z,claz_prolog_charset_encoder,classname,"PROLOG-CHARSET-ENCODER").
struct_opv(z,claz_prolog_charset_encoder,classof,claz_built_in_class).
struct_opv(z,claz_prolog_class,classname,"PROLOG-CLASS").
struct_opv(z,claz_prolog_class,classof,claz_built_in_class).
struct_opv(z,claz_prolog_file_channel,classname,"PROLOG-FILE-CHANNEL").
struct_opv(z,claz_prolog_file_channel,classof,claz_built_in_class).
struct_opv(z,claz_prolog_handler_entry,classname,"PROLOG-HANDLER-ENTRY").
struct_opv(z,claz_prolog_handler_entry,classof,claz_built_in_class).
struct_opv(z,claz_prolog_handler_entry,name,"COUNT",zlot_prolog_handler_entry_count).
struct_opv(z,claz_prolog_handler_entry,name,"DATA",zlot_prolog_handler_entry_data).
struct_opv(z,claz_prolog_handler_entry,name,"ENTRY-TABLE",zlot_prolog_handler_entry_entry_table).
struct_opv(z,claz_prolog_handler_entry,name,"EVENT",zlot_prolog_handler_entry_event).
struct_opv(z,claz_prolog_handler_entry,name,"HANDLER",zlot_prolog_handler_entry_handler).
struct_opv(z,claz_prolog_handler_entry,returns,claz_function,zlot_prolog_handler_entry_handler).
struct_opv(z,claz_prolog_handler_entry,returns,claz_integer,zlot_prolog_handler_entry_count).
struct_opv(z,claz_prolog_handler_entry,returns,claz_prolog_map(claz_string,claz_prolog_handler_entry),zlot_prolog_handler_entry_entry_table).
struct_opv(z,claz_prolog_handler_entry,returns,claz_string,zlot_prolog_handler_entry_event).
struct_opv(z,claz_prolog_handler_entry,returns,claz_t,zlot_prolog_handler_entry_data).
struct_opv(z,claz_prolog_handler_entry,slot,count,zlot_prolog_handler_entry_count).
struct_opv(z,claz_prolog_handler_entry,slot,data,zlot_prolog_handler_entry_data).
struct_opv(z,claz_prolog_handler_entry,slot,entry_table,zlot_prolog_handler_entry_entry_table).
struct_opv(z,claz_prolog_handler_entry,slot,event,zlot_prolog_handler_entry_event).
struct_opv(z,claz_prolog_handler_entry,slot,handler,zlot_prolog_handler_entry_handler).
struct_opv(z,claz_prolog_iterator(claz_prolog_character),classname,"PROLOG-ITERATOR").
struct_opv(z,claz_prolog_iterator(claz_prolog_character),classof,claz_built_in_class).
struct_opv(z,claz_prolog_linked_list(claz_prolog_runnable),classname,"PROLOG-LINKED-LIST").
struct_opv(z,claz_prolog_linked_list(claz_prolog_runnable),classof,claz_built_in_class).
struct_opv(z,claz_prolog_malformed_input_exception,classname,"PROLOG-MALFORMED-INPUT-EXCEPTION").
struct_opv(z,claz_prolog_malformed_input_exception,classof,claz_built_in_class).
struct_opv(z,claz_prolog_map(claz_prolog_reference,claz_prolog_weak_hash_entry),classname,"PROLOG-MAP").
struct_opv(z,claz_prolog_map(claz_prolog_reference,claz_prolog_weak_hash_entry),classof,claz_built_in_class).
struct_opv(z,claz_prolog_map(claz_string,claz_function),classname,"PROLOG-MAP").
struct_opv(z,claz_prolog_map(claz_string,claz_function),classof,claz_built_in_class).
struct_opv(z,claz_prolog_map(claz_string,claz_prolog_handler_entry),classname,"PROLOG-MAP").
struct_opv(z,claz_prolog_map(claz_string,claz_prolog_handler_entry),classof,claz_built_in_class).
struct_opv(z,claz_prolog_map,classname,"PROLOG-MAP").
struct_opv(z,claz_prolog_map,classof,claz_built_in_class).
struct_opv(z,claz_prolog_object,classname,"PROLOG-OBJECT").
struct_opv(z,claz_prolog_object,classof,claz_built_in_class).
struct_opv(z,claz_prolog_proxy_entry,classname,"PROLOG-PROXY-ENTRY").
struct_opv(z,claz_prolog_proxy_entry,classof,claz_built_in_class).
struct_opv(z,claz_prolog_proxy_entry,name,"IFACE",zlot_prolog_proxy_entry_iface).
struct_opv(z,claz_prolog_proxy_entry,name,"LISP-DEFINED-METHODS",zlot_prolog_proxy_entry_lisp_defined_methods).
struct_opv(z,claz_prolog_proxy_entry,returns,claz_prolog_class,zlot_prolog_proxy_entry_iface).
struct_opv(z,claz_prolog_proxy_entry,returns,claz_prolog_map,zlot_prolog_proxy_entry_lisp_defined_methods).
struct_opv(z,claz_prolog_proxy_entry,slot,iface,zlot_prolog_proxy_entry_iface).
struct_opv(z,claz_prolog_proxy_entry,slot,lisp_defined_methods,zlot_prolog_proxy_entry_lisp_defined_methods).
struct_opv(z,claz_prolog_proxy_lisp_handler,classname,"PROLOG-PROXY-LISP-HANDLER").
struct_opv(z,claz_prolog_proxy_lisp_handler,classof,claz_built_in_class).
struct_opv(z,claz_prolog_proxy_lisp_handler,name,"TABLE",zlot_prolog_proxy_lisp_handler_table).
struct_opv(z,claz_prolog_proxy_lisp_handler,returns,claz_prolog_map,zlot_prolog_proxy_lisp_handler_table).
struct_opv(z,claz_prolog_proxy_lisp_handler,slot,table,zlot_prolog_proxy_lisp_handler_table).
struct_opv(z,claz_prolog_proxy_lisp_invocation_handler,classname,"PROLOG-PROXY-LISP-INVOCATION-HANDLER").
struct_opv(z,claz_prolog_proxy_lisp_invocation_handler,classof,claz_built_in_class).
struct_opv(z,claz_prolog_proxy_lisp_invocation_handler,name,"FUNCTION",zlot_prolog_proxy_lisp_invocation_handler_function).
struct_opv(z,claz_prolog_proxy_lisp_invocation_handler,returns,claz_function,zlot_prolog_proxy_lisp_invocation_handler_function).
struct_opv(z,claz_prolog_proxy_lisp_invocation_handler,slot,function,zlot_prolog_proxy_lisp_invocation_handler_function).
struct_opv(z,claz_prolog_pushback_reader,classname,"PROLOG-PUSHBACK-READER").
struct_opv(z,claz_prolog_pushback_reader,classof,claz_built_in_class).
struct_opv(z,claz_prolog_random,classname,"PROLOG-RANDOM").
struct_opv(z,claz_prolog_random,classof,claz_built_in_class).
struct_opv(z,claz_prolog_reader,classname,"PROLOG-READER").
struct_opv(z,claz_prolog_reader,classof,claz_built_in_class).
struct_opv(z,claz_prolog_reference_queue(claz_t),classname,"PROLOG-REFERENCE-QUEUE").
struct_opv(z,claz_prolog_reference_queue(claz_t),classof,claz_built_in_class).
struct_opv(z,claz_prolog_repl_console,classname,"PROLOG-REPL-CONSOLE").
struct_opv(z,claz_prolog_repl_console,classof,claz_built_in_class).
struct_opv(z,claz_prolog_repl_console,name,"DEBUGGER-HOOK",zlot_prolog_repl_console_debugger_hook).
struct_opv(z,claz_prolog_repl_console,name,"DISPOSED",zlot_prolog_repl_console_disposed).
struct_opv(z,claz_prolog_repl_console,name,"INPUT-BUFFER",zlot_prolog_repl_console_input_buffer).
struct_opv(z,claz_prolog_repl_console,name,"READER",zlot_prolog_repl_console_reader).
struct_opv(z,claz_prolog_repl_console,name,"REPL-THREAD",zlot_prolog_repl_console_repl_thread).
struct_opv(z,claz_prolog_repl_console,name,"WRITER",zlot_prolog_repl_console_writer).
struct_opv(z,claz_prolog_repl_console,readonly,t,zlot_prolog_repl_console_debugger_hook).
struct_opv(z,claz_prolog_repl_console,readonly,t,zlot_prolog_repl_console_repl_thread).
struct_opv(z,claz_prolog_repl_console,returns,claz_boolean,zlot_prolog_repl_console_disposed).
struct_opv(z,claz_prolog_repl_console,returns,claz_prolog_reader,zlot_prolog_repl_console_reader).
struct_opv(z,claz_prolog_repl_console,returns,claz_prolog_string_buffer,zlot_prolog_repl_console_input_buffer).
struct_opv(z,claz_prolog_repl_console,returns,claz_prolog_thread,zlot_prolog_repl_console_repl_thread).
struct_opv(z,claz_prolog_repl_console,returns,claz_prolog_writer,zlot_prolog_repl_console_writer).
struct_opv(z,claz_prolog_repl_console,returns,claz_t,zlot_prolog_repl_console_debugger_hook).
struct_opv(z,claz_prolog_repl_console,slot,debugger_hook,zlot_prolog_repl_console_debugger_hook).
struct_opv(z,claz_prolog_repl_console,slot,disposed,zlot_prolog_repl_console_disposed).
struct_opv(z,claz_prolog_repl_console,slot,input_buffer,zlot_prolog_repl_console_input_buffer).
struct_opv(z,claz_prolog_repl_console,slot,reader,zlot_prolog_repl_console_reader).
struct_opv(z,claz_prolog_repl_console,slot,repl_thread,zlot_prolog_repl_console_repl_thread).
struct_opv(z,claz_prolog_repl_console,slot,writer,zlot_prolog_repl_console_writer).
struct_opv(z,claz_prolog_runtime_exception,classname,"PROLOG-RUNTIME-EXCEPTION").
struct_opv(z,claz_prolog_runtime_exception,classof,claz_built_in_class).
struct_opv(z,claz_prolog_socket,classname,"PROLOG-SOCKET").
struct_opv(z,claz_prolog_socket,classof,claz_built_in_class).
struct_opv(z,claz_prolog_stack_trace_element,classname,"PROLOG-STACK-TRACE-ELEMENT").
struct_opv(z,claz_prolog_stack_trace_element,classof,claz_built_in_class).
struct_opv(z,claz_prolog_string_buffer,classname,"PROLOG-STRING-BUFFER").
struct_opv(z,claz_prolog_string_buffer,classof,claz_built_in_class).
struct_opv(z,claz_prolog_string_reader,classname,"PROLOG-STRING-READER").
struct_opv(z,claz_prolog_string_reader,classof,claz_built_in_class).
struct_opv(z,claz_prolog_string_writer,classname,"PROLOG-STRING-WRITER").
struct_opv(z,claz_prolog_string_writer,classof,claz_built_in_class).
struct_opv(z,claz_prolog_thread,classname,"PROLOG-THREAD").
struct_opv(z,claz_prolog_thread,classof,claz_built_in_class).
struct_opv(z,claz_prolog_throwable,classname,"PROLOG-THROWABLE").
struct_opv(z,claz_prolog_throwable,classof,claz_built_in_class).
struct_opv(z,claz_prolog_unmappable_character_exception,classname,"PROLOG-UNMAPPABLE-CHARACTER-EXCEPTION").
struct_opv(z,claz_prolog_unmappable_character_exception,classof,claz_built_in_class).
struct_opv(z,claz_prolog_url_class_loader,classname,"PROLOG-URL-CLASS-LOADER").
struct_opv(z,claz_prolog_url_class_loader,classof,claz_built_in_class).
struct_opv(z,claz_prolog_weak_hash_entry,classname,"PROLOG-WEAK-HASH-ENTRY").
struct_opv(z,claz_prolog_weak_hash_entry,classof,claz_built_in_class).
struct_opv(z,claz_prolog_weak_hash_entry,name,"HASH",zlot_prolog_weak_hash_entry_hash).
struct_opv(z,claz_prolog_weak_hash_entry,name,"KEY",zlot_prolog_weak_hash_entry_key).
struct_opv(z,claz_prolog_weak_hash_entry,name,"NEXT",zlot_prolog_weak_hash_entry_next).
struct_opv(z,claz_prolog_weak_hash_entry,name,"SLOT",zlot_prolog_weak_hash_entry_slot).
struct_opv(z,claz_prolog_weak_hash_entry,name,"THIS-0",zlot_prolog_weak_hash_entry_this_0).
struct_opv(z,claz_prolog_weak_hash_entry,name,"VALUE",zlot_prolog_weak_hash_entry_value).
struct_opv(z,claz_prolog_weak_hash_entry,readonly,t,zlot_prolog_weak_hash_entry_this_0).
struct_opv(z,claz_prolog_weak_hash_entry,returns,claz_integer,zlot_prolog_weak_hash_entry_hash).
struct_opv(z,claz_prolog_weak_hash_entry,returns,claz_integer,zlot_prolog_weak_hash_entry_slot).
struct_opv(z,claz_prolog_weak_hash_entry,returns,claz_prolog_weak_hash_entry,zlot_prolog_weak_hash_entry_next).
struct_opv(z,claz_prolog_weak_hash_entry,returns,claz_t,zlot_prolog_weak_hash_entry_key).
struct_opv(z,claz_prolog_weak_hash_entry,returns,claz_t,zlot_prolog_weak_hash_entry_value).
struct_opv(z,claz_prolog_weak_hash_entry,returns,claz_weak_hash_table,zlot_prolog_weak_hash_entry_this_0).
struct_opv(z,claz_prolog_weak_hash_entry,slot,hash,zlot_prolog_weak_hash_entry_hash).
struct_opv(z,claz_prolog_weak_hash_entry,slot,key,zlot_prolog_weak_hash_entry_key).
struct_opv(z,claz_prolog_weak_hash_entry,slot,next,zlot_prolog_weak_hash_entry_next).
struct_opv(z,claz_prolog_weak_hash_entry,slot,slot,zlot_prolog_weak_hash_entry_slot).
struct_opv(z,claz_prolog_weak_hash_entry,slot,this_0,zlot_prolog_weak_hash_entry_this_0).
struct_opv(z,claz_prolog_weak_hash_entry,slot,value,zlot_prolog_weak_hash_entry_value).
struct_opv(z,claz_prolog_weak_hash_entry_weak_key,classname,"PROLOG-WEAK-HASH-ENTRY-WEAK-KEY").
struct_opv(z,claz_prolog_weak_hash_entry_weak_key,classof,claz_built_in_class).
struct_opv(z,claz_prolog_weak_hash_entry_weak_key,name,"KEY",zlot_prolog_weak_hash_entry_weak_key_key).
struct_opv(z,claz_prolog_weak_hash_entry_weak_key,name,"THIS-0",zlot_prolog_weak_hash_entry_weak_key_this_0).
struct_opv(z,claz_prolog_weak_hash_entry_weak_key,readonly,t,zlot_prolog_weak_hash_entry_weak_key_this_0).
struct_opv(z,claz_prolog_weak_hash_entry_weak_key,returns,claz_prolog_weak_reference(claz_t),zlot_prolog_weak_hash_entry_weak_key_key).
struct_opv(z,claz_prolog_weak_hash_entry_weak_key,returns,claz_weak_hash_table,zlot_prolog_weak_hash_entry_weak_key_this_0).
struct_opv(z,claz_prolog_weak_hash_entry_weak_key,slot,key,zlot_prolog_weak_hash_entry_weak_key_key).
struct_opv(z,claz_prolog_weak_hash_entry_weak_key,slot,this_0,zlot_prolog_weak_hash_entry_weak_key_this_0).
struct_opv(z,claz_prolog_weak_hash_entry_weak_key_and_value,classname,"PROLOG-WEAK-HASH-ENTRY-WEAK-KEY-AND-VALUE").
struct_opv(z,claz_prolog_weak_hash_entry_weak_key_and_value,classof,claz_built_in_class).
struct_opv(z,claz_prolog_weak_hash_entry_weak_key_and_value,name,"KEY",zlot_prolog_weak_hash_entry_weak_key_and_value_key).
struct_opv(z,claz_prolog_weak_hash_entry_weak_key_and_value,name,"THIS-0",zlot_prolog_weak_hash_entry_weak_key_and_value_this_0).
struct_opv(z,claz_prolog_weak_hash_entry_weak_key_and_value,name,"VALUE",zlot_prolog_weak_hash_entry_weak_key_and_value_value).
struct_opv(z,claz_prolog_weak_hash_entry_weak_key_and_value,readonly,t,zlot_prolog_weak_hash_entry_weak_key_and_value_this_0).
struct_opv(z,claz_prolog_weak_hash_entry_weak_key_and_value,returns,claz_prolog_weak_reference(claz_t),zlot_prolog_weak_hash_entry_weak_key_and_value_key).
struct_opv(z,claz_prolog_weak_hash_entry_weak_key_and_value,returns,claz_prolog_weak_reference(claz_t),zlot_prolog_weak_hash_entry_weak_key_and_value_value).
struct_opv(z,claz_prolog_weak_hash_entry_weak_key_and_value,returns,claz_weak_hash_table,zlot_prolog_weak_hash_entry_weak_key_and_value_this_0).
struct_opv(z,claz_prolog_weak_hash_entry_weak_key_and_value,slot,key,zlot_prolog_weak_hash_entry_weak_key_and_value_key).
struct_opv(z,claz_prolog_weak_hash_entry_weak_key_and_value,slot,this_0,zlot_prolog_weak_hash_entry_weak_key_and_value_this_0).
struct_opv(z,claz_prolog_weak_hash_entry_weak_key_and_value,slot,value,zlot_prolog_weak_hash_entry_weak_key_and_value_value).
struct_opv(z,claz_prolog_weak_hash_entry_weak_key_or_value,classname,"PROLOG-WEAK-HASH-ENTRY-WEAK-KEY-OR-VALUE").
struct_opv(z,claz_prolog_weak_hash_entry_weak_key_or_value,classof,claz_built_in_class).
struct_opv(z,claz_prolog_weak_hash_entry_weak_key_or_value,name,"THIS-0",zlot_prolog_weak_hash_entry_weak_key_or_value_this_0).
struct_opv(z,claz_prolog_weak_hash_entry_weak_key_or_value,readonly,t,zlot_prolog_weak_hash_entry_weak_key_or_value_this_0).
struct_opv(z,claz_prolog_weak_hash_entry_weak_key_or_value,returns,claz_weak_hash_table,zlot_prolog_weak_hash_entry_weak_key_or_value_this_0).
struct_opv(z,claz_prolog_weak_hash_entry_weak_key_or_value,slot,this_0,zlot_prolog_weak_hash_entry_weak_key_or_value_this_0).
struct_opv(z,claz_prolog_weak_hash_entry_weak_value,classname,"PROLOG-WEAK-HASH-ENTRY-WEAK-VALUE").
struct_opv(z,claz_prolog_weak_hash_entry_weak_value,classof,claz_built_in_class).
struct_opv(z,claz_prolog_weak_hash_entry_weak_value,name,"THIS-0",zlot_prolog_weak_hash_entry_weak_value_this_0).
struct_opv(z,claz_prolog_weak_hash_entry_weak_value,name,"VALUE",zlot_prolog_weak_hash_entry_weak_value_value).
struct_opv(z,claz_prolog_weak_hash_entry_weak_value,readonly,t,zlot_prolog_weak_hash_entry_weak_value_this_0).
struct_opv(z,claz_prolog_weak_hash_entry_weak_value,returns,claz_prolog_weak_reference(claz_t),zlot_prolog_weak_hash_entry_weak_value_value).
struct_opv(z,claz_prolog_weak_hash_entry_weak_value,returns,claz_weak_hash_table,zlot_prolog_weak_hash_entry_weak_value_this_0).
struct_opv(z,claz_prolog_weak_hash_entry_weak_value,slot,this_0,zlot_prolog_weak_hash_entry_weak_value_this_0).
struct_opv(z,claz_prolog_weak_hash_entry_weak_value,slot,value,zlot_prolog_weak_hash_entry_weak_value_value).
struct_opv(z,claz_prolog_weak_reference(claz_t),classname,"PROLOG-WEAK-REFERENCE").
struct_opv(z,claz_prolog_weak_reference(claz_t),classof,claz_built_in_class).
struct_opv(z,claz_prolog_writer,classname,"PROLOG-WRITER").
struct_opv(z,claz_prolog_writer,classof,claz_built_in_class).
struct_opv(z,claz_protocol_unimplemented,classname,"PROTOCOL-UNIMPLEMENTED").
struct_opv(z,claz_protocol_unimplemented,classof,claz_built_in_class).
struct_opv(z,claz_pv_table,classname,"PV-TABLE").
struct_opv(z,claz_pv_table,classof,claz_built_in_class).
struct_opv(z,claz_pv_table,name,"CACHE",zlot_pv_table_cache).
struct_opv(z,claz_pv_table,name,"PV-SIZE",zlot_pv_table_pv_size).
struct_opv(z,claz_pv_table,name,"SLOT-NAME-LISTS",zlot_pv_table_slot_name_lists).
struct_opv(z,claz_pv_table,slot,cache,zlot_pv_table_cache).
struct_opv(z,claz_pv_table,slot,pv_size,zlot_pv_table_pv_size).
struct_opv(z,claz_pv_table,slot,slot_name_lists,zlot_pv_table_slot_name_lists).
struct_opv(z,claz_pv_table,subtypep,claz_structure_object).
struct_opv(z,claz_pv_table,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_queued_op,classname,"QUEUED-OP").
struct_opv(z,claz_queued_op,classof,claz_built_in_class).
struct_opv(z,claz_queued_op,name,"POSN",zlot_queued_op_posn).
struct_opv(z,claz_queued_op,slot,posn,zlot_queued_op_posn).
struct_opv(z,claz_queued_op,subtypep,claz_structure_object).
struct_opv(z,claz_queued_op,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_racf_unmappable_character_exception,classname,"RACF-UNMAPPABLE-CHARACTER-EXCEPTION").
struct_opv(z,claz_racf_unmappable_character_exception,classof,claz_built_in_class).
struct_opv(z,claz_racf_unmappable_character_exception,name,"CHARACTER-VALUE",zlot_racf_unmappable_character_exception_character_value).
struct_opv(z,claz_racf_unmappable_character_exception,name,"CHARSET-NAME",zlot_racf_unmappable_character_exception_charset_name).
struct_opv(z,claz_racf_unmappable_character_exception,name,"POSITION",zlot_racf_unmappable_character_exception_position).
struct_opv(z,claz_racf_unmappable_character_exception,readonly,t,zlot_racf_unmappable_character_exception_character_value).
struct_opv(z,claz_racf_unmappable_character_exception,readonly,t,zlot_racf_unmappable_character_exception_charset_name).
struct_opv(z,claz_racf_unmappable_character_exception,readonly,t,zlot_racf_unmappable_character_exception_position).
struct_opv(z,claz_racf_unmappable_character_exception,returns,claz_char_code,zlot_racf_unmappable_character_exception_character_value).
struct_opv(z,claz_racf_unmappable_character_exception,returns,claz_integer,zlot_racf_unmappable_character_exception_position).
struct_opv(z,claz_racf_unmappable_character_exception,returns,claz_string,zlot_racf_unmappable_character_exception_charset_name).
struct_opv(z,claz_racf_unmappable_character_exception,slot,character_value,zlot_racf_unmappable_character_exception_character_value).
struct_opv(z,claz_racf_unmappable_character_exception,slot,charset_name,zlot_racf_unmappable_character_exception_charset_name).
struct_opv(z,claz_racf_unmappable_character_exception,slot,position,zlot_racf_unmappable_character_exception_position).
struct_opv(z,claz_racf_unmappable_character_exception,subtypep,claz_prolog_unmappable_character_exception).
struct_opv(z,claz_raw_slot_data,classname,"RAW-SLOT-DATA").
struct_opv(z,claz_raw_slot_data,classof,claz_built_in_class).
struct_opv(z,claz_raw_slot_data,name,"ACCESSOR-NAME",zlot_raw_slot_data_accessor_name).
struct_opv(z,claz_raw_slot_data,name,"ALIGNMENT",zlot_raw_slot_data_alignment).
struct_opv(z,claz_raw_slot_data,name,"COMPARER",zlot_raw_slot_data_comparer).
struct_opv(z,claz_raw_slot_data,name,"INIT-VOP",zlot_raw_slot_data_init_vop).
struct_opv(z,claz_raw_slot_data,name,"N-WORDS",zlot_raw_slot_data_n_words).
struct_opv(z,claz_raw_slot_data,name,"RAW-TYPE",zlot_raw_slot_data_raw_type).
struct_opv(z,claz_raw_slot_data,slot,accessor_name,zlot_raw_slot_data_accessor_name).
struct_opv(z,claz_raw_slot_data,slot,alignment,zlot_raw_slot_data_alignment).
struct_opv(z,claz_raw_slot_data,slot,comparer,zlot_raw_slot_data_comparer).
struct_opv(z,claz_raw_slot_data,slot,init_vop,zlot_raw_slot_data_init_vop).
struct_opv(z,claz_raw_slot_data,slot,n_words,zlot_raw_slot_data_n_words).
struct_opv(z,claz_raw_slot_data,slot,raw_type,zlot_raw_slot_data_raw_type).
struct_opv(z,claz_raw_slot_data,subtypep,claz_structure_object).
struct_opv(z,claz_raw_slot_data,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_reader_macro_function,classname,"READER-MACRO-FUNCTION").
struct_opv(z,claz_reader_macro_function,classof,claz_built_in_class).
struct_opv(z,claz_reader_macro_function,subtypep,claz_function).
struct_opv(z,claz_real,classname,"REAL").
struct_opv(z,claz_real,classof,claz_built_in_class).
struct_opv(z,claz_real,subtypep,claz_number).
struct_opv(z,claz_real,super_priority,[claz_number,claz_t]).
struct_opv(z,claz_redefinition_with_defgeneric,classname,"REDEFINITION-WITH-DEFGENERIC").
struct_opv(z,claz_redefinition_with_defgeneric,classof,claz_built_in_class).
struct_opv(z,claz_redefinition_with_defmacro,classname,"REDEFINITION-WITH-DEFMACRO").
struct_opv(z,claz_redefinition_with_defmacro,classof,claz_built_in_class).
struct_opv(z,claz_redefinition_with_defmethod,classname,"REDEFINITION-WITH-DEFMETHOD").
struct_opv(z,claz_redefinition_with_defmethod,classof,claz_built_in_class).
struct_opv(z,claz_redefinition_with_defmethod,name,"NEW-LOCATION",zlot_redefinition_with_defmethod_new_location).
struct_opv(z,claz_redefinition_with_defmethod,name,"OLD-METHOD",zlot_redefinition_with_defmethod_old_method).
struct_opv(z,claz_redefinition_with_defmethod,name,"QUALIFIERS",zlot_redefinition_with_defmethod_qualifiers).
struct_opv(z,claz_redefinition_with_defmethod,name,"SPECIALIZERS",zlot_redefinition_with_defmethod_specializers).
struct_opv(z,claz_redefinition_with_defmethod,slot,new_location,zlot_redefinition_with_defmethod_new_location).
struct_opv(z,claz_redefinition_with_defmethod,slot,old_method,zlot_redefinition_with_defmethod_old_method).
struct_opv(z,claz_redefinition_with_defmethod,slot,qualifiers,zlot_redefinition_with_defmethod_qualifiers).
struct_opv(z,claz_redefinition_with_defmethod,slot,specializers,zlot_redefinition_with_defmethod_specializers).
struct_opv(z,claz_redefinition_with_deftransform,classname,"REDEFINITION-WITH-DEFTRANSFORM").
struct_opv(z,claz_redefinition_with_deftransform,classof,claz_built_in_class).
struct_opv(z,claz_redefinition_with_deftransform,name,"TRANSFORM",zlot_redefinition_with_deftransform_transform).
struct_opv(z,claz_redefinition_with_deftransform,slot,transform,zlot_redefinition_with_deftransform_transform).
struct_opv(z,claz_redefinition_with_defun,classname,"REDEFINITION-WITH-DEFUN").
struct_opv(z,claz_redefinition_with_defun,classof,claz_built_in_class).
struct_opv(z,claz_ref,classname,"REF").
struct_opv(z,claz_ref,classof,claz_built_in_class).
struct_opv(z,claz_ref,name,"LEAF",zlot_ref_leaf).
struct_opv(z,claz_ref,name,"REOPTIMIZE",zlot_ref_reoptimize).
struct_opv(z,claz_ref,name,"SOURCE-NAME",zlot_ref_source_name).
struct_opv(z,claz_ref,slot,leaf,zlot_ref_leaf).
struct_opv(z,claz_ref,slot,reoptimize,zlot_ref_reoptimize).
struct_opv(z,claz_ref,slot,source_name,zlot_ref_source_name).
struct_opv(z,claz_ref,subtypep,claz_valued_node).
struct_opv(z,claz_ref,super_priority,[claz_valued_node,claz_node,claz_sset_element,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_reg_spec,classname,"REG-SPEC").
struct_opv(z,claz_reg_spec,classof,claz_built_in_class).
struct_opv(z,claz_reg_spec,name,"KIND",zlot_reg_spec_kind).
struct_opv(z,claz_reg_spec,name,"NAME",zlot_reg_spec_name).
struct_opv(z,claz_reg_spec,name,"OFFSET",zlot_reg_spec_offset).
struct_opv(z,claz_reg_spec,name,"SCS",zlot_reg_spec_scs).
struct_opv(z,claz_reg_spec,name,"TEMP",zlot_reg_spec_temp).
struct_opv(z,claz_reg_spec,slot,kind,zlot_reg_spec_kind).
struct_opv(z,claz_reg_spec,slot,name,zlot_reg_spec_name).
struct_opv(z,claz_reg_spec,slot,offset,zlot_reg_spec_offset).
struct_opv(z,claz_reg_spec,slot,scs,zlot_reg_spec_scs).
struct_opv(z,claz_reg_spec,slot,temp,zlot_reg_spec_temp).
struct_opv(z,claz_reg_spec,subtypep,claz_structure_object).
struct_opv(z,claz_reg_spec,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_restart,classname,"RESTART").
struct_opv(z,claz_restart,classof,claz_built_in_class).
struct_opv(z,claz_restart,name,"FUNCTION",zlot_restart_function).
struct_opv(z,claz_restart,name,"INTERACTIVE",zlot_restart_interactive).
struct_opv(z,claz_restart,name,"INTERACTIVE-FUNCTION",zlot_restart_interactive_function).
struct_opv(z,claz_restart,name,"INVOKE-FUNCTION",zlot_restart_invoke_function).
struct_opv(z,claz_restart,name,"INVOKE-TAG",zlot_restart_invoke_tag).
struct_opv(z,claz_restart,name,"MEANINGFULP",zlot_restart_meaningfulp).
struct_opv(z,claz_restart,name,"NAME",zlot_restart_name).
struct_opv(z,claz_restart,name,"REPORT",zlot_restart_report).
struct_opv(z,claz_restart,name,"REPORT-FUNCTION",zlot_restart_report_function).
struct_opv(z,claz_restart,name,"TEST",zlot_restart_test).
struct_opv(z,claz_restart,name,"TEST-FUNCTION",zlot_restart_test_function).
struct_opv(z,claz_restart,slot,function,zlot_restart_function).
struct_opv(z,claz_restart,slot,interactive,zlot_restart_interactive).
struct_opv(z,claz_restart,slot,interactive_function,zlot_restart_interactive_function).
struct_opv(z,claz_restart,slot,invoke_function,zlot_restart_invoke_function).
struct_opv(z,claz_restart,slot,invoke_tag,zlot_restart_invoke_tag).
struct_opv(z,claz_restart,slot,meaningfulp,zlot_restart_meaningfulp).
struct_opv(z,claz_restart,slot,name,zlot_restart_name).
struct_opv(z,claz_restart,slot,report,zlot_restart_report).
struct_opv(z,claz_restart,slot,report_function,zlot_restart_report_function).
struct_opv(z,claz_restart,slot,test,zlot_restart_test).
struct_opv(z,claz_restart,slot,test_function,zlot_restart_test_function).
struct_opv(z,claz_restart,subtypep,claz_structure_object).
struct_opv(z,claz_restart,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_restart,super_priority,[claz_structure_object,claz_t]).
struct_opv(z,claz_result_state,classname,"RESULT-STATE").
struct_opv(z,claz_result_state,classof,claz_built_in_class).
struct_opv(z,claz_result_state,name,"NUM-RESULTS",zlot_result_state_num_results).
struct_opv(z,claz_result_state,slot,num_results,zlot_result_state_num_results).
struct_opv(z,claz_result_state,subtypep,claz_structure_object).
struct_opv(z,claz_result_state,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_return,classname,"RETURN").
struct_opv(z,claz_return,classof,claz_built_in_class).
struct_opv(z,claz_return,name,"BLOCK",zlot_return_block).
struct_opv(z,claz_return,name,"RESULT",zlot_return_result).
struct_opv(z,claz_return,name,"TAG",zlot_return_tag).
struct_opv(z,claz_return,readonly,t,zlot_return_block).
struct_opv(z,claz_return,readonly,t,zlot_return_result).
struct_opv(z,claz_return,readonly,t,zlot_return_tag).
struct_opv(z,claz_return,returns,claz_t,zlot_return_block).
struct_opv(z,claz_return,returns,claz_t,zlot_return_result).
struct_opv(z,claz_return,returns,claz_t,zlot_return_tag).
struct_opv(z,claz_return,slot,block,zlot_return_block).
struct_opv(z,claz_return,slot,result,zlot_return_result).
struct_opv(z,claz_return,slot,tag,zlot_return_tag).
struct_opv(z,claz_return,subtypep,claz_control_transfer).
struct_opv(z,claz_return_info,classname,"RETURN-INFO").
struct_opv(z,claz_return_info,classof,claz_built_in_class).
struct_opv(z,claz_return_info,name,"COUNT",zlot_return_info_count).
struct_opv(z,claz_return_info,name,"KIND",zlot_return_info_kind).
struct_opv(z,claz_return_info,name,"LOCATIONS",zlot_return_info_locations).
struct_opv(z,claz_return_info,name,"TYPES",zlot_return_info_types).
struct_opv(z,claz_return_info,slot,count,zlot_return_info_count).
struct_opv(z,claz_return_info,slot,kind,zlot_return_info_kind).
struct_opv(z,claz_return_info,slot,locations,zlot_return_info_locations).
struct_opv(z,claz_return_info,slot,types,zlot_return_info_types).
struct_opv(z,claz_return_info,subtypep,claz_structure_object).
struct_opv(z,claz_return_info,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_rlimit,classname,"RLIMIT").
struct_opv(z,claz_rlimit,classof,claz_built_in_class).
struct_opv(z,claz_rlimit,name,"CUR",zlot_rlimit_cur).
struct_opv(z,claz_rlimit,name,"MAX",zlot_rlimit_max).
struct_opv(z,claz_rlimit,slot,cur,zlot_rlimit_cur).
struct_opv(z,claz_rlimit,slot,max,zlot_rlimit_max).
struct_opv(z,claz_rlimit,subtypep,claz_structure_object).
struct_opv(z,claz_rlimit,super_priority,[claz_structure_object,claz_t]).
struct_opv(z,claz_room_info,classname,"ROOM-INFO").
struct_opv(z,claz_room_info,classof,claz_built_in_class).
struct_opv(z,claz_room_info,name,"KIND",zlot_room_info_kind).
struct_opv(z,claz_room_info,name,"NAME",zlot_room_info_name).
struct_opv(z,claz_room_info,slot,kind,zlot_room_info_kind).
struct_opv(z,claz_room_info,slot,name,zlot_room_info_name).
struct_opv(z,claz_room_info,subtypep,claz_structure_c33_object).
struct_opv(z,claz_room_info,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_runtime_class,classname,"RUNTIME-CLASS").
struct_opv(z,claz_runtime_class,classof,claz_built_in_class).
struct_opv(z,claz_runtime_class,name,"METHODS",zlot_runtime_class_methods).
struct_opv(z,claz_runtime_class,returns,claz_prolog_map(claz_string,claz_function),zlot_runtime_class_methods).
struct_opv(z,claz_runtime_class,slot,methods,zlot_runtime_class_methods).
struct_opv(z,claz_sb,classname,"SB").
struct_opv(z,claz_sb,classof,claz_built_in_class).
struct_opv(z,claz_sb,name,"KIND",zlot_sb_kind).
struct_opv(z,claz_sb,name,"NAME",zlot_sb_name).
struct_opv(z,claz_sb,name,"SIZE",zlot_sb_size).
struct_opv(z,claz_sb,slot,kind,zlot_sb_kind).
struct_opv(z,claz_sb,slot,name,zlot_sb_name).
struct_opv(z,claz_sb,slot,size,zlot_sb_size).
struct_opv(z,claz_sb,subtypep,claz_structure_c33_object).
struct_opv(z,claz_sb,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_sc,classname,"SC").
struct_opv(z,claz_sc,classof,claz_built_in_class).
struct_opv(z,claz_sc,name,"ALIGNMENT",zlot_sc_alignment).
struct_opv(z,claz_sc,name,"ALTERNATE-SCS",zlot_sc_alternate_scs).
struct_opv(z,claz_sc,name,"CONSTANT-SCS",zlot_sc_constant_scs).
struct_opv(z,claz_sc,name,"ELEMENT-SIZE",zlot_sc_element_size).
struct_opv(z,claz_sc,name,"LOAD-COSTS",zlot_sc_load_costs).
struct_opv(z,claz_sc,name,"LOCATIONS",zlot_sc_locations).
struct_opv(z,claz_sc,name,"MOVE-ARG-VOPS",zlot_sc_move_arg_vops).
struct_opv(z,claz_sc,name,"MOVE-COSTS",zlot_sc_move_costs).
struct_opv(z,claz_sc,name,"MOVE-FUNS",zlot_sc_move_funs).
struct_opv(z,claz_sc,name,"MOVE-VOPS",zlot_sc_move_vops).
struct_opv(z,claz_sc,name,"NAME",zlot_sc_name).
struct_opv(z,claz_sc,name,"NUMBER",zlot_sc_number).
struct_opv(z,claz_sc,name,"NUMBER-STACK-P",zlot_sc_number_stack_p).
struct_opv(z,claz_sc,name,"RESERVE-LOCATIONS",zlot_sc_reserve_locations).
struct_opv(z,claz_sc,name,"SAVE-P",zlot_sc_save_p).
struct_opv(z,claz_sc,name,"SB",zlot_sc_sb).
struct_opv(z,claz_sc,slot,alignment,zlot_sc_alignment).
struct_opv(z,claz_sc,slot,alternate_scs,zlot_sc_alternate_scs).
struct_opv(z,claz_sc,slot,constant_scs,zlot_sc_constant_scs).
struct_opv(z,claz_sc,slot,element_size,zlot_sc_element_size).
struct_opv(z,claz_sc,slot,load_costs,zlot_sc_load_costs).
struct_opv(z,claz_sc,slot,locations,zlot_sc_locations).
struct_opv(z,claz_sc,slot,move_arg_vops,zlot_sc_move_arg_vops).
struct_opv(z,claz_sc,slot,move_costs,zlot_sc_move_costs).
struct_opv(z,claz_sc,slot,move_funs,zlot_sc_move_funs).
struct_opv(z,claz_sc,slot,move_vops,zlot_sc_move_vops).
struct_opv(z,claz_sc,slot,name,zlot_sc_name).
struct_opv(z,claz_sc,slot,number,zlot_sc_number).
struct_opv(z,claz_sc,slot,number_stack_p,zlot_sc_number_stack_p).
struct_opv(z,claz_sc,slot,reserve_locations,zlot_sc_reserve_locations).
struct_opv(z,claz_sc,slot,save_p,zlot_sc_save_p).
struct_opv(z,claz_sc,slot,sb,zlot_sc_sb).
struct_opv(z,claz_sc,subtypep,claz_structure_c33_object).
struct_opv(z,claz_sc,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_section_start,classname,"SECTION-START").
struct_opv(z,claz_section_start,classof,claz_built_in_class).
struct_opv(z,claz_section_start,name,"DEPTH",zlot_section_start_depth).
struct_opv(z,claz_section_start,name,"SECTION-END",zlot_section_start_section_end).
struct_opv(z,claz_section_start,slot,depth,zlot_section_start_depth).
struct_opv(z,claz_section_start,slot,section_end,zlot_section_start_section_end).
struct_opv(z,claz_section_start,subtypep,claz_queued_op).
struct_opv(z,claz_section_start,super_priority,[claz_queued_op,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_seekable_string_writer,classname,"SEEKABLE-STRING-WRITER").
struct_opv(z,claz_seekable_string_writer,classof,claz_built_in_class).
struct_opv(z,claz_seekable_string_writer,name,"OFFSET",zlot_seekable_string_writer_offset).
struct_opv(z,claz_seekable_string_writer,name,"STRING-BUFFER",zlot_seekable_string_writer_string_buffer).
struct_opv(z,claz_seekable_string_writer,readonly,t,zlot_seekable_string_writer_string_buffer).
struct_opv(z,claz_seekable_string_writer,returns,claz_integer,zlot_seekable_string_writer_offset).
struct_opv(z,claz_seekable_string_writer,returns,claz_prolog_string_buffer,zlot_seekable_string_writer_string_buffer).
struct_opv(z,claz_seekable_string_writer,slot,offset,zlot_seekable_string_writer_offset).
struct_opv(z,claz_seekable_string_writer,slot,string_buffer,zlot_seekable_string_writer_string_buffer).
struct_opv(z,claz_seekable_string_writer,subtypep,claz_prolog_writer).
struct_opv(z,claz_segment,classname,"SEGMENT").
struct_opv(z,claz_segment,classof,claz_built_in_class).
struct_opv(z,claz_segment,name,"ALIGNMENT",zlot_segment_alignment).
struct_opv(z,claz_segment,name,"ANNOTATIONS",zlot_segment_annotations).
struct_opv(z,claz_segment,name,"BRANCH-COUNTDOWN",zlot_segment_branch_countdown).
struct_opv(z,claz_segment,name,"BUFFER",zlot_segment_buffer).
struct_opv(z,claz_segment,name,"CODE",zlot_segment_code).
struct_opv(z,claz_segment,name,"CURRENT-INDEX",zlot_segment_current_index).
struct_opv(z,claz_segment,name,"CURRENT-POSN",zlot_segment_current_posn).
struct_opv(z,claz_segment,name,"DELAYED",zlot_segment_delayed).
struct_opv(z,claz_segment,name,"EMITTABLE-INSTS-QUEUE",zlot_segment_emittable_insts_queue).
struct_opv(z,claz_segment,name,"EMITTABLE-INSTS-SSET",zlot_segment_emittable_insts_sset).
struct_opv(z,claz_segment,name,"FINAL-INDEX",zlot_segment_final_index).
struct_opv(z,claz_segment,name,"FINAL-POSN",zlot_segment_final_posn).
struct_opv(z,claz_segment,name,"HOOKS",zlot_segment_hooks).
struct_opv(z,claz_segment,name,"INST-HOOK",zlot_segment_inst_hook).
struct_opv(z,claz_segment,name,"INST-NUMBER",zlot_segment_inst_number).
struct_opv(z,claz_segment,name,"LAST-ANNOTATION",zlot_segment_last_annotation).
struct_opv(z,claz_segment,name,"LENGTH",zlot_segment_length).
struct_opv(z,claz_segment,name,"OPCODES-LENGTH",zlot_segment_opcodes_length).
struct_opv(z,claz_segment,name,"POSTITS",zlot_segment_postits).
struct_opv(z,claz_segment,name,"QUEUED-BRANCHES",zlot_segment_queued_branches).
struct_opv(z,claz_segment,name,"READERS",zlot_segment_readers).
struct_opv(z,claz_segment,name,"RUN-SCHEDULER",zlot_segment_run_scheduler).
struct_opv(z,claz_segment,name,"SAP-MAKER",zlot_segment_sap_maker).
struct_opv(z,claz_segment,name,"STORAGE-INFO",zlot_segment_storage_info).
struct_opv(z,claz_segment,name,"SYNC-POSN",zlot_segment_sync_posn).
struct_opv(z,claz_segment,name,"TYPE",zlot_segment_type).
struct_opv(z,claz_segment,name,"UNBOXED-DATA-RANGE",zlot_segment_unboxed_data_range).
struct_opv(z,claz_segment,name,"VIRTUAL-LOCATION",zlot_segment_virtual_location).
struct_opv(z,claz_segment,name,"WRITERS",zlot_segment_writers).
struct_opv(z,claz_segment,slot,alignment,zlot_segment_alignment).
struct_opv(z,claz_segment,slot,annotations,zlot_segment_annotations).
struct_opv(z,claz_segment,slot,branch_countdown,zlot_segment_branch_countdown).
struct_opv(z,claz_segment,slot,buffer,zlot_segment_buffer).
struct_opv(z,claz_segment,slot,code,zlot_segment_code).
struct_opv(z,claz_segment,slot,current_index,zlot_segment_current_index).
struct_opv(z,claz_segment,slot,current_posn,zlot_segment_current_posn).
struct_opv(z,claz_segment,slot,delayed,zlot_segment_delayed).
struct_opv(z,claz_segment,slot,emittable_insts_queue,zlot_segment_emittable_insts_queue).
struct_opv(z,claz_segment,slot,emittable_insts_sset,zlot_segment_emittable_insts_sset).
struct_opv(z,claz_segment,slot,final_index,zlot_segment_final_index).
struct_opv(z,claz_segment,slot,final_posn,zlot_segment_final_posn).
struct_opv(z,claz_segment,slot,hooks,zlot_segment_hooks).
struct_opv(z,claz_segment,slot,inst_hook,zlot_segment_inst_hook).
struct_opv(z,claz_segment,slot,inst_number,zlot_segment_inst_number).
struct_opv(z,claz_segment,slot,last_annotation,zlot_segment_last_annotation).
struct_opv(z,claz_segment,slot,length,zlot_segment_length).
struct_opv(z,claz_segment,slot,opcodes_length,zlot_segment_opcodes_length).
struct_opv(z,claz_segment,slot,postits,zlot_segment_postits).
struct_opv(z,claz_segment,slot,queued_branches,zlot_segment_queued_branches).
struct_opv(z,claz_segment,slot,readers,zlot_segment_readers).
struct_opv(z,claz_segment,slot,run_scheduler,zlot_segment_run_scheduler).
struct_opv(z,claz_segment,slot,sap_maker,zlot_segment_sap_maker).
struct_opv(z,claz_segment,slot,storage_info,zlot_segment_storage_info).
struct_opv(z,claz_segment,slot,sync_posn,zlot_segment_sync_posn).
struct_opv(z,claz_segment,slot,type,zlot_segment_type).
struct_opv(z,claz_segment,slot,unboxed_data_range,zlot_segment_unboxed_data_range).
struct_opv(z,claz_segment,slot,virtual_location,zlot_segment_virtual_location).
struct_opv(z,claz_segment,slot,writers,zlot_segment_writers).
struct_opv(z,claz_segment,subtypep,claz_structure_object).
struct_opv(z,claz_segment,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_semaphore,classname,"SEMAPHORE").
struct_opv(z,claz_semaphore,classof,claz_built_in_class).
struct_opv(z,claz_semaphore,name,"COUNT",zlot_semaphore_count).
struct_opv(z,claz_semaphore,name,"MUTEX",zlot_semaphore_mutex).
struct_opv(z,claz_semaphore,name,"NAME",zlot_semaphore_name).
struct_opv(z,claz_semaphore,name,"QUEUE",zlot_semaphore_queue).
struct_opv(z,claz_semaphore,name,"WAITCOUNT",zlot_semaphore_waitcount).
struct_opv(z,claz_semaphore,slot,count,zlot_semaphore_count).
struct_opv(z,claz_semaphore,slot,mutex,zlot_semaphore_mutex).
struct_opv(z,claz_semaphore,slot,name,zlot_semaphore_name).
struct_opv(z,claz_semaphore,slot,queue,zlot_semaphore_queue).
struct_opv(z,claz_semaphore,slot,waitcount,zlot_semaphore_waitcount).
struct_opv(z,claz_semaphore,subtypep,claz_structure_object).
struct_opv(z,claz_semaphore,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_semaphore_notification,classname,"SEMAPHORE-NOTIFICATION").
struct_opv(z,claz_semaphore_notification,classof,claz_built_in_class).
struct_opv(z,claz_semaphore_notification,name,"STATUS",zlot_semaphore_notification_status).
struct_opv(z,claz_semaphore_notification,slot,status,zlot_semaphore_notification_status).
struct_opv(z,claz_semaphore_notification,subtypep,claz_structure_object).
struct_opv(z,claz_semaphore_notification,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_semi_standard_class,classname,"SEMI-STANDARD-CLASS").
struct_opv(z,claz_semi_standard_class,classof,claz_built_in_class).
struct_opv(z,claz_semi_standard_class,name,"CURRENT-VERSION",zlot_semi_standard_class_current_version).
struct_opv(z,claz_semi_standard_class,name,"DIRECT-INSTANCE-SPECIALIZERS",zlot_semi_standard_class_direct_instance_specializers).
struct_opv(z,claz_semi_standard_class,name,"FINALIZED-DIRECT-SUBCLASSES",zlot_semi_standard_class_finalized_direct_subclasses).
struct_opv(z,claz_semi_standard_class,name,"FIXED-SLOT-LOCATIONS",zlot_semi_standard_class_fixed_slot_locations).
struct_opv(z,claz_semi_standard_class,name,"FUNCALLABLEP",zlot_semi_standard_class_funcallablep).
struct_opv(z,claz_semi_standard_class,name,"INSTANTIATED",zlot_semi_standard_class_instantiated).
struct_opv(z,claz_semi_standard_class,name,"PROTOTYPE",zlot_semi_standard_class_prototype).
struct_opv(z,claz_semi_standard_class,slot,current_version,zlot_semi_standard_class_current_version).
struct_opv(z,claz_semi_standard_class,slot,direct_instance_specializers,zlot_semi_standard_class_direct_instance_specializers).
struct_opv(z,claz_semi_standard_class,slot,finalized_direct_subclasses,zlot_semi_standard_class_finalized_direct_subclasses).
struct_opv(z,claz_semi_standard_class,slot,fixed_slot_locations,zlot_semi_standard_class_fixed_slot_locations).
struct_opv(z,claz_semi_standard_class,slot,funcallablep,zlot_semi_standard_class_funcallablep).
struct_opv(z,claz_semi_standard_class,slot,instantiated,zlot_semi_standard_class_instantiated).
struct_opv(z,claz_semi_standard_class,slot,prototype,zlot_semi_standard_class_prototype).
struct_opv(z,claz_semi_standard_class,subtypep,claz_slotted_class).
struct_opv(z,claz_semi_standard_class,super_priority,[claz_slotted_class,claz_class,claz_potential_class,claz_specializer,claz_super_class,claz_standard_stablehash,claz_metaobject,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(z,claz_sequence,classname,"SEQUENCE").
struct_opv(z,claz_sequence,classof,claz_built_in_class).
struct_opv(z,claz_sequence,subtypep,claz_t).
struct_opv(z,claz_sequence,super_priority,[claz_t]).
struct_opv(z,claz_service,classname,"SERVICE").
struct_opv(z,claz_service,classof,claz_built_in_class).
struct_opv(z,claz_service,name,"ALIASES",zlot_service_aliases).
struct_opv(z,claz_service,name,"NAME",zlot_service_name).
struct_opv(z,claz_service,name,"PORT",zlot_service_port).
struct_opv(z,claz_service,name,"PROTO",zlot_service_proto).
struct_opv(z,claz_service,slot,aliases,zlot_service_aliases).
struct_opv(z,claz_service,slot,name,zlot_service_name).
struct_opv(z,claz_service,slot,port,zlot_service_port).
struct_opv(z,claz_service,slot,proto,zlot_service_proto).
struct_opv(z,claz_service,subtypep,claz_structure_object).
struct_opv(z,claz_service,super_priority,[claz_structure_object,claz_t]).
struct_opv(z,claz_session,classname,"SESSION").
struct_opv(z,claz_session,classof,claz_built_in_class).
struct_opv(z,claz_session,name,"INTERACTIVE-THREADS",zlot_session_interactive_threads).
struct_opv(z,claz_session,name,"INTERACTIVE-THREADS-QUEUE",zlot_session_interactive_threads_queue).
struct_opv(z,claz_session,name,"LOCK",zlot_session_lock).
struct_opv(z,claz_session,name,"THREADS",zlot_session_threads).
struct_opv(z,claz_session,slot,interactive_threads,zlot_session_interactive_threads).
struct_opv(z,claz_session,slot,interactive_threads_queue,zlot_session_interactive_threads_queue).
struct_opv(z,claz_session,slot,lock,zlot_session_lock).
struct_opv(z,claz_session,slot,threads,zlot_session_threads).
struct_opv(z,claz_session,subtypep,claz_structure_object).
struct_opv(z,claz_session,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_shared_object,classname,"SHARED-OBJECT").
struct_opv(z,claz_shared_object,classof,claz_built_in_class).
struct_opv(z,claz_shared_object,name,"DONT-SAVE",zlot_shared_object_dont_save).
struct_opv(z,claz_shared_object,name,"HANDLE",zlot_shared_object_handle).
struct_opv(z,claz_shared_object,name,"NAMESTRING",zlot_shared_object_namestring).
struct_opv(z,claz_shared_object,name,"PATHNAME",zlot_shared_object_pathname).
struct_opv(z,claz_shared_object,slot,dont_save,zlot_shared_object_dont_save).
struct_opv(z,claz_shared_object,slot,handle,zlot_shared_object_handle).
struct_opv(z,claz_shared_object,slot,namestring,zlot_shared_object_namestring).
struct_opv(z,claz_shared_object,slot,pathname,zlot_shared_object_pathname).
struct_opv(z,claz_shared_object,subtypep,claz_structure_object).
struct_opv(z,claz_shared_object,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_shell_command,classname,"SHELL-COMMAND").
struct_opv(z,claz_shell_command,classof,claz_built_in_class).
struct_opv(z,claz_shell_command,name,"COMMAND",zlot_shell_command_command).
struct_opv(z,claz_shell_command,name,"DIRECTORY",zlot_shell_command_directory).
struct_opv(z,claz_shell_command,name,"EXIT-VALUE",zlot_shell_command_exit_value).
struct_opv(z,claz_shell_command,name,"OUTPUT",zlot_shell_command_output).
struct_opv(z,claz_shell_command,name,"OUTPUT-STREAM",zlot_shell_command_output_stream).
struct_opv(z,claz_shell_command,name,"THREAD",zlot_shell_command_thread).
struct_opv(z,claz_shell_command,readonly,t,zlot_shell_command_command).
struct_opv(z,claz_shell_command,readonly,t,zlot_shell_command_directory).
struct_opv(z,claz_shell_command,readonly,t,zlot_shell_command_output).
struct_opv(z,claz_shell_command,readonly,t,zlot_shell_command_output_stream).
struct_opv(z,claz_shell_command,returns,claz_integer,zlot_shell_command_exit_value).
struct_opv(z,claz_shell_command,returns,claz_prolog_string_buffer,zlot_shell_command_output).
struct_opv(z,claz_shell_command,returns,claz_prolog_thread,zlot_shell_command_thread).
struct_opv(z,claz_shell_command,returns,claz_stream,zlot_shell_command_output_stream).
struct_opv(z,claz_shell_command,returns,claz_string,zlot_shell_command_command).
struct_opv(z,claz_shell_command,returns,claz_string,zlot_shell_command_directory).
struct_opv(z,claz_shell_command,slot,command,zlot_shell_command_command).
struct_opv(z,claz_shell_command,slot,directory,zlot_shell_command_directory).
struct_opv(z,claz_shell_command,slot,exit_value,zlot_shell_command_exit_value).
struct_opv(z,claz_shell_command,slot,output,zlot_shell_command_output).
struct_opv(z,claz_shell_command,slot,output_stream,zlot_shell_command_output_stream).
struct_opv(z,claz_shell_command,slot,thread,zlot_shell_command_thread).
struct_opv(z,claz_shell_command_reader_thread,classname,"SHELL-COMMAND-READER-THREAD").
struct_opv(z,claz_shell_command_reader_thread,classof,claz_built_in_class).
struct_opv(z,claz_shell_command_reader_thread,name,"BUF",zlot_shell_command_reader_thread_buf).
struct_opv(z,claz_shell_command_reader_thread,name,"DONE",zlot_shell_command_reader_thread_done).
struct_opv(z,claz_shell_command_reader_thread,name,"INPUT-STREAM",zlot_shell_command_reader_thread_input_stream).
struct_opv(z,claz_shell_command_reader_thread,name,"READER",zlot_shell_command_reader_thread_reader).
struct_opv(z,claz_shell_command_reader_thread,name,"THIS-0",zlot_shell_command_reader_thread_this_0).
struct_opv(z,claz_shell_command_reader_thread,readonly,t,zlot_shell_command_reader_thread_input_stream).
struct_opv(z,claz_shell_command_reader_thread,readonly,t,zlot_shell_command_reader_thread_reader).
struct_opv(z,claz_shell_command_reader_thread,readonly,t,zlot_shell_command_reader_thread_this_0).
struct_opv(z,claz_shell_command_reader_thread,returns,claz_boolean,zlot_shell_command_reader_thread_done).
struct_opv(z,claz_shell_command_reader_thread,returns,claz_prolog_buffered_reader,zlot_shell_command_reader_thread_reader).
struct_opv(z,claz_shell_command_reader_thread,returns,claz_prolog_input_stream,zlot_shell_command_reader_thread_input_stream).
struct_opv(z,claz_shell_command_reader_thread,returns,claz_shell_command,zlot_shell_command_reader_thread_this_0).
struct_opv(z,claz_shell_command_reader_thread,returns,claz_simple_vector(claz_char_code),zlot_shell_command_reader_thread_buf).
struct_opv(z,claz_shell_command_reader_thread,slot,buf,zlot_shell_command_reader_thread_buf).
struct_opv(z,claz_shell_command_reader_thread,slot,done,zlot_shell_command_reader_thread_done).
struct_opv(z,claz_shell_command_reader_thread,slot,input_stream,zlot_shell_command_reader_thread_input_stream).
struct_opv(z,claz_shell_command_reader_thread,slot,reader,zlot_shell_command_reader_thread_reader).
struct_opv(z,claz_shell_command_reader_thread,slot,this_0,zlot_shell_command_reader_thread_this_0).
struct_opv(z,claz_short_method_combination,classname,"SHORT-METHOD-COMBINATION").
struct_opv(z,claz_short_method_combination,classof,claz_built_in_class).
struct_opv(z,claz_short_method_combination,name,"IDENTITY-WITH-ONE-ARGUMENT",zlot_short_method_combination_identity_with_one_argument).
struct_opv(z,claz_short_method_combination,name,"OPERATOR",zlot_short_method_combination_operator).
struct_opv(z,claz_short_method_combination,slot,identity_with_one_argument,zlot_short_method_combination_identity_with_one_argument).
struct_opv(z,claz_short_method_combination,slot,operator,zlot_short_method_combination_operator).
struct_opv(z,claz_short_method_combination,subtypep,claz_standard_method_combination).
struct_opv(z,claz_short_method_combination,super_priority,[claz_standard_method_combination,claz_definition_source_mixin,claz_method_combination,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(z,claz_simd_pack,classname,"SIMD-PACK").
struct_opv(z,claz_simd_pack,classof,claz_built_in_class).
struct_opv(z,claz_simd_pack,subtypep,claz_t).
struct_opv(z,claz_simd_pack,super_priority,[claz_t]).
struct_opv(z,claz_simd_pack_type,classname,"SIMD-PACK-TYPE").
struct_opv(z,claz_simd_pack_type,classof,claz_built_in_class).
struct_opv(z,claz_simd_pack_type,name,"CLASS-INFO",zlot_simd_pack_type_class_info).
struct_opv(z,claz_simd_pack_type,name,"ELEMENT-TYPE",zlot_simd_pack_type_element_type).
struct_opv(z,claz_simd_pack_type,slot,class_info,zlot_simd_pack_type_class_info).
struct_opv(z,claz_simd_pack_type,slot,element_type,zlot_simd_pack_type_element_type).
struct_opv(z,claz_simd_pack_type,subtypep,claz_ctype).
struct_opv(z,claz_simd_pack_type,super_priority,[claz_ctype,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_source_form_cache,classname,"SOURCE-FORM-CACHE").
struct_opv(z,claz_source_form_cache,classof,claz_built_in_class).
struct_opv(z,claz_source_form_cache,name,"DEBUG-SOURCE",zlot_source_form_cache_debug_source).
struct_opv(z,claz_source_form_cache,name,"LAST-FORM-RETRIEVED",zlot_source_form_cache_last_form_retrieved).
struct_opv(z,claz_source_form_cache,name,"LAST-LOCATION-RETRIEVED",zlot_source_form_cache_last_location_retrieved).
struct_opv(z,claz_source_form_cache,name,"TOPLEVEL-FORM-INDEX",zlot_source_form_cache_toplevel_form_index).
struct_opv(z,claz_source_form_cache,slot,debug_source,zlot_source_form_cache_debug_source).
struct_opv(z,claz_source_form_cache,slot,last_form_retrieved,zlot_source_form_cache_last_form_retrieved).
struct_opv(z,claz_source_form_cache,slot,last_location_retrieved,zlot_source_form_cache_last_location_retrieved).
struct_opv(z,claz_source_form_cache,slot,toplevel_form_index,zlot_source_form_cache_toplevel_form_index).
struct_opv(z,claz_source_form_cache,subtypep,claz_structure_object).
struct_opv(z,claz_source_form_cache,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_source_info,classname,"SOURCE-INFO").
struct_opv(z,claz_source_info,classof,claz_built_in_class).
struct_opv(z,claz_source_info,name,"FILE-INFO",zlot_source_info_file_info).
struct_opv(z,claz_source_info,name,"LAST-DEFN-SOURCE-LOC",zlot_source_info_last_defn_source_loc).
struct_opv(z,claz_source_info,name,"PARENT",zlot_source_info_parent).
struct_opv(z,claz_source_info,name,"START-REAL-TIME",zlot_source_info_start_real_time).
struct_opv(z,claz_source_info,name,"START-TIME",zlot_source_info_start_time).
struct_opv(z,claz_source_info,name,"STREAM",zlot_source_info_stream).
struct_opv(z,claz_source_info,slot,file_info,zlot_source_info_file_info).
struct_opv(z,claz_source_info,slot,last_defn_source_loc,zlot_source_info_last_defn_source_loc).
struct_opv(z,claz_source_info,slot,parent,zlot_source_info_parent).
struct_opv(z,claz_source_info,slot,start_real_time,zlot_source_info_start_real_time).
struct_opv(z,claz_source_info,slot,start_time,zlot_source_info_start_time).
struct_opv(z,claz_source_info,slot,stream,zlot_source_info_stream).
struct_opv(z,claz_source_info,subtypep,claz_structure_object).
struct_opv(z,claz_source_info,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_special_binding,classname,"SPECIAL-BINDING").
struct_opv(z,claz_special_binding,classof,claz_built_in_class).
struct_opv(z,claz_special_binding,name,"IDX",zlot_special_binding_idx).
struct_opv(z,claz_special_binding,name,"VALUE",zlot_special_binding_value).
struct_opv(z,claz_special_binding,readonly,t,zlot_special_binding_idx).
struct_opv(z,claz_special_binding,returns,claz_integer,zlot_special_binding_idx).
struct_opv(z,claz_special_binding,returns,claz_t,zlot_special_binding_value).
struct_opv(z,claz_special_binding,slot,idx,zlot_special_binding_idx).
struct_opv(z,claz_special_binding,slot,value,zlot_special_binding_value).
struct_opv(z,claz_special_bindings_mark,classname,"SPECIAL-BINDINGS-MARK").
struct_opv(z,claz_special_bindings_mark,classof,claz_built_in_class).
struct_opv(z,claz_special_bindings_mark,name,"BINDING",zlot_special_bindings_mark_binding).
struct_opv(z,claz_special_bindings_mark,name,"IDX",zlot_special_bindings_mark_idx).
struct_opv(z,claz_special_bindings_mark,name,"NEXT",zlot_special_bindings_mark_next).
struct_opv(z,claz_special_bindings_mark,returns,claz_integer,zlot_special_bindings_mark_idx).
struct_opv(z,claz_special_bindings_mark,returns,claz_special_binding,zlot_special_bindings_mark_binding).
struct_opv(z,claz_special_bindings_mark,returns,claz_special_bindings_mark,zlot_special_bindings_mark_next).
struct_opv(z,claz_special_bindings_mark,slot,binding,zlot_special_bindings_mark_binding).
struct_opv(z,claz_special_bindings_mark,slot,idx,zlot_special_bindings_mark_idx).
struct_opv(z,claz_special_bindings_mark,slot,next,zlot_special_bindings_mark_next).
struct_opv(z,claz_special_form_function,classname,"SPECIAL-FORM-FUNCTION").
struct_opv(z,claz_special_form_function,classof,claz_built_in_class).
struct_opv(z,claz_special_form_function,subtypep,claz_undefined_function).
struct_opv(z,claz_specializer,classname,"SPECIALIZER").
struct_opv(z,claz_specializer,classof,claz_built_in_class).
struct_opv(z,claz_specializer,name,"DIRECT-METHODS",zlot_specializer_direct_methods).
struct_opv(z,claz_specializer,name,"TYPE",zlot_specializer_type).
struct_opv(z,claz_specializer,slot,direct_methods,zlot_specializer_direct_methods).
struct_opv(z,claz_specializer,slot,type,zlot_specializer_type).
struct_opv(z,claz_specializer,subtypep,claz_metaobject).
struct_opv(z,claz_specializer,subtypep,claz_standard_stablehash).
struct_opv(z,claz_specializer,super_priority,[claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(z,claz_specializer,super_priority,[claz_standard_stablehash,claz_metaobject,claz_standard_object,claz_slot_object,claz_t /**/]).
struct_opv(z,claz_specializer_with_object,classname,"SPECIALIZER-WITH-OBJECT").
struct_opv(z,claz_specializer_with_object,classof,claz_built_in_class).
struct_opv(z,claz_specializer_with_object,subtypep,claz_specializer).
struct_opv(z,claz_specializer_with_object,super_priority,[claz_specializer,claz_metaobject,claz_standard_object,claz_slot_object,claz_t]).
struct_opv(z,claz_sset,classname,"SSET").
struct_opv(z,claz_sset,classof,claz_built_in_class).
struct_opv(z,claz_sset,name,"COUNT",zlot_sset_count).
struct_opv(z,claz_sset,name,"FREE",zlot_sset_free).
struct_opv(z,claz_sset,name,"VECTOR",zlot_sset_vector).
struct_opv(z,claz_sset,slot,count,zlot_sset_count).
struct_opv(z,claz_sset,slot,free,zlot_sset_free).
struct_opv(z,claz_sset,slot,vector,zlot_sset_vector).
struct_opv(z,claz_sset,subtypep,claz_structure_object).
struct_opv(z,claz_sset,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_sset_element,classname,"SSET-ELEMENT").
struct_opv(z,claz_sset_element,classof,claz_built_in_class).
struct_opv(z,claz_sset_element,name,"NUMBER",zlot_sset_element_number).
struct_opv(z,claz_sset_element,slot,number,zlot_sset_element_number).
struct_opv(z,claz_sset_element,subtypep,claz_structure_c33_object).
struct_opv(z,claz_sset_element,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_stack_frame,classname,"STACK-FRAME").
struct_opv(z,claz_stack_frame,classof,claz_built_in_class).
struct_opv(z,claz_stack_frame,name,"ENV",zlot_stack_frame_env).
struct_opv(z,claz_stack_frame,name,"NEXT",zlot_stack_frame_next).
struct_opv(z,claz_stack_frame,returns,claz_env,zlot_stack_frame_env).
struct_opv(z,claz_stack_frame,returns,claz_stack_frame,zlot_stack_frame_next).
struct_opv(z,claz_stack_frame,slot,env,zlot_stack_frame_env).
struct_opv(z,claz_stack_frame,slot,next,zlot_stack_frame_next).
struct_opv(z,claz_stack_frame,subtypep,claz_t).
struct_opv(z,claz_stat_vfs,classname,"STAT-VFS").
struct_opv(z,claz_stat_vfs,classof,claz_built_in_class).
struct_opv(z,claz_stat_vfs,name,"BAVAIL",zlot_stat_vfs_bavail).
struct_opv(z,claz_stat_vfs,name,"BFREE",zlot_stat_vfs_bfree).
struct_opv(z,claz_stat_vfs,name,"BLOCKS",zlot_stat_vfs_blocks).
struct_opv(z,claz_stat_vfs,name,"BSIZE",zlot_stat_vfs_bsize).
struct_opv(z,claz_stat_vfs,name,"FAVAIL",zlot_stat_vfs_favail).
struct_opv(z,claz_stat_vfs,name,"FFREE",zlot_stat_vfs_ffree).
struct_opv(z,claz_stat_vfs,name,"FILE",zlot_stat_vfs_file).
struct_opv(z,claz_stat_vfs,name,"FILES",zlot_stat_vfs_files).
struct_opv(z,claz_stat_vfs,name,"FLAG",zlot_stat_vfs_flag).
struct_opv(z,claz_stat_vfs,name,"FRSIZE",zlot_stat_vfs_frsize).
struct_opv(z,claz_stat_vfs,name,"FS-TYPE",zlot_stat_vfs_fs_type).
struct_opv(z,claz_stat_vfs,name,"FSID",zlot_stat_vfs_fsid).
struct_opv(z,claz_stat_vfs,name,"NAMEMAX",zlot_stat_vfs_namemax).
struct_opv(z,claz_stat_vfs,name,"VOL-NAME",zlot_stat_vfs_vol_name).
struct_opv(z,claz_stat_vfs,slot,bavail,zlot_stat_vfs_bavail).
struct_opv(z,claz_stat_vfs,slot,bfree,zlot_stat_vfs_bfree).
struct_opv(z,claz_stat_vfs,slot,blocks,zlot_stat_vfs_blocks).
struct_opv(z,claz_stat_vfs,slot,bsize,zlot_stat_vfs_bsize).
struct_opv(z,claz_stat_vfs,slot,favail,zlot_stat_vfs_favail).
struct_opv(z,claz_stat_vfs,slot,ffree,zlot_stat_vfs_ffree).
struct_opv(z,claz_stat_vfs,slot,file,zlot_stat_vfs_file).
struct_opv(z,claz_stat_vfs,slot,files,zlot_stat_vfs_files).
struct_opv(z,claz_stat_vfs,slot,flag,zlot_stat_vfs_flag).
struct_opv(z,claz_stat_vfs,slot,frsize,zlot_stat_vfs_frsize).
struct_opv(z,claz_stat_vfs,slot,fs_type,zlot_stat_vfs_fs_type).
struct_opv(z,claz_stat_vfs,slot,fsid,zlot_stat_vfs_fsid).
struct_opv(z,claz_stat_vfs,slot,namemax,zlot_stat_vfs_namemax).
struct_opv(z,claz_stat_vfs,slot,vol_name,zlot_stat_vfs_vol_name).
struct_opv(z,claz_stat_vfs,subtypep,claz_structure_object).
struct_opv(z,claz_stat_vfs,super_priority,[claz_structure_object,claz_t]).
struct_opv(z,claz_storage_info,classname,"STORAGE-INFO").
struct_opv(z,claz_storage_info,classof,claz_built_in_class).
struct_opv(z,claz_storage_info,name,"DEBUG-VARS",zlot_storage_info_debug_vars).
struct_opv(z,claz_storage_info,name,"GROUPS",zlot_storage_info_groups).
struct_opv(z,claz_storage_info,slot,debug_vars,zlot_storage_info_debug_vars).
struct_opv(z,claz_storage_info,slot,groups,zlot_storage_info_groups).
struct_opv(z,claz_storage_info,subtypep,claz_structure_object).
struct_opv(z,claz_storage_info,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_stream_eol_style,classname,"STREAM-EOL-STYLE").
struct_opv(z,claz_stream_eol_style,classof,claz_built_in_class).
struct_opv(z,claz_string_functions_string_indices_and_chars,classname,"STRING-FUNCTIONS-STRING-INDICES-AND-CHARS").
struct_opv(z,claz_string_functions_string_indices_and_chars,classof,claz_built_in_class).
struct_opv(z,claz_string_functions_string_indices_and_chars,name,"ARRAY1",zlot_string_functions_string_indices_and_chars_array1).
struct_opv(z,claz_string_functions_string_indices_and_chars,name,"ARRAY2",zlot_string_functions_string_indices_and_chars_array2).
struct_opv(z,claz_string_functions_string_indices_and_chars,name,"CONVERT-CASE",zlot_string_functions_string_indices_and_chars_convert_case).
struct_opv(z,claz_string_functions_string_indices_and_chars,name,"END1",zlot_string_functions_string_indices_and_chars_end1).
struct_opv(z,claz_string_functions_string_indices_and_chars,name,"END2",zlot_string_functions_string_indices_and_chars_end2).
struct_opv(z,claz_string_functions_string_indices_and_chars,name,"START1",zlot_string_functions_string_indices_and_chars_start1).
struct_opv(z,claz_string_functions_string_indices_and_chars,name,"START2",zlot_string_functions_string_indices_and_chars_start2).
struct_opv(z,claz_string_functions_string_indices_and_chars,name,"STRING1",zlot_string_functions_string_indices_and_chars_string1).
struct_opv(z,claz_string_functions_string_indices_and_chars,returns,claz_boolean,zlot_string_functions_string_indices_and_chars_convert_case).
struct_opv(z,claz_string_functions_string_indices_and_chars,returns,claz_integer,zlot_string_functions_string_indices_and_chars_end1).
struct_opv(z,claz_string_functions_string_indices_and_chars,returns,claz_integer,zlot_string_functions_string_indices_and_chars_end2).
struct_opv(z,claz_string_functions_string_indices_and_chars,returns,claz_integer,zlot_string_functions_string_indices_and_chars_start1).
struct_opv(z,claz_string_functions_string_indices_and_chars,returns,claz_integer,zlot_string_functions_string_indices_and_chars_start2).
struct_opv(z,claz_string_functions_string_indices_and_chars,returns,claz_simple_vector(claz_char_code),zlot_string_functions_string_indices_and_chars_array1).
struct_opv(z,claz_string_functions_string_indices_and_chars,returns,claz_simple_vector(claz_char_code),zlot_string_functions_string_indices_and_chars_array2).
struct_opv(z,claz_string_functions_string_indices_and_chars,returns,claz_string,zlot_string_functions_string_indices_and_chars_string1).
struct_opv(z,claz_string_functions_string_indices_and_chars,slot,array1,zlot_string_functions_string_indices_and_chars_array1).
struct_opv(z,claz_string_functions_string_indices_and_chars,slot,array2,zlot_string_functions_string_indices_and_chars_array2).
struct_opv(z,claz_string_functions_string_indices_and_chars,slot,convert_case,zlot_string_functions_string_indices_and_chars_convert_case).
struct_opv(z,claz_string_functions_string_indices_and_chars,slot,end1,zlot_string_functions_string_indices_and_chars_end1).
struct_opv(z,claz_string_functions_string_indices_and_chars,slot,end2,zlot_string_functions_string_indices_and_chars_end2).
struct_opv(z,claz_string_functions_string_indices_and_chars,slot,start1,zlot_string_functions_string_indices_and_chars_start1).
struct_opv(z,claz_string_functions_string_indices_and_chars,slot,start2,zlot_string_functions_string_indices_and_chars_start2).
struct_opv(z,claz_string_functions_string_indices_and_chars,slot,string1,zlot_string_functions_string_indices_and_chars_string1).
struct_opv(z,claz_system_area_pointer,classname,"SYSTEM-AREA-POINTER").
struct_opv(z,claz_system_area_pointer,classof,claz_built_in_class).
struct_opv(z,claz_system_area_pointer,subtypep,claz_t).
struct_opv(z,claz_system_area_pointer,super_priority,[claz_t]).
struct_opv(z,claz_tab,classname,"TAB").
struct_opv(z,claz_tab,classof,claz_built_in_class).
struct_opv(z,claz_tab,name,"COLINC",zlot_tab_colinc).
struct_opv(z,claz_tab,name,"COLNUM",zlot_tab_colnum).
struct_opv(z,claz_tab,name,"RELATIVEP",zlot_tab_relativep).
struct_opv(z,claz_tab,name,"SECTIONP",zlot_tab_sectionp).
struct_opv(z,claz_tab,slot,colinc,zlot_tab_colinc).
struct_opv(z,claz_tab,slot,colnum,zlot_tab_colnum).
struct_opv(z,claz_tab,slot,relativep,zlot_tab_relativep).
struct_opv(z,claz_tab,slot,sectionp,zlot_tab_sectionp).
struct_opv(z,claz_tab,subtypep,claz_queued_op).
struct_opv(z,claz_tab,super_priority,[claz_queued_op,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_tail_set,classname,"TAIL-SET").
struct_opv(z,claz_tail_set,classof,claz_built_in_class).
struct_opv(z,claz_tail_set,name,"FUNS",zlot_tail_set_funs).
struct_opv(z,claz_tail_set,name,"INFO",zlot_tail_set_info).
struct_opv(z,claz_tail_set,name,"TYPE",zlot_tail_set_type).
struct_opv(z,claz_tail_set,slot,funs,zlot_tail_set_funs).
struct_opv(z,claz_tail_set,slot,info,zlot_tail_set_info).
struct_opv(z,claz_tail_set,slot,type,zlot_tail_set_type).
struct_opv(z,claz_tail_set,subtypep,claz_structure_c33_object).
struct_opv(z,claz_tail_set,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_template,classname,"TEMPLATE").
struct_opv(z,claz_template,classof,claz_built_in_class).
struct_opv(z,claz_template,name,"ARG-TYPES",zlot_template_arg_types).
struct_opv(z,claz_template,name,"COST",zlot_template_cost).
struct_opv(z,claz_template,name,"GUARD",zlot_template_guard).
struct_opv(z,claz_template,name,"INFO-ARG-COUNT",zlot_template_info_arg_count).
struct_opv(z,claz_template,name,"LTN-POLICY",zlot_template_ltn_policy).
struct_opv(z,claz_template,name,"MORE-ARGS-TYPE",zlot_template_more_args_type).
struct_opv(z,claz_template,name,"MORE-RESULTS-TYPE",zlot_template_more_results_type).
struct_opv(z,claz_template,name,"NAME",zlot_template_name).
struct_opv(z,claz_template,name,"NOTE",zlot_template_note).
struct_opv(z,claz_template,name,"RESULT-TYPES",zlot_template_result_types).
struct_opv(z,claz_template,name,"TYPE",zlot_template_type).
struct_opv(z,claz_template,slot,arg_types,zlot_template_arg_types).
struct_opv(z,claz_template,slot,cost,zlot_template_cost).
struct_opv(z,claz_template,slot,guard,zlot_template_guard).
struct_opv(z,claz_template,slot,info_arg_count,zlot_template_info_arg_count).
struct_opv(z,claz_template,slot,ltn_policy,zlot_template_ltn_policy).
struct_opv(z,claz_template,slot,more_args_type,zlot_template_more_args_type).
struct_opv(z,claz_template,slot,more_results_type,zlot_template_more_results_type).
struct_opv(z,claz_template,slot,name,zlot_template_name).
struct_opv(z,claz_template,slot,note,zlot_template_note).
struct_opv(z,claz_template,slot,result_types,zlot_template_result_types).
struct_opv(z,claz_template,slot,type,zlot_template_type).
struct_opv(z,claz_template,subtypep,claz_structure_c33_object).
struct_opv(z,claz_template,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_thread_deadlock,classname,"THREAD-DEADLOCK").
struct_opv(z,claz_thread_deadlock,classof,claz_built_in_class).
struct_opv(z,claz_thread_deadlock,name,"CYCLE",zlot_thread_deadlock_cycle).
struct_opv(z,claz_thread_deadlock,slot,cycle,zlot_thread_deadlock_cycle).
struct_opv(z,claz_thread_destroyed,classname,"THREAD-DESTROYED").
struct_opv(z,claz_thread_destroyed,classof,claz_built_in_class).
struct_opv(z,claz_throw,classname,"THROW").
struct_opv(z,claz_throw,classof,claz_built_in_class).
struct_opv(z,claz_throw,name,"RESULT",zlot_throw_result).
struct_opv(z,claz_throw,name,"TAG",zlot_throw_tag).
struct_opv(z,claz_throw,name,"VALUES",zlot_throw_values).
struct_opv(z,claz_throw,readonly,t,zlot_throw_result).
struct_opv(z,claz_throw,readonly,t,zlot_throw_tag).
struct_opv(z,claz_throw,readonly,t,zlot_throw_values).
struct_opv(z,claz_throw,returns,claz_list,zlot_throw_values).
struct_opv(z,claz_throw,returns,claz_t,zlot_throw_result).
struct_opv(z,claz_throw,returns,claz_t,zlot_throw_tag).
struct_opv(z,claz_throw,slot,result,zlot_throw_result).
struct_opv(z,claz_throw,slot,tag,zlot_throw_tag).
struct_opv(z,claz_throw,slot,values,zlot_throw_values).
struct_opv(z,claz_throw,subtypep,claz_control_transfer).
struct_opv(z,claz_time_info,classname,"TIME-INFO").
struct_opv(z,claz_time_info,classof,claz_built_in_class).
struct_opv(z,claz_time_info,name,"CALLS",zlot_time_info_calls).
struct_opv(z,claz_time_info,name,"CONSING",zlot_time_info_consing).
struct_opv(z,claz_time_info,name,"GC-RUN-TIME",zlot_time_info_gc_run_time).
struct_opv(z,claz_time_info,name,"NAME",zlot_time_info_name).
struct_opv(z,claz_time_info,name,"SECONDS",zlot_time_info_seconds).
struct_opv(z,claz_time_info,slot,calls,zlot_time_info_calls).
struct_opv(z,claz_time_info,slot,consing,zlot_time_info_consing).
struct_opv(z,claz_time_info,slot,gc_run_time,zlot_time_info_gc_run_time).
struct_opv(z,claz_time_info,slot,name,zlot_time_info_name).
struct_opv(z,claz_time_info,slot,seconds,zlot_time_info_seconds).
struct_opv(z,claz_time_info,subtypep,claz_structure_object).
struct_opv(z,claz_time_info,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_timeout,classname,"TIMEOUT").
struct_opv(z,claz_timeout,classof,claz_built_in_class).
struct_opv(z,claz_timeout,name,"SECONDS",zlot_timeout_seconds).
struct_opv(z,claz_timeout,slot,seconds,zlot_timeout_seconds).
struct_opv(z,claz_timer,classname,"TIMER").
struct_opv(z,claz_timer,classof,claz_built_in_class).
struct_opv(z,claz_timer,name,"CANCEL-FUNCTION",zlot_timer_cancel_function).
struct_opv(z,claz_timer,name,"CATCH-UP",zlot_timer_catch_up).
struct_opv(z,claz_timer,name,"EXPIRE-TIME",zlot_timer_expire_time).
struct_opv(z,claz_timer,name,"FUNCTION",zlot_timer_function).
struct_opv(z,claz_timer,name,"INTERRUPT-FUNCTION",zlot_timer_interrupt_function).
struct_opv(z,claz_timer,name,"NAME",zlot_timer_name).
struct_opv(z,claz_timer,name,"REPEAT-INTERVAL",zlot_timer_repeat_interval).
struct_opv(z,claz_timer,name,"THREAD",zlot_timer_thread).
struct_opv(z,claz_timer,slot,cancel_function,zlot_timer_cancel_function).
struct_opv(z,claz_timer,slot,catch_up,zlot_timer_catch_up).
struct_opv(z,claz_timer,slot,expire_time,zlot_timer_expire_time).
struct_opv(z,claz_timer,slot,function,zlot_timer_function).
struct_opv(z,claz_timer,slot,interrupt_function,zlot_timer_interrupt_function).
struct_opv(z,claz_timer,slot,name,zlot_timer_name).
struct_opv(z,claz_timer,slot,repeat_interval,zlot_timer_repeat_interval).
struct_opv(z,claz_timer,slot,thread,zlot_timer_thread).
struct_opv(z,claz_timer,subtypep,claz_structure_object).
struct_opv(z,claz_timer,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_tn,classname,"TN").
struct_opv(z,claz_tn,classof,claz_built_in_class).
struct_opv(z,claz_tn,name,"COST",zlot_tn_cost).
struct_opv(z,claz_tn,name,"CURRENT-CONFLICT",zlot_tn_current_conflict).
struct_opv(z,claz_tn,name,"GLOBAL-CONFLICTS",zlot_tn_global_conflicts).
struct_opv(z,claz_tn,name,"KIND",zlot_tn_kind).
struct_opv(z,claz_tn,name,"LEAF",zlot_tn_leaf).
struct_opv(z,claz_tn,name,"LOCAL",zlot_tn_local).
struct_opv(z,claz_tn,name,"LOCAL-CONFLICTS",zlot_tn_local_conflicts).
struct_opv(z,claz_tn,name,"LOCAL-NUMBER",zlot_tn_local_number).
struct_opv(z,claz_tn,name,"LOOP-DEPTH",zlot_tn_loop_depth).
struct_opv(z,claz_tn,name,"NEXT",zlot_tn_next).
struct_opv(z,claz_tn,name,"NEXT-XX",zlot_tn_next_xx).
struct_opv(z,claz_tn,name,"OFFSET",zlot_tn_offset).
struct_opv(z,claz_tn,name,"PHYSENV",zlot_tn_physenv).
struct_opv(z,claz_tn,name,"PRIMITIVE-TYPE",zlot_tn_primitive_type).
struct_opv(z,claz_tn,name,"READS",zlot_tn_reads).
struct_opv(z,claz_tn,name,"SAVE-TN",zlot_tn_save_tn).
struct_opv(z,claz_tn,name,"SC",zlot_tn_sc).
struct_opv(z,claz_tn,name,"WRITES",zlot_tn_writes).
struct_opv(z,claz_tn,slot,cost,zlot_tn_cost).
struct_opv(z,claz_tn,slot,current_conflict,zlot_tn_current_conflict).
struct_opv(z,claz_tn,slot,global_conflicts,zlot_tn_global_conflicts).
struct_opv(z,claz_tn,slot,kind,zlot_tn_kind).
struct_opv(z,claz_tn,slot,leaf,zlot_tn_leaf).
struct_opv(z,claz_tn,slot,local,zlot_tn_local).
struct_opv(z,claz_tn,slot,local_conflicts,zlot_tn_local_conflicts).
struct_opv(z,claz_tn,slot,local_number,zlot_tn_local_number).
struct_opv(z,claz_tn,slot,loop_depth,zlot_tn_loop_depth).
struct_opv(z,claz_tn,slot,next,zlot_tn_next).
struct_opv(z,claz_tn,slot,next_xx,zlot_tn_next_xx).
struct_opv(z,claz_tn,slot,offset,zlot_tn_offset).
struct_opv(z,claz_tn,slot,physenv,zlot_tn_physenv).
struct_opv(z,claz_tn,slot,primitive_type,zlot_tn_primitive_type).
struct_opv(z,claz_tn,slot,reads,zlot_tn_reads).
struct_opv(z,claz_tn,slot,save_tn,zlot_tn_save_tn).
struct_opv(z,claz_tn,slot,sc,zlot_tn_sc).
struct_opv(z,claz_tn,slot,writes,zlot_tn_writes).
struct_opv(z,claz_tn,subtypep,claz_sset_element).
struct_opv(z,claz_tn,super_priority,[claz_sset_element,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_tn_ref,classname,"TN-REF").
struct_opv(z,claz_tn_ref,classof,claz_built_in_class).
struct_opv(z,claz_tn_ref,name,"ACROSS",zlot_tn_ref_across).
struct_opv(z,claz_tn_ref,name,"LOAD-TN",zlot_tn_ref_load_tn).
struct_opv(z,claz_tn_ref,name,"NEXT",zlot_tn_ref_next).
struct_opv(z,claz_tn_ref,name,"NEXT-REF",zlot_tn_ref_next_ref).
struct_opv(z,claz_tn_ref,name,"TARGET",zlot_tn_ref_target).
struct_opv(z,claz_tn_ref,name,"TN",zlot_tn_ref_tn).
struct_opv(z,claz_tn_ref,name,"VOP",zlot_tn_ref_vop).
struct_opv(z,claz_tn_ref,name,"WRITE-P",zlot_tn_ref_write_p).
struct_opv(z,claz_tn_ref,slot,across,zlot_tn_ref_across).
struct_opv(z,claz_tn_ref,slot,load_tn,zlot_tn_ref_load_tn).
struct_opv(z,claz_tn_ref,slot,next,zlot_tn_ref_next).
struct_opv(z,claz_tn_ref,slot,next_ref,zlot_tn_ref_next_ref).
struct_opv(z,claz_tn_ref,slot,target,zlot_tn_ref_target).
struct_opv(z,claz_tn_ref,slot,tn,zlot_tn_ref_tn).
struct_opv(z,claz_tn_ref,slot,vop,zlot_tn_ref_vop).
struct_opv(z,claz_tn_ref,slot,write_p,zlot_tn_ref_write_p).
struct_opv(z,claz_tn_ref,subtypep,claz_structure_c33_object).
struct_opv(z,claz_tn_ref,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_token_buf,classname,"TOKEN-BUF").
struct_opv(z,claz_token_buf,classof,claz_built_in_class).
struct_opv(z,claz_token_buf,name,"ADJUSTABLE-STRING",zlot_token_buf_adjustable_string).
struct_opv(z,claz_token_buf,name,"CURSOR",zlot_token_buf_cursor).
struct_opv(z,claz_token_buf,name,"ESCAPES",zlot_token_buf_escapes).
struct_opv(z,claz_token_buf,name,"FILL-PTR",zlot_token_buf_fill_ptr).
struct_opv(z,claz_token_buf,name,"INITIAL-STRING",zlot_token_buf_initial_string).
struct_opv(z,claz_token_buf,name,"NEXT",zlot_token_buf_next).
struct_opv(z,claz_token_buf,name,"ONLY-BASE-CHARS",zlot_token_buf_only_base_chars).
struct_opv(z,claz_token_buf,name,"STRING",zlot_token_buf_string).
struct_opv(z,claz_token_buf,slot,adjustable_string,zlot_token_buf_adjustable_string).
struct_opv(z,claz_token_buf,slot,cursor,zlot_token_buf_cursor).
struct_opv(z,claz_token_buf,slot,escapes,zlot_token_buf_escapes).
struct_opv(z,claz_token_buf,slot,fill_ptr,zlot_token_buf_fill_ptr).
struct_opv(z,claz_token_buf,slot,initial_string,zlot_token_buf_initial_string).
struct_opv(z,claz_token_buf,slot,next,zlot_token_buf_next).
struct_opv(z,claz_token_buf,slot,only_base_chars,zlot_token_buf_only_base_chars).
struct_opv(z,claz_token_buf,slot,string,zlot_token_buf_string).
struct_opv(z,claz_token_buf,subtypep,claz_structure_object).
struct_opv(z,claz_token_buf,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_trace_info,classname,"TRACE-INFO").
struct_opv(z,claz_trace_info,classof,claz_built_in_class).
struct_opv(z,claz_trace_info,name,"BREAK",zlot_trace_info_break).
struct_opv(z,claz_trace_info,name,"BREAK-AFTER",zlot_trace_info_break_after).
struct_opv(z,claz_trace_info,name,"ENCAPSULATED",zlot_trace_info_encapsulated).
struct_opv(z,claz_trace_info,name,"END-BREAKPOINT",zlot_trace_info_end_breakpoint).
struct_opv(z,claz_trace_info,name,"METHODS",zlot_trace_info_methods).
struct_opv(z,claz_trace_info,name,"NAMED",zlot_trace_info_named).
struct_opv(z,claz_trace_info,name,"PRINT",zlot_trace_info_print).
struct_opv(z,claz_trace_info,name,"PRINT-AFTER",zlot_trace_info_print_after).
struct_opv(z,claz_trace_info,name,"START-BREAKPOINT",zlot_trace_info_start_breakpoint).
struct_opv(z,claz_trace_info,name,"UNTRACED",zlot_trace_info_untraced).
struct_opv(z,claz_trace_info,name,"WHAT",zlot_trace_info_what).
struct_opv(z,claz_trace_info,name,"WHEREIN",zlot_trace_info_wherein).
struct_opv(z,claz_trace_info,slot,break,zlot_trace_info_break).
struct_opv(z,claz_trace_info,slot,break_after,zlot_trace_info_break_after).
struct_opv(z,claz_trace_info,slot,encapsulated,zlot_trace_info_encapsulated).
struct_opv(z,claz_trace_info,slot,end_breakpoint,zlot_trace_info_end_breakpoint).
struct_opv(z,claz_trace_info,slot,methods,zlot_trace_info_methods).
struct_opv(z,claz_trace_info,slot,named,zlot_trace_info_named).
struct_opv(z,claz_trace_info,slot,print,zlot_trace_info_print).
struct_opv(z,claz_trace_info,slot,print_after,zlot_trace_info_print_after).
struct_opv(z,claz_trace_info,slot,start_breakpoint,zlot_trace_info_start_breakpoint).
struct_opv(z,claz_trace_info,slot,untraced,zlot_trace_info_untraced).
struct_opv(z,claz_trace_info,slot,what,zlot_trace_info_what).
struct_opv(z,claz_trace_info,slot,wherein,zlot_trace_info_wherein).
struct_opv(z,claz_trace_info,subtypep,claz_structure_c33_object).
struct_opv(z,claz_trace_info,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_transform,classname,"TRANSFORM").
struct_opv(z,claz_transform,classof,claz_built_in_class).
struct_opv(z,claz_transform,name,"FUNCTION",zlot_transform_function).
struct_opv(z,claz_transform,name,"IMPORTANT",zlot_transform_important).
struct_opv(z,claz_transform,name,"NOTE",zlot_transform_note).
struct_opv(z,claz_transform,name,"TYPE",zlot_transform_type).
struct_opv(z,claz_transform,slot,function,zlot_transform_function).
struct_opv(z,claz_transform,slot,important,zlot_transform_important).
struct_opv(z,claz_transform,slot,note,zlot_transform_note).
struct_opv(z,claz_transform,slot,type,zlot_transform_type).
struct_opv(z,claz_transform,subtypep,claz_structure_object).
struct_opv(z,claz_transform,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_two_class,classname,"TWO-CLASS").
struct_opv(z,claz_two_class,classof,claz_built_in_class).
struct_opv(z,claz_two_class,name,"WRAPPER1",zlot_two_class_wrapper1).
struct_opv(z,claz_two_class,slot,wrapper1,zlot_two_class_wrapper1).
struct_opv(z,claz_two_class,subtypep,claz_one_class).
struct_opv(z,claz_two_class,super_priority,[claz_one_class,claz_one_index_dfun_info,claz_accessor_dfun_info,claz_dfun_info,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_uname,classname,"UNAME").
struct_opv(z,claz_uname,classof,claz_built_in_class).
struct_opv(z,claz_uname,name,"MACHINE",zlot_uname_machine).
struct_opv(z,claz_uname,name,"NODENAME",zlot_uname_nodename).
struct_opv(z,claz_uname,name,"RELEASE",zlot_uname_release).
struct_opv(z,claz_uname,name,"SYSNAME",zlot_uname_sysname).
struct_opv(z,claz_uname,name,"VERSION",zlot_uname_version).
struct_opv(z,claz_uname,slot,machine,zlot_uname_machine).
struct_opv(z,claz_uname,slot,nodename,zlot_uname_nodename).
struct_opv(z,claz_uname,slot,release,zlot_uname_release).
struct_opv(z,claz_uname,slot,sysname,zlot_uname_sysname).
struct_opv(z,claz_uname,slot,version,zlot_uname_version).
struct_opv(z,claz_uname,subtypep,claz_structure_object).
struct_opv(z,claz_uname,super_priority,[claz_structure_object,claz_t]).
struct_opv(z,claz_unbound_slot,classname,"UNBOUND-SLOT").
struct_opv(z,claz_unbound_slot,classof,claz_built_in_class).
struct_opv(z,claz_unbound_slot,name,"INSTANCE",zlot_unbound_slot_instance).
struct_opv(z,claz_unbound_slot,slot,instance,zlot_unbound_slot_instance).
struct_opv(z,claz_unbound_variable,classname,"UNBOUND-VARIABLE").
struct_opv(z,claz_unbound_variable,classof,claz_built_in_class).
struct_opv(z,claz_undefined_classoid,classname,"UNDEFINED-CLASSOID").
struct_opv(z,claz_undefined_classoid,classof,claz_built_in_class).
struct_opv(z,claz_undefined_classoid,subtypep,claz_classoid).
struct_opv(z,claz_undefined_classoid,super_priority,[claz_classoid,claz_ctype,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_undefined_function,classname,"UNDEFINED-FUNCTION").
struct_opv(z,claz_undefined_function,classof,claz_built_in_class).
struct_opv(z,claz_undefined_package,classname,"UNDEFINED-PACKAGE").
struct_opv(z,claz_undefined_package,classof,claz_built_in_class).
struct_opv(z,claz_undefined_package,subtypep,claz_structure_object).
struct_opv(z,claz_undefined_package,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_union_type,classname,"UNION-TYPE").
struct_opv(z,claz_union_type,classof,claz_built_in_class).
struct_opv(z,claz_union_type,name,"CLASS-INFO",zlot_union_type_class_info).
struct_opv(z,claz_union_type,slot,class_info,zlot_union_type_class_info).
struct_opv(z,claz_union_type,subtypep,claz_compound_type).
struct_opv(z,claz_union_type,super_priority,[claz_compound_type,claz_ctype,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_unix_host,classname,"UNIX-HOST").
struct_opv(z,claz_unix_host,classof,claz_built_in_class).
struct_opv(z,claz_unix_host,name,"CUSTOMARY-CASE",zlot_unix_host_customary_case).
struct_opv(z,claz_unix_host,name,"PARSE",zlot_unix_host_parse).
struct_opv(z,claz_unix_host,name,"PARSE-NATIVE",zlot_unix_host_parse_native).
struct_opv(z,claz_unix_host,name,"SIMPLIFY-NAMESTRING",zlot_unix_host_simplify_namestring).
struct_opv(z,claz_unix_host,name,"UNPARSE",zlot_unix_host_unparse).
struct_opv(z,claz_unix_host,name,"UNPARSE-DIRECTORY",zlot_unix_host_unparse_directory).
struct_opv(z,claz_unix_host,name,"UNPARSE-DIRECTORY-SEPARATOR",zlot_unix_host_unparse_directory_separator).
struct_opv(z,claz_unix_host,name,"UNPARSE-ENOUGH",zlot_unix_host_unparse_enough).
struct_opv(z,claz_unix_host,name,"UNPARSE-FILE",zlot_unix_host_unparse_file).
struct_opv(z,claz_unix_host,name,"UNPARSE-HOST",zlot_unix_host_unparse_host).
struct_opv(z,claz_unix_host,name,"UNPARSE-NATIVE",zlot_unix_host_unparse_native).
struct_opv(z,claz_unix_host,slot,customary_case,zlot_unix_host_customary_case).
struct_opv(z,claz_unix_host,slot,parse,zlot_unix_host_parse).
struct_opv(z,claz_unix_host,slot,parse_native,zlot_unix_host_parse_native).
struct_opv(z,claz_unix_host,slot,simplify_namestring,zlot_unix_host_simplify_namestring).
struct_opv(z,claz_unix_host,slot,unparse,zlot_unix_host_unparse).
struct_opv(z,claz_unix_host,slot,unparse_directory,zlot_unix_host_unparse_directory).
struct_opv(z,claz_unix_host,slot,unparse_directory_separator,zlot_unix_host_unparse_directory_separator).
struct_opv(z,claz_unix_host,slot,unparse_enough,zlot_unix_host_unparse_enough).
struct_opv(z,claz_unix_host,slot,unparse_file,zlot_unix_host_unparse_file).
struct_opv(z,claz_unix_host,slot,unparse_host,zlot_unix_host_unparse_host).
struct_opv(z,claz_unix_host,slot,unparse_native,zlot_unix_host_unparse_native).
struct_opv(z,claz_unix_host,subtypep,claz_host).
struct_opv(z,claz_unix_host,super_priority,[claz_host,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_unknown_code_location,classname,"UNKNOWN-CODE-LOCATION").
struct_opv(z,claz_unknown_code_location,classof,claz_built_in_class).
struct_opv(z,claz_unknown_code_location,name,"CODE-LOCATION",zlot_unknown_code_location_code_location).
struct_opv(z,claz_unknown_code_location,slot,code_location,zlot_unknown_code_location_code_location).
struct_opv(z,claz_unknown_debug_var,classname,"UNKNOWN-DEBUG-VAR").
struct_opv(z,claz_unknown_debug_var,classof,claz_built_in_class).
struct_opv(z,claz_unknown_debug_var,name,"DEBUG-FUN",zlot_unknown_debug_var_debug_fun).
struct_opv(z,claz_unknown_debug_var,name,"DEBUG-VAR",zlot_unknown_debug_var_debug_var).
struct_opv(z,claz_unknown_debug_var,slot,debug_fun,zlot_unknown_debug_var_debug_fun).
struct_opv(z,claz_unknown_debug_var,slot,debug_var,zlot_unknown_debug_var_debug_var).
struct_opv(z,claz_unknown_type,classname,"UNKNOWN-TYPE").
struct_opv(z,claz_unknown_type,classof,claz_built_in_class).
struct_opv(z,claz_unknown_type,subtypep,claz_hairy_type).
struct_opv(z,claz_unknown_type,super_priority,[claz_hairy_type,claz_ctype,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_unprintable_object,classname,"UNPRINTABLE-OBJECT").
struct_opv(z,claz_unprintable_object,classof,claz_built_in_class).
struct_opv(z,claz_unprintable_object,name,"STRING",zlot_unprintable_object_string).
struct_opv(z,claz_unprintable_object,slot,string,zlot_unprintable_object_string).
struct_opv(z,claz_unprintable_object,subtypep,claz_structure_object).
struct_opv(z,claz_unprintable_object,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_unset_funcallable_instance_function,classname,"UNSET-FUNCALLABLE-INSTANCE-FUNCTION").
struct_opv(z,claz_unset_funcallable_instance_function,classof,claz_built_in_class).
struct_opv(z,claz_unsupported_operator,classname,"UNSUPPORTED-OPERATOR").
struct_opv(z,claz_unsupported_operator,classof,claz_built_in_class).
struct_opv(z,claz_usage,classname,"USAGE").
struct_opv(z,claz_usage,classof,claz_built_in_class).
struct_opv(z,claz_usage,name,"BLOCKS-INPUT",zlot_usage_blocks_input).
struct_opv(z,claz_usage,name,"BLOCKS-OUTPUT",zlot_usage_blocks_output).
struct_opv(z,claz_usage,name,"CONTEXT-SWITCHES-INVOLUNTARY",zlot_usage_context_switches_involuntary).
struct_opv(z,claz_usage,name,"CONTEXT-SWITCHES-VOLUNTARY",zlot_usage_context_switches_voluntary).
struct_opv(z,claz_usage,name,"DATA-MEMORY",zlot_usage_data_memory).
struct_opv(z,claz_usage,name,"MAJOR-PAGE-FAULTS",zlot_usage_major_page_faults).
struct_opv(z,claz_usage,name,"MAX-RSS",zlot_usage_max_rss).
struct_opv(z,claz_usage,name,"MESSAGES-RECEIVED",zlot_usage_messages_received).
struct_opv(z,claz_usage,name,"MESSAGES-SENT",zlot_usage_messages_sent).
struct_opv(z,claz_usage,name,"MINOR-PAGE-FAULTS",zlot_usage_minor_page_faults).
struct_opv(z,claz_usage,name,"NUM-SWAPS",zlot_usage_num_swaps).
struct_opv(z,claz_usage,name,"SHARED-MEMORY",zlot_usage_shared_memory).
struct_opv(z,claz_usage,name,"SIGNALS",zlot_usage_signals).
struct_opv(z,claz_usage,name,"STACK-MEMORY",zlot_usage_stack_memory).
struct_opv(z,claz_usage,name,"SYSTEM-TIME",zlot_usage_system_time).
struct_opv(z,claz_usage,name,"USER-TIME",zlot_usage_user_time).
struct_opv(z,claz_usage,slot,blocks_input,zlot_usage_blocks_input).
struct_opv(z,claz_usage,slot,blocks_output,zlot_usage_blocks_output).
struct_opv(z,claz_usage,slot,context_switches_involuntary,zlot_usage_context_switches_involuntary).
struct_opv(z,claz_usage,slot,context_switches_voluntary,zlot_usage_context_switches_voluntary).
struct_opv(z,claz_usage,slot,data_memory,zlot_usage_data_memory).
struct_opv(z,claz_usage,slot,major_page_faults,zlot_usage_major_page_faults).
struct_opv(z,claz_usage,slot,max_rss,zlot_usage_max_rss).
struct_opv(z,claz_usage,slot,messages_received,zlot_usage_messages_received).
struct_opv(z,claz_usage,slot,messages_sent,zlot_usage_messages_sent).
struct_opv(z,claz_usage,slot,minor_page_faults,zlot_usage_minor_page_faults).
struct_opv(z,claz_usage,slot,num_swaps,zlot_usage_num_swaps).
struct_opv(z,claz_usage,slot,shared_memory,zlot_usage_shared_memory).
struct_opv(z,claz_usage,slot,signals,zlot_usage_signals).
struct_opv(z,claz_usage,slot,stack_memory,zlot_usage_stack_memory).
struct_opv(z,claz_usage,slot,system_time,zlot_usage_system_time).
struct_opv(z,claz_usage,slot,user_time,zlot_usage_user_time).
struct_opv(z,claz_usage,subtypep,claz_structure_object).
struct_opv(z,claz_usage,super_priority,[claz_structure_object,claz_t]).
struct_opv(z,claz_user_info,classname,"USER-INFO").
struct_opv(z,claz_user_info,classof,claz_built_in_class).
struct_opv(z,claz_user_info,name,"FULL-NAME",zlot_user_info_full_name).
struct_opv(z,claz_user_info,name,"GID",zlot_user_info_gid).
struct_opv(z,claz_user_info,name,"HOME-DIR",zlot_user_info_home_dir).
struct_opv(z,claz_user_info,name,"LOGIN-ID",zlot_user_info_login_id).
struct_opv(z,claz_user_info,name,"PASSWD",zlot_user_info_passwd).
struct_opv(z,claz_user_info,name,"SHELL",zlot_user_info_shell).
struct_opv(z,claz_user_info,name,"UID",zlot_user_info_uid).
struct_opv(z,claz_user_info,slot,full_name,zlot_user_info_full_name).
struct_opv(z,claz_user_info,slot,gid,zlot_user_info_gid).
struct_opv(z,claz_user_info,slot,home_dir,zlot_user_info_home_dir).
struct_opv(z,claz_user_info,slot,login_id,zlot_user_info_login_id).
struct_opv(z,claz_user_info,slot,passwd,zlot_user_info_passwd).
struct_opv(z,claz_user_info,slot,shell,zlot_user_info_shell).
struct_opv(z,claz_user_info,slot,uid,zlot_user_info_uid).
struct_opv(z,claz_user_info,subtypep,claz_structure_object).
struct_opv(z,claz_user_info,super_priority,[claz_structure_object,claz_t]).
struct_opv(z,claz_utmpx,classname,"UTMPX").
struct_opv(z,claz_utmpx,classof,claz_built_in_class).
struct_opv(z,claz_utmpx,name,"HOST",zlot_utmpx_host).
struct_opv(z,claz_utmpx,name,"ID",zlot_utmpx_id).
struct_opv(z,claz_utmpx,name,"LINE",zlot_utmpx_line).
struct_opv(z,claz_utmpx,name,"PID",zlot_utmpx_pid).
struct_opv(z,claz_utmpx,name,"TV",zlot_utmpx_tv).
struct_opv(z,claz_utmpx,name,"TYPE",zlot_utmpx_type).
struct_opv(z,claz_utmpx,name,"USER",zlot_utmpx_user).
struct_opv(z,claz_utmpx,slot,host,zlot_utmpx_host).
struct_opv(z,claz_utmpx,slot,id,zlot_utmpx_id).
struct_opv(z,claz_utmpx,slot,line,zlot_utmpx_line).
struct_opv(z,claz_utmpx,slot,pid,zlot_utmpx_pid).
struct_opv(z,claz_utmpx,slot,tv,zlot_utmpx_tv).
struct_opv(z,claz_utmpx,slot,type,zlot_utmpx_type).
struct_opv(z,claz_utmpx,slot,user,zlot_utmpx_user).
struct_opv(z,claz_utmpx,subtypep,claz_structure_object).
struct_opv(z,claz_utmpx,super_priority,[claz_structure_object,claz_t]).
struct_opv(z,claz_valsrc,classname,"VALSRC").
struct_opv(z,claz_valsrc,classof,claz_built_in_class).
struct_opv(z,claz_valsrc,name,"SOURCE",zlot_valsrc_source).
struct_opv(z,claz_valsrc,name,"VALUE",zlot_valsrc_value).
struct_opv(z,claz_valsrc,slot,source,zlot_valsrc_source).
struct_opv(z,claz_valsrc,slot,value,zlot_valsrc_value).
struct_opv(z,claz_valsrc,subtypep,claz_structure_object).
struct_opv(z,claz_valsrc,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_valued_node,classname,"VALUED-NODE").
struct_opv(z,claz_valued_node,classof,claz_built_in_class).
struct_opv(z,claz_valued_node,name,"DERIVED-TYPE",zlot_valued_node_derived_type).
struct_opv(z,claz_valued_node,name,"LVAR",zlot_valued_node_lvar).
struct_opv(z,claz_valued_node,slot,derived_type,zlot_valued_node_derived_type).
struct_opv(z,claz_valued_node,slot,lvar,zlot_valued_node_lvar).
struct_opv(z,claz_valued_node,subtypep,claz_node).
struct_opv(z,claz_valued_node,super_priority,[claz_node,claz_sset_element,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_values_type,classname,"VALUES-TYPE").
struct_opv(z,claz_values_type,classof,claz_built_in_class).
struct_opv(z,claz_values_type,name,"CLASS-INFO",zlot_values_type_class_info).
struct_opv(z,claz_values_type,slot,class_info,zlot_values_type_class_info).
struct_opv(z,claz_values_type,subtypep,claz_args_type).
struct_opv(z,claz_values_type,super_priority,[claz_args_type,claz_ctype,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_var,classname,"VAR").
struct_opv(z,claz_var,classof,claz_built_in_class).
struct_opv(z,claz_var,name,"ASSIGNEDP",zlot_var_assignedp).
struct_opv(z,claz_var,name,"CLOSUREP",zlot_var_closurep).
struct_opv(z,claz_var,name,"CONSTANT",zlot_var_constant).
struct_opv(z,claz_var,name,"CONSTANTP",zlot_var_constantp).
struct_opv(z,claz_var,name,"FNODE",zlot_var_fnode).
struct_opv(z,claz_var,name,"FOR-VALUE-USEDP",zlot_var_for_value_usedp).
struct_opv(z,claz_var,name,"MODIFIED-LIST",zlot_var_modified_list).
struct_opv(z,claz_var,name,"NAME",zlot_var_name).
struct_opv(z,claz_var,name,"REALLY-USEDP",zlot_var_really_usedp).
struct_opv(z,claz_var,name,"REPLACEABLE-LIST",zlot_var_replaceable_list).
struct_opv(z,claz_var,name,"SPECIALP",zlot_var_specialp).
struct_opv(z,claz_var,name,"STACKZ",zlot_var_stackz).
struct_opv(z,claz_var,name,"USEDP",zlot_var_usedp).
struct_opv(z,claz_var,name,"VENVC",zlot_var_venvc).
struct_opv(z,claz_var,slot,assignedp,zlot_var_assignedp).
struct_opv(z,claz_var,slot,closurep,zlot_var_closurep).
struct_opv(z,claz_var,slot,constant,zlot_var_constant).
struct_opv(z,claz_var,slot,constantp,zlot_var_constantp).
struct_opv(z,claz_var,slot,fnode,zlot_var_fnode).
struct_opv(z,claz_var,slot,for_value_usedp,zlot_var_for_value_usedp).
struct_opv(z,claz_var,slot,modified_list,zlot_var_modified_list).
struct_opv(z,claz_var,slot,name,zlot_var_name).
struct_opv(z,claz_var,slot,really_usedp,zlot_var_really_usedp).
struct_opv(z,claz_var,slot,replaceable_list,zlot_var_replaceable_list).
struct_opv(z,claz_var,slot,specialp,zlot_var_specialp).
struct_opv(z,claz_var,slot,stackz,zlot_var_stackz).
struct_opv(z,claz_var,slot,usedp,zlot_var_usedp).
struct_opv(z,claz_var,slot,venvc,zlot_var_venvc).
struct_opv(z,claz_var,subtypep,claz_structure_object).
struct_opv(z,claz_var,super_priority,[claz_structure_object,claz_t]).
struct_opv(z,claz_vertex,classname,"VERTEX").
struct_opv(z,claz_vertex,classof,claz_built_in_class).
struct_opv(z,claz_vertex,name,"COLOR",zlot_vertex_color).
struct_opv(z,claz_vertex,name,"INCIDENCE",zlot_vertex_incidence).
struct_opv(z,claz_vertex,name,"INITIAL-DOMAIN",zlot_vertex_initial_domain).
struct_opv(z,claz_vertex,name,"INITIAL-DOMAIN-SIZE",zlot_vertex_initial_domain_size).
struct_opv(z,claz_vertex,name,"INVISIBLE",zlot_vertex_invisible).
struct_opv(z,claz_vertex,name,"PACK-TYPE",zlot_vertex_pack_type).
struct_opv(z,claz_vertex,name,"SPILL-COST",zlot_vertex_spill_cost).
struct_opv(z,claz_vertex,name,"TN",zlot_vertex_tn).
struct_opv(z,claz_vertex,slot,color,zlot_vertex_color).
struct_opv(z,claz_vertex,slot,incidence,zlot_vertex_incidence).
struct_opv(z,claz_vertex,slot,initial_domain,zlot_vertex_initial_domain).
struct_opv(z,claz_vertex,slot,initial_domain_size,zlot_vertex_initial_domain_size).
struct_opv(z,claz_vertex,slot,invisible,zlot_vertex_invisible).
struct_opv(z,claz_vertex,slot,pack_type,zlot_vertex_pack_type).
struct_opv(z,claz_vertex,slot,spill_cost,zlot_vertex_spill_cost).
struct_opv(z,claz_vertex,slot,tn,zlot_vertex_tn).
struct_opv(z,claz_vertex,subtypep,claz_sset_element).
struct_opv(z,claz_vertex,super_priority,[claz_sset_element,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_vop,classname,"VOP").
struct_opv(z,claz_vop,classof,claz_built_in_class).
struct_opv(z,claz_vop,name,"ARGS",zlot_vop_args).
struct_opv(z,claz_vop,name,"BLOCK",zlot_vop_block).
struct_opv(z,claz_vop,name,"CODEGEN-INFO",zlot_vop_codegen_info).
struct_opv(z,claz_vop,name,"INFO",zlot_vop_info).
struct_opv(z,claz_vop,name,"NEXT",zlot_vop_next).
struct_opv(z,claz_vop,name,"NODE",zlot_vop_node).
struct_opv(z,claz_vop,name,"PREV",zlot_vop_prev).
struct_opv(z,claz_vop,name,"REFS",zlot_vop_refs).
struct_opv(z,claz_vop,name,"RESULTS",zlot_vop_results).
struct_opv(z,claz_vop,name,"SAVE-SET",zlot_vop_save_set).
struct_opv(z,claz_vop,name,"TEMPS",zlot_vop_temps).
struct_opv(z,claz_vop,slot,args,zlot_vop_args).
struct_opv(z,claz_vop,slot,block,zlot_vop_block).
struct_opv(z,claz_vop,slot,codegen_info,zlot_vop_codegen_info).
struct_opv(z,claz_vop,slot,info,zlot_vop_info).
struct_opv(z,claz_vop,slot,next,zlot_vop_next).
struct_opv(z,claz_vop,slot,node,zlot_vop_node).
struct_opv(z,claz_vop,slot,prev,zlot_vop_prev).
struct_opv(z,claz_vop,slot,refs,zlot_vop_refs).
struct_opv(z,claz_vop,slot,results,zlot_vop_results).
struct_opv(z,claz_vop,slot,save_set,zlot_vop_save_set).
struct_opv(z,claz_vop,slot,temps,zlot_vop_temps).
struct_opv(z,claz_vop,subtypep,claz_structure_c33_object).
struct_opv(z,claz_vop,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_vop_info,classname,"VOP-INFO").
struct_opv(z,claz_vop_info,classof,claz_built_in_class).
struct_opv(z,claz_vop_info,name,"AFFECTED",zlot_vop_info_affected).
struct_opv(z,claz_vop_info,name,"ARG-COSTS",zlot_vop_info_arg_costs).
struct_opv(z,claz_vop_info,name,"ARG-LOAD-SCS",zlot_vop_info_arg_load_scs).
struct_opv(z,claz_vop_info,name,"EFFECTS",zlot_vop_info_effects).
struct_opv(z,claz_vop_info,name,"GENERATOR-FUNCTION",zlot_vop_info_generator_function).
struct_opv(z,claz_vop_info,name,"MORE-ARG-COSTS",zlot_vop_info_more_arg_costs).
struct_opv(z,claz_vop_info,name,"MORE-RESULT-COSTS",zlot_vop_info_more_result_costs).
struct_opv(z,claz_vop_info,name,"MOVE-ARGS",zlot_vop_info_move_args).
struct_opv(z,claz_vop_info,name,"NUM-ARGS",zlot_vop_info_num_args).
struct_opv(z,claz_vop_info,name,"NUM-RESULTS",zlot_vop_info_num_results).
struct_opv(z,claz_vop_info,name,"REF-ORDERING",zlot_vop_info_ref_ordering).
struct_opv(z,claz_vop_info,name,"RESULT-COSTS",zlot_vop_info_result_costs).
struct_opv(z,claz_vop_info,name,"RESULT-LOAD-SCS",zlot_vop_info_result_load_scs).
struct_opv(z,claz_vop_info,name,"SAVE-P",zlot_vop_info_save_p).
struct_opv(z,claz_vop_info,name,"TARGETS",zlot_vop_info_targets).
struct_opv(z,claz_vop_info,name,"TEMPS",zlot_vop_info_temps).
struct_opv(z,claz_vop_info,name,"VARIANT",zlot_vop_info_variant).
struct_opv(z,claz_vop_info,slot,affected,zlot_vop_info_affected).
struct_opv(z,claz_vop_info,slot,arg_costs,zlot_vop_info_arg_costs).
struct_opv(z,claz_vop_info,slot,arg_load_scs,zlot_vop_info_arg_load_scs).
struct_opv(z,claz_vop_info,slot,effects,zlot_vop_info_effects).
struct_opv(z,claz_vop_info,slot,generator_function,zlot_vop_info_generator_function).
struct_opv(z,claz_vop_info,slot,more_arg_costs,zlot_vop_info_more_arg_costs).
struct_opv(z,claz_vop_info,slot,more_result_costs,zlot_vop_info_more_result_costs).
struct_opv(z,claz_vop_info,slot,move_args,zlot_vop_info_move_args).
struct_opv(z,claz_vop_info,slot,num_args,zlot_vop_info_num_args).
struct_opv(z,claz_vop_info,slot,num_results,zlot_vop_info_num_results).
struct_opv(z,claz_vop_info,slot,ref_ordering,zlot_vop_info_ref_ordering).
struct_opv(z,claz_vop_info,slot,result_costs,zlot_vop_info_result_costs).
struct_opv(z,claz_vop_info,slot,result_load_scs,zlot_vop_info_result_load_scs).
struct_opv(z,claz_vop_info,slot,save_p,zlot_vop_info_save_p).
struct_opv(z,claz_vop_info,slot,targets,zlot_vop_info_targets).
struct_opv(z,claz_vop_info,slot,temps,zlot_vop_info_temps).
struct_opv(z,claz_vop_info,slot,variant,zlot_vop_info_variant).
struct_opv(z,claz_vop_info,subtypep,claz_template).
struct_opv(z,claz_vop_info,super_priority,[claz_template,claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_vop_parse,classname,"VOP-PARSE").
struct_opv(z,claz_vop_parse,classof,claz_built_in_class).
struct_opv(z,claz_vop_parse,name,"AFFECTED",zlot_vop_parse_affected).
struct_opv(z,claz_vop_parse,name,"ARG-TYPES",zlot_vop_parse_arg_types).
struct_opv(z,claz_vop_parse,name,"ARGS",zlot_vop_parse_args).
struct_opv(z,claz_vop_parse,name,"BODY",zlot_vop_parse_body).
struct_opv(z,claz_vop_parse,name,"COST",zlot_vop_parse_cost).
struct_opv(z,claz_vop_parse,name,"EFFECTS",zlot_vop_parse_effects).
struct_opv(z,claz_vop_parse,name,"GUARD",zlot_vop_parse_guard).
struct_opv(z,claz_vop_parse,name,"IGNORES",zlot_vop_parse_ignores).
struct_opv(z,claz_vop_parse,name,"INFO-ARGS",zlot_vop_parse_info_args).
struct_opv(z,claz_vop_parse,name,"INHERITS",zlot_vop_parse_inherits).
struct_opv(z,claz_vop_parse,name,"LTN-POLICY",zlot_vop_parse_ltn_policy).
struct_opv(z,claz_vop_parse,name,"MORE-ARGS",zlot_vop_parse_more_args).
struct_opv(z,claz_vop_parse,name,"MORE-RESULTS",zlot_vop_parse_more_results).
struct_opv(z,claz_vop_parse,name,"MOVE-ARGS",zlot_vop_parse_move_args).
struct_opv(z,claz_vop_parse,name,"NAME",zlot_vop_parse_name).
struct_opv(z,claz_vop_parse,name,"NODE-VAR",zlot_vop_parse_node_var).
struct_opv(z,claz_vop_parse,name,"NOTE",zlot_vop_parse_note).
struct_opv(z,claz_vop_parse,name,"OPERANDS",zlot_vop_parse_operands).
struct_opv(z,claz_vop_parse,name,"RESULT-TYPES",zlot_vop_parse_result_types).
struct_opv(z,claz_vop_parse,name,"RESULTS",zlot_vop_parse_results).
struct_opv(z,claz_vop_parse,name,"SAVE-P",zlot_vop_parse_save_p).
struct_opv(z,claz_vop_parse,name,"TEMPS",zlot_vop_parse_temps).
struct_opv(z,claz_vop_parse,name,"TRANSLATE",zlot_vop_parse_translate).
struct_opv(z,claz_vop_parse,name,"VARIANT",zlot_vop_parse_variant).
struct_opv(z,claz_vop_parse,name,"VARIANT-VARS",zlot_vop_parse_variant_vars).
struct_opv(z,claz_vop_parse,name,"VOP-VAR",zlot_vop_parse_vop_var).
struct_opv(z,claz_vop_parse,slot,affected,zlot_vop_parse_affected).
struct_opv(z,claz_vop_parse,slot,arg_types,zlot_vop_parse_arg_types).
struct_opv(z,claz_vop_parse,slot,args,zlot_vop_parse_args).
struct_opv(z,claz_vop_parse,slot,body,zlot_vop_parse_body).
struct_opv(z,claz_vop_parse,slot,cost,zlot_vop_parse_cost).
struct_opv(z,claz_vop_parse,slot,effects,zlot_vop_parse_effects).
struct_opv(z,claz_vop_parse,slot,guard,zlot_vop_parse_guard).
struct_opv(z,claz_vop_parse,slot,ignores,zlot_vop_parse_ignores).
struct_opv(z,claz_vop_parse,slot,info_args,zlot_vop_parse_info_args).
struct_opv(z,claz_vop_parse,slot,inherits,zlot_vop_parse_inherits).
struct_opv(z,claz_vop_parse,slot,ltn_policy,zlot_vop_parse_ltn_policy).
struct_opv(z,claz_vop_parse,slot,more_args,zlot_vop_parse_more_args).
struct_opv(z,claz_vop_parse,slot,more_results,zlot_vop_parse_more_results).
struct_opv(z,claz_vop_parse,slot,move_args,zlot_vop_parse_move_args).
struct_opv(z,claz_vop_parse,slot,name,zlot_vop_parse_name).
struct_opv(z,claz_vop_parse,slot,node_var,zlot_vop_parse_node_var).
struct_opv(z,claz_vop_parse,slot,note,zlot_vop_parse_note).
struct_opv(z,claz_vop_parse,slot,operands,zlot_vop_parse_operands).
struct_opv(z,claz_vop_parse,slot,result_types,zlot_vop_parse_result_types).
struct_opv(z,claz_vop_parse,slot,results,zlot_vop_parse_results).
struct_opv(z,claz_vop_parse,slot,save_p,zlot_vop_parse_save_p).
struct_opv(z,claz_vop_parse,slot,temps,zlot_vop_parse_temps).
struct_opv(z,claz_vop_parse,slot,translate,zlot_vop_parse_translate).
struct_opv(z,claz_vop_parse,slot,variant,zlot_vop_parse_variant).
struct_opv(z,claz_vop_parse,slot,variant_vars,zlot_vop_parse_variant_vars).
struct_opv(z,claz_vop_parse,slot,vop_var,zlot_vop_parse_vop_var).
struct_opv(z,claz_vop_parse,subtypep,claz_structure_c33_object).
struct_opv(z,claz_vop_parse,super_priority,[claz_structure_c33_object,claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_waitqueue,classname,"WAITQUEUE").
struct_opv(z,claz_waitqueue,classof,claz_built_in_class).
struct_opv(z,claz_waitqueue,name,"NAME",zlot_waitqueue_name).
struct_opv(z,claz_waitqueue,name,"TOKEN",zlot_waitqueue_token).
struct_opv(z,claz_waitqueue,slot,name,zlot_waitqueue_name).
struct_opv(z,claz_waitqueue,slot,token,zlot_waitqueue_token).
struct_opv(z,claz_waitqueue,subtypep,claz_structure_object).
struct_opv(z,claz_waitqueue,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_weak_hash_table,classname,"WEAK-HASH-TABLE").
struct_opv(z,claz_weak_hash_table,classof,claz_built_in_class).
struct_opv(z,claz_weak_hash_table,name,"BUCKET-TYPE",zlot_weak_hash_table_bucket_type).
struct_opv(z,claz_weak_hash_table,name,"BUCKETS",zlot_weak_hash_table_buckets).
struct_opv(z,claz_weak_hash_table,name,"COMPARATOR",zlot_weak_hash_table_comparator).
struct_opv(z,claz_weak_hash_table,name,"COUNT",zlot_weak_hash_table_count).
struct_opv(z,claz_weak_hash_table,name,"ENTRY-LOOKUP",zlot_weak_hash_table_entry_lookup).
struct_opv(z,claz_weak_hash_table,name,"LOCK",zlot_weak_hash_table_lock).
struct_opv(z,claz_weak_hash_table,name,"QUEUE",zlot_weak_hash_table_queue).
struct_opv(z,claz_weak_hash_table,name,"REHASH-SIZE",zlot_weak_hash_table_rehash_size).
struct_opv(z,claz_weak_hash_table,name,"REHASH-THRESHOLD",zlot_weak_hash_table_rehash_threshold).
struct_opv(z,claz_weak_hash_table,name,"THRESHOLD",zlot_weak_hash_table_threshold).
struct_opv(z,claz_weak_hash_table,name,"WEAKNESS",zlot_weak_hash_table_weakness).
struct_opv(z,claz_weak_hash_table,readonly,t,zlot_weak_hash_table_comparator).
struct_opv(z,claz_weak_hash_table,readonly,t,zlot_weak_hash_table_lock).
struct_opv(z,claz_weak_hash_table,readonly,t,zlot_weak_hash_table_rehash_size).
struct_opv(z,claz_weak_hash_table,readonly,t,zlot_weak_hash_table_rehash_threshold).
struct_opv(z,claz_weak_hash_table,readonly,t,zlot_weak_hash_table_weakness).
struct_opv(z,claz_weak_hash_table,returns,claz_integer,zlot_weak_hash_table_count).
struct_opv(z,claz_weak_hash_table,returns,claz_integer,zlot_weak_hash_table_threshold).
struct_opv(z,claz_weak_hash_table,returns,claz_j_reentrant_lock,zlot_weak_hash_table_lock).
struct_opv(z,claz_weak_hash_table,returns,claz_prolog_map(claz_prolog_reference,claz_prolog_weak_hash_entry),zlot_weak_hash_table_entry_lookup).
struct_opv(z,claz_weak_hash_table,returns,claz_prolog_reference_queue(claz_t),zlot_weak_hash_table_queue).
struct_opv(z,claz_weak_hash_table,returns,claz_prolog_weak_hash_entry,zlot_weak_hash_table_bucket_type).
struct_opv(z,claz_weak_hash_table,returns,claz_simple_vector(claz_prolog_weak_hash_entry),zlot_weak_hash_table_buckets).
struct_opv(z,claz_weak_hash_table,returns,claz_t,zlot_weak_hash_table_rehash_size).
struct_opv(z,claz_weak_hash_table,returns,claz_t,zlot_weak_hash_table_rehash_threshold).
struct_opv(z,claz_weak_hash_table,returns,claz_t,zlot_weak_hash_table_weakness).
struct_opv(z,claz_weak_hash_table,returns,claz_weak_hash_table_comparator,zlot_weak_hash_table_comparator).
struct_opv(z,claz_weak_hash_table,slot,bucket_type,zlot_weak_hash_table_bucket_type).
struct_opv(z,claz_weak_hash_table,slot,buckets,zlot_weak_hash_table_buckets).
struct_opv(z,claz_weak_hash_table,slot,comparator,zlot_weak_hash_table_comparator).
struct_opv(z,claz_weak_hash_table,slot,count,zlot_weak_hash_table_count).
struct_opv(z,claz_weak_hash_table,slot,entry_lookup,zlot_weak_hash_table_entry_lookup).
struct_opv(z,claz_weak_hash_table,slot,lock,zlot_weak_hash_table_lock).
struct_opv(z,claz_weak_hash_table,slot,queue,zlot_weak_hash_table_queue).
struct_opv(z,claz_weak_hash_table,slot,rehash_size,zlot_weak_hash_table_rehash_size).
struct_opv(z,claz_weak_hash_table,slot,rehash_threshold,zlot_weak_hash_table_rehash_threshold).
struct_opv(z,claz_weak_hash_table,slot,threshold,zlot_weak_hash_table_threshold).
struct_opv(z,claz_weak_hash_table,slot,weakness,zlot_weak_hash_table_weakness).
struct_opv(z,claz_weak_hash_table,subtypep,claz_t).
struct_opv(z,claz_weak_hash_table_comparator,classname,"WEAK-HASH-TABLE-COMPARATOR").
struct_opv(z,claz_weak_hash_table_comparator,classof,claz_built_in_class).
struct_opv(z,claz_weak_pointer,classname,"WEAK-POINTER").
struct_opv(z,claz_weak_pointer,classof,claz_built_in_class).
struct_opv(z,claz_weak_pointer,subtypep,claz_t).
struct_opv(z,claz_weak_pointer,super_priority,[claz_t]).
struct_opv(z,claz_weak_reference,classname,"WEAK-REFERENCE").
struct_opv(z,claz_weak_reference,classof,claz_built_in_class).
struct_opv(z,claz_weak_reference,name,"REF",zlot_weak_reference_ref).
struct_opv(z,claz_weak_reference,returns,claz_prolog_weak_reference(claz_t),zlot_weak_reference_ref).
struct_opv(z,claz_weak_reference,slot,ref,zlot_weak_reference_ref).
struct_opv(z,claz_weak_reference,subtypep,claz_t).
struct_opv(z,claz_xset,classname,"XSET").
struct_opv(z,claz_xset,classof,claz_built_in_class).
struct_opv(z,claz_xset,name,"DATA",zlot_xset_data).
struct_opv(z,claz_xset,name,"LIST-SIZE",zlot_xset_list_size).
struct_opv(z,claz_xset,slot,data,zlot_xset_data).
struct_opv(z,claz_xset,slot,list_size,zlot_xset_list_size).
struct_opv(z,claz_xset,subtypep,claz_structure_object).
struct_opv(z,claz_xset,super_priority,[claz_structure_object,claz_slot_object,claz_t]).
struct_opv(z,claz_zip_cache_entry,classname,"ZIP-CACHE-ENTRY").
struct_opv(z,claz_zip_cache_entry,classof,claz_built_in_class).
struct_opv(z,claz_zip_cache_entry,name,"FILE",zlot_zip_cache_entry_file).
struct_opv(z,claz_zip_cache_entry,name,"LAST-MODIFIED",zlot_zip_cache_entry_last_modified).
struct_opv(z,claz_zip_cache_entry,returns,claz_j_zip_file,zlot_zip_cache_entry_file).
struct_opv(z,claz_zip_cache_entry,returns,claz_long,zlot_zip_cache_entry_last_modified).
struct_opv(z,claz_zip_cache_entry,slot,file,zlot_zip_cache_entry_file).
struct_opv(z,claz_zip_cache_entry,slot,last_modified,zlot_zip_cache_entry_last_modified).
