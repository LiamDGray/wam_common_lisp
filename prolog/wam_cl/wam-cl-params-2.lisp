
#|
(DEFPARAMETER CLOS::*<BUILT-IN-CLASS>-CLASS-VERSION* #1=#(#2=#.(CLOS::FIND-CLASS 'CLOS::BUILT-IN-CLASS) #2# () 0. () () () () () ()))
(DEFPARAMETER CLOS::*<BUILT-IN-CLASS>-DEFCLASS* (CLOS::DEFCLASS CLOS::BUILT-IN-CLASS (CLOS::DEFINED-CLASS) ((CLOS::$PROTOTYPE :TYPE T)) (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<DEFINED-CLASS>-DEFCLASS* (CLOS::DEFCLASS CLOS::DEFINED-CLASS (CLOS::POTENTIAL-CLASS) ((CLOS::$DIRECT-SUPERCLASSES :TYPE CL::LIST :INITARG :DIRECT-SUPERCLASSES) (CLOS::$ALL-SUPERCLASSES :TYPE CL::HASH-TABLE) (CLOS::$PRECEDENCE-LIST :TYPE CL::LIST) (CLOS::$DIRECT-SLOTS :TYPE CL::LIST :INITARG :DIRECT-SLOTS) (CLOS::$SLOTS :TYPE CL::LIST) (CLOS::$SLOT-LOCATION-TABLE :TYPE CL::HASH-TABLE :INITFORM CLOS::EMPTY-HT) (CLOS::$DIRECT-DEFAULT-INITARGS :TYPE CL::LIST :INITARG :DIRECT-DEFAULT-INITARGS) (CLOS::$DEFAULT-INITARGS) (CLOS::$DOCUMENTATION :TYPE (CL::OR CL::STRING CL::NULL) :INITARG :DOCUMENTATION) (CLOS::$LISTENERS :TYPE CL::LIST :INITFORM ()) (CLOS::$INITIALIZED :TYPE (CL::INTEGER 0. 6) :INITFORM 0)) (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<DIRECT-SLOT-DEFINITION>-DEFCLASS* (CLOS::DEFCLASS CLOS::DIRECT-SLOT-DEFINITION (CLOS::SLOT-DEFINITION) ((CLOS::$READERS :TYPE CL::LIST :INITARG :READERS) (CLOS::$WRITERS :TYPE CL::LIST :INITARG :WRITERS)) (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<EFFECTIVE-SLOT-DEFINITION>-DEFCLASS* (CLOS::DEFCLASS CLOS::EFFECTIVE-SLOT-DEFINITION (CLOS::SLOT-DEFINITION) ((CLOS::$LOCATION :TYPE (CL::OR CL::NULL CL::INTEGER CL::CONS) :INITARG CLOS::LOCATION) (CLOS::$EFM-SVUC :TYPE CL::FUNCTION) (CLOS::$EFM-SSVUC :TYPE CL::FUNCTION) (CLOS::$EFM-SBUC :TYPE CL::FUNCTION) (CLOS::$EFM-SMUC :TYPE CL::FUNCTION)) (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<EQL-SPECIALIZER>-CLASS-VERSION* #1=#(#2=#.(CLOS::FIND-CLASS 'CLOS::EQL-SPECIALIZER) #2# () 0. () () () () () ()))
(DEFPARAMETER CLOS::*<EQL-SPECIALIZER>-DEFCLASS* (CLOS::DEFCLASS CLOS::EQL-SPECIALIZER (CLOS::SPECIALIZER) ((CLOS::$SINGLETON :INITARG CLOS::SINGLETON)) (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<FORWARD-REFERENCE-TO-CLASS>-DEFCLASS* (CLOS::DEFCLASS CLOS::FORWARD-REFERENCE-TO-CLASS (CLOS::SUPER-CLASS) () (:FIXED-SLOT-LOCATIONS ())))
(DEFPARAMETER CLOS::*<FORWARD-REFERENCED-CLASS>-UNDER-<CLASS>* ())
(DEFPARAMETER CLOS::*<FUNCALLABLE-STANDARD-CLASS>-CLASS-VERSION* #1=#(#2=#.(CLOS::FIND-CLASS 'CLOS::FUNCALLABLE-STANDARD-CLASS) #2# () 0. () () () () () ()))
(DEFPARAMETER CLOS::*<INHERITABLE-SLOT-DEFINITION-DOC>-DEFCLASS* (CLOS::DEFCLASS CLOS::INHERITABLE-SLOT-DEFINITION-DOC () ((CLOS::DOCUMENTATION :TYPE (CL::OR CL::NULL CL::STRING) :INITARG :DOCUMENTATION)) (:METACLASS CLOS::STRUCTURE-CLASS)))
(DEFPARAMETER CLOS::*<INHERITABLE-SLOT-DEFINITION-INITER>-DEFCLASS* (CLOS::DEFCLASS CLOS::INHERITABLE-SLOT-DEFINITION-INITER () ((CLOS::INITFORM :TYPE T :INITARG :INITFORM) (CLOS::INITFUNCTION :TYPE (CL::OR CL::NULL CL::FUNCTION) :INITARG :INITFUNCTION)) (:METACLASS CLOS::STRUCTURE-CLASS)))
(DEFPARAMETER CLOS::*<METAOBJECT>-DEFCLASS* (CLOS::DEFCLASS CLOS::METAOBJECT () ()))
(DEFPARAMETER CLOS::*<MISDESIGNED-FORWARD-REFERENCED-CLASS>-DEFCLASS* (CLOS::DEFCLASS CLOS::MISDESIGNED-FORWARD-REFERENCED-CLASS (CLOS::FORWARD-REFERENCE-TO-CLASS CLOS::POTENTIAL-CLASS) () (:FIXED-SLOT-LOCATIONS ())))
(DEFPARAMETER CLOS::*<POTENTIAL-CLASS>-DEFCLASS* (CLOS::DEFCLASS CLOS::POTENTIAL-CLASS (CLOS::SPECIALIZER CLOS::SUPER-CLASS) () (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<SEMI-STANDARD-CLASS>-DEFCLASS* (CLOS::DEFCLASS CLOS::SEMI-STANDARD-CLASS (CLOS::SLOTTED-CLASS) ((CLOS::$CURRENT-VERSION :TYPE CL::SIMPLE-VECTOR) (CLOS::$FUNCALLABLEP :TYPE CL::BOOLEAN) (CLOS::$FIXED-SLOT-LOCATIONS :INITARG :FIXED-SLOT-LOCATIONS) (CLOS::$INSTANTIATED :TYPE CL::BOOLEAN :INITFORM ()) (CLOS::$DIRECT-INSTANCE-SPECIALIZERS :TYPE (CL::OR CL::HASH-TABLE CLOS::WEAK-LIST CL::NULL) :INITFORM ()) (CLOS::$FINALIZED-DIRECT-SUBCLASSES :TYPE (CL::OR CL::HASH-TABLE CLOS::WEAK-LIST CL::NULL) :INITFORM '()) (CLOS::$PROTOTYPE :TYPE (CL::OR CL::STANDARD-OBJECT CL::NULL))) (:DEFAULT-INITARGS :FIXED-SLOT-LOCATIONS ()) (:FIXED-SLOT-LOCATIONS T)))
;;;(DEFPARAMETER CLOS::*<SLOT-DEFINITION>-DEFCLASS* (CLOS::DEFCLASS CLOS::SLOT-DEFINITION (CLOS::METAOBJECT) ((CLOS::$NAME :TYPE CL::SYMBOL :INITARG :NAME) (CLOS::$INITARGS :TYPE CL::LIST :INITARG :INITARGS) (CLOS::$TYPE :TYPE T :INITARG :TYPE) (CLOS::$ALLOCATION :TYPE CL::SYMBOL :INITARG :ALLOCATION) (CLOS::$INHERITABLE-INITER :TYPE CL::CONS :INITARG CLOS::INHERITABLE-INITER) (CLOS::$INHERITABLE-DOC :TYPE CL::CONS :INITARG CLOS::INHERITABLE-DOC)) (:FIXED-SLOT-LOCATIONS T)))

(DEFPARAMETER CLOS::*<SLOTTED-CLASS>-DEFCLASS* (CLOS::DEFCLASS CLOS::SLOTTED-CLASS (CLOS::DEFINED-CLASS) ((CLOS::$SUBCLASS-OF-STABLEHASH-P :TYPE CL::BOOLEAN) (CLOS::$GENERIC-ACCESSORS :INITFORM T) (CLOS::$DIRECT-ACCESSORS :TYPE CL::LIST :INITFORM '()) (CLOS::$VALID-INITARGS-FROM-SLOTS :TYPE CL::LIST) (CLOS::$INSTANCE-SIZE :TYPE (CL::INTEGER 1. CL::*))) (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<SPECIALIZER>-DEFCLASS* (CLOS::DEFCLASS CLOS::SPECIALIZER (CLOS::STANDARD-STABLEHASH CLOS::METAOBJECT) ((CLOS::$DIRECT-METHODS :INITFORM ())) (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<STANDARD-CLASS>-CLASS-VERSION* #1=#(#2=#.(CLOS::FIND-CLASS 'CLOS::STANDARD-CLASS) #2# () 0. () () () () () ()))
(DEFPARAMETER CLOS::*<STANDARD-CLASS>-DEFCLASS* (CLOS::DEFCLASS CLOS::STANDARD-CLASS (CLOS::SEMI-STANDARD-CLASS) () (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<STANDARD-DIRECT-SLOT-DEFINITION>-CLASS-VERSION* #1=#(#2=#.(CLOS::FIND-CLASS 'CLOS::STANDARD-DIRECT-SLOT-DEFINITION) #2# () 0. () () () () () ()))
(DEFPARAMETER CLOS::*<STANDARD-DIRECT-SLOT-DEFINITION>-DEFCLASS* (CLOS::DEFCLASS CLOS::STANDARD-DIRECT-SLOT-DEFINITION (CLOS::DIRECT-SLOT-DEFINITION CLOS::STANDARD-SLOT-DEFINITION) () (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<STANDARD-EFFECTIVE-SLOT-DEFINITION>-CLASS-VERSION* #1=#(#2=#.(CLOS::FIND-CLASS 'CLOS::STANDARD-EFFECTIVE-SLOT-DEFINITION) #2# () 0. () () () () () ()))
(DEFPARAMETER CLOS::*<STANDARD-EFFECTIVE-SLOT-DEFINITION>-DEFCLASS* (CLOS::DEFCLASS CLOS::STANDARD-EFFECTIVE-SLOT-DEFINITION (CLOS::EFFECTIVE-SLOT-DEFINITION CLOS::STANDARD-SLOT-DEFINITION) () (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<STANDARD-SLOT-DEFINITION>-DEFCLASS* (CLOS::DEFCLASS CLOS::STANDARD-SLOT-DEFINITION (CLOS::SLOT-DEFINITION) () (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<STANDARD-STABLEHASH>-DEFCLASS* (CLOS::DEFCLASS CLOS::STANDARD-STABLEHASH () ((CLOS::$HASHCODE :INITFORM (SYS::RANDOM-POSFIXNUM))) (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<STRUCTURE-CLASS>-CLASS-VERSION* #1=#(#2=#.(CLOS::FIND-CLASS 'CLOS::STRUCTURE-CLASS) #2# () 0. () () () () () ()))
(DEFPARAMETER CLOS::*<STRUCTURE-CLASS>-DEFCLASS* (CLOS::DEFCLASS CLOS::STRUCTURE-CLASS (CLOS::SLOTTED-CLASS) ((CLOS::$NAMES :TYPE CL::CONS) (CLOS::$KCONSTRUCTOR :TYPE CL::SYMBOL) (CLOS::$BOA-CONSTRUCTORS :TYPE CL::LIST) (CLOS::$COPIER :TYPE CL::SYMBOL) (CLOS::$PREDICATE :TYPE CL::SYMBOL) (CLOS::$PROTOTYPE :TYPE (CL::OR CL::STRUCTURE-OBJECT CL::NULL))) (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<STRUCTURE-DIRECT-SLOT-DEFINITION>-CLASS-VERSION* #1=#(#2=#.(CLOS::FIND-CLASS 'CLOS::STRUCTURE-DIRECT-SLOT-DEFINITION) #2# () 0. () () () () () ()))
(DEFPARAMETER CLOS::*<STRUCTURE-DIRECT-SLOT-DEFINITION>-DEFCLASS* (CLOS::DEFCLASS CLOS::STRUCTURE-DIRECT-SLOT-DEFINITION (CLOS::DIRECT-SLOT-DEFINITION) () (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>-CLASS-VERSION* #1=#(#2=#.(CLOS::FIND-CLASS 'CLOS::STRUCTURE-EFFECTIVE-SLOT-DEFINITION) #2# () 0. () () () () () ()))
(DEFPARAMETER CLOS::*<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>-DEFCLASS* (CLOS::DEFCLASS CLOS::STRUCTURE-EFFECTIVE-SLOT-DEFINITION (CLOS::EFFECTIVE-SLOT-DEFINITION) ((CLOS::$EFM-SVUC :TYPE CL::FUNCTION :INITFORM #'CLOS::%SLOT-VALUE-USING-CLASS) (CLOS::$EFM-SSVUC :TYPE CL::FUNCTION :INITFORM #'CLOS::%SET-SLOT-VALUE-USING-CLASS) (CLOS::$EFM-SBUC :TYPE CL::FUNCTION :INITFORM #'CLOS::%SLOT-BOUNDP-USING-CLASS) (CLOS::$EFM-SMUC :TYPE CL::FUNCTION :INITFORM #'CLOS::%SLOT-MAKUNBOUND-USING-CLASS) (CLOS::$READONLY :TYPE CL::BOOLEAN :INITARG CLOS::READONLY)) (:FIXED-SLOT-LOCATIONS T)))
(DEFPARAMETER CLOS::*<SUPER-CLASS>-DEFCLASS* (CLOS::DEFCLASS CLOS::SUPER-CLASS (CLOS::STANDARD-STABLEHASH CLOS::METAOBJECT) ((CLOS::$CLASSNAME :TYPE CL::SYMBOL :INITARG :NAME) (CLOS::$DIRECT-SUBCLASSES :TYPE (CL::OR CL::HASH-TABLE CLOS::WEAK-LIST CL::NULL) :INITFORM ())) (:FIXED-SLOT-LOCATIONS ())))

(DEFPARAMETER CLOS::*ALLOW-MAKING-GENERIC* ())
(DEFPARAMETER CLOS::*ALLOW-MIXING-METACLASSES* ())
(DEFPARAMETER CLOS::*CLASSES-FINISHED* T)
(DEFPARAMETER CLOS::*COMPILE-ACCESSOR-FUNCTIONS* T)
(DEFPARAMETER CLOS::*DUMMY-CLASS* #(() () () () () () () () () () () () () () () () T () () () ()))
(DEFPARAMETER CLOS::*DYNAMICALLY-MODIFIABLE-GENERIC-FUNCTION-NAMES* (CLOS::ADD-METHOD CLOS::ALLOCATE-INSTANCE CLOS::CHANGE-CLASS CLOS::CLASS-NAME (CL::SETF CLOS::CLASS-NAME) CLOS::COMPUTE-APPLICABLE-METHODS CLOS::DESCRIBE-OBJECT CLOS::DOCUMENTATION (CL::SETF CLOS::DOCUMENTATION) CLOS::FIND-METHOD CLOS::FUNCTION-KEYWORDS CLOS::INITIALIZE-INSTANCE CLOS::MAKE-INSTANCE CLOS::MAKE-INSTANCES-OBSOLETE CLOS::MAKE-LOAD-FORM CLOS::METHOD-QUALIFIERS CLOS::NO-APPLICABLE-METHOD CLOS::NO-NEXT-METHOD CLOS::PRINT-OBJECT CLOS::REINITIALIZE-INSTANCE CLOS::REMOVE-METHOD CLOS::SHARED-INITIALIZE CLOS::SLOT-MISSING CLOS::SLOT-UNBOUND CLOS::UPDATE-INSTANCE-FOR-DIFFERENT-CLASS CLOS::UPDATE-INSTANCE-FOR-REDEFINED-CLASS CLOS::ADD-DEPENDENT CLOS::REMOVE-DEPENDENT CLOS::MAP-DEPENDENTS CLOS::ADD-DIRECT-METHOD CLOS::REMOVE-DIRECT-METHOD CLOS::SPECIALIZER-DIRECT-GENERIC-FUNCTIONS CLOS::SPECIALIZER-DIRECT-METHODS CLOS::ADD-DIRECT-SUBCLASS CLOS::REMOVE-DIRECT-SUBCLASS CLOS::CLASS-DIRECT-SUBCLASSES CLOS::COMPUTE-APPLICABLE-METHODS-USING-CLASSES CLOS::COMPUTE-CLASS-PRECEDENCE-LIST CLOS::COMPUTE-DEFAULT-INITARGS CLOS::COMPUTE-DIRECT-SLOT-DEFINITION-INITARGS CLOS::COMPUTE-DISCRIMINATING-FUNCTION CLOS::COMPUTE-EFFECTIVE-METHOD CLOS::COMPUTE-EFFECTIVE-SLOT-DEFINITION CLOS::COMPUTE-EFFECTIVE-SLOT-DEFINITION-INITARGS CLOS::COMPUTE-SLOTS CLOS::DIRECT-SLOT-DEFINITION-CLASS CLOS::EFFECTIVE-SLOT-DEFINITION-CLASS CLOS::ENSURE-CLASS-USING-CLASS CLOS::ENSURE-GENERIC-FUNCTION-USING-CLASS CLOS::READER-METHOD-CLASS CLOS::SLOT-VALUE-USING-CLASS (CL::SETF CLOS::SLOT-VALUE-USING-CLASS) CLOS::SLOT-BOUNDP-USING-CLASS CLOS::SLOT-MAKUNBOUND-USING-CLASS CLOS::VALIDATE-SUPERCLASS CLOS::WRITER-METHOD-CLASS (CL::SETF CLOS::METHOD-GENERIC-FUNCTION) CLOS::NO-PRIMARY-METHOD))
(DEFPARAMETER CLOS::*ENABLE-CLOS-WARNINGS* T)
(DEFPARAMETER CLOS::*METHOD-COMBINATION* ())
(DEFPARAMETER CLOS::*METHOD-COMBINATION-ARGUMENTS* ())
(DEFPARAMETER CLOS::*METHOD-COMBINATION-GENERIC-FUNCTION* ())
(DEFPARAMETER CLOS::*MOP-STANDARDIZED-PACKAGES* (#.(FIND-PACKAGE "COMMON-LISP") #.(FIND-PACKAGE "CLOS")))
(DEFPARAMETER CLOS::*REINITIALIZE-INSTANCE-TABLE* #S(CL::HASH-TABLE :TEST EXT::STABLEHASH-EQ :WARN-IF-NEEDS-REHASH-AFTER-GC T))
(DEFPARAMETER CLOS::*STRICT-MOP* ())
(DEFPARAMETER CLOS::*UPDATE-INSTANCE-FOR-DIFFERENT-CLASS-TABLE* #S(CL::HASH-TABLE :TEST EXT::STABLEHASH-EQUAL :WARN-IF-NEEDS-REHASH-AFTER-GC T))
(DEFPARAMETER CLOS::*UPDATE-INSTANCE-FOR-REDEFINED-CLASS-TABLE* #S(CL::HASH-TABLE :TEST EXT::STABLEHASH-EQ :WARN-IF-NEEDS-REHASH-AFTER-GC T))
(DEFPARAMETER CLOS::<ARRAY> #1=#.(CLOS::FIND-CLASS 'CL::ARRAY))
(DEFPARAMETER CLOS::<BIT-VECTOR> #1=#.(CLOS::FIND-CLASS 'CL::BIT-VECTOR))
(DEFPARAMETER CLOS::<BROADCAST-STREAM> #1=#.(CLOS::FIND-CLASS 'CL::BROADCAST-STREAM))
(DEFPARAMETER CLOS::<BUILT-IN-CLASS> #1=#.(CLOS::FIND-CLASS 'CLOS::BUILT-IN-CLASS))
(DEFPARAMETER CLOS::<CHARACTER> #1=#.(CLOS::FIND-CLASS 'CL::CHARACTER))
(DEFPARAMETER CLOS::<COMPLEX> #1=#.(CLOS::FIND-CLASS 'CL::COMPLEX))
(DEFPARAMETER CLOS::<CONCATENATED-STREAM> #1=#.(CLOS::FIND-CLASS 'CL::CONCATENATED-STREAM))
(DEFPARAMETER CLOS::<CONS> #1=#.(CLOS::FIND-CLASS 'CL::CONS))
(DEFPARAMETER CLOS::<DEFINED-CLASS> #1=#.(CLOS::FIND-CLASS 'CLOS::CLASS))
(DEFPARAMETER CLOS::<DIRECT-SLOT-DEFINITION> #1=#.(CLOS::FIND-CLASS 'CLOS::DIRECT-SLOT-DEFINITION))
(DEFPARAMETER CLOS::<ECHO-STREAM> #1=#.(CLOS::FIND-CLASS 'CL::ECHO-STREAM))
(DEFPARAMETER CLOS::<EFFECTIVE-SLOT-DEFINITION> #1=#.(CLOS::FIND-CLASS 'CLOS::EFFECTIVE-SLOT-DEFINITION))
(DEFPARAMETER CLOS::<EQL-SPECIALIZER> #1=#.(CLOS::FIND-CLASS 'CLOS::EQL-SPECIALIZER))
(DEFPARAMETER CLOS::<FILE-STREAM> #1=#.(CLOS::FIND-CLASS 'CL::FILE-STREAM))
(DEFPARAMETER CLOS::<FLOAT> #1=#.(CLOS::FIND-CLASS 'CL::FLOAT))
(DEFPARAMETER CLOS::<FORWARD-REFERENCE-TO-CLASS> #1=#.(CLOS::FIND-CLASS 'CLOS::FORWARD-REFERENCED-CLASS))
(DEFPARAMETER CLOS::<FUNCALLABLE-STANDARD-CLASS> #1=#.(CLOS::FIND-CLASS 'CLOS::FUNCALLABLE-STANDARD-CLASS))
(DEFPARAMETER CLOS::<FUNCALLABLE-STANDARD-OBJECT> #1=#.(CLOS::FIND-CLASS 'CLOS::FUNCALLABLE-STANDARD-OBJECT))
(DEFPARAMETER CLOS::<FUNCTION> #1=#.(CLOS::FIND-CLASS 'CL::FUNCTION))
(DEFPARAMETER CLOS::<GENERIC-FUNCTION> #1=#.(CLOS::FIND-CLASS 'CLOS::GENERIC-FUNCTION))
(DEFPARAMETER CLOS::<HASH-TABLE> #1=#.(CLOS::FIND-CLASS 'CL::HASH-TABLE))
(DEFPARAMETER CLOS::<INTEGER> #1=#.(CLOS::FIND-CLASS 'CL::INTEGER))
(DEFPARAMETER CLOS::<LIST> #1=#.(CLOS::FIND-CLASS 'CL::LIST))
(DEFPARAMETER CLOS::<LOGICAL-PATHNAME> #1=#.(CLOS::FIND-CLASS 'CL::LOGICAL-PATHNAME))
(DEFPARAMETER CLOS::<METAOBJECT> #1=#.(CLOS::FIND-CLASS 'CLOS::METAOBJECT))
(DEFPARAMETER CLOS::<METHOD-COMBINATION> #1=#.(CLOS::FIND-CLASS 'CLOS::METHOD-COMBINATION))
(DEFPARAMETER CLOS::<METHOD> #1=#.(CLOS::FIND-CLASS 'CLOS::METHOD))
(DEFPARAMETER CLOS::<MISDESIGNED-FORWARD-REFERENCED-CLASS> #1=#.(CLOS::FIND-CLASS 'CLOS::MISDESIGNED-FORWARD-REFERENCED-CLASS))
(DEFPARAMETER CLOS::<NULL> #1=#.(CLOS::FIND-CLASS 'CL::NULL))
(DEFPARAMETER CLOS::<NUMBER> #1=#.(CLOS::FIND-CLASS 'CL::NUMBER))
(DEFPARAMETER CLOS::<PACKAGE> #1=#.(CLOS::FIND-CLASS 'CL::PACKAGE))
(DEFPARAMETER CLOS::<PATHNAME> #1=#.(CLOS::FIND-CLASS 'CL::PATHNAME))
(DEFPARAMETER CLOS::<POTENTIAL-CLASS> #1=#.(CLOS::FIND-CLASS 'CLOS::POTENTIAL-CLASS))
(DEFPARAMETER CLOS::<RANDOM-STATE> #1=#.(CLOS::FIND-CLASS 'CL::RANDOM-STATE))
(DEFPARAMETER CLOS::<RATIO> #1=#.(CLOS::FIND-CLASS 'CL::RATIO))
(DEFPARAMETER CLOS::<RATIONAL> #1=#.(CLOS::FIND-CLASS 'CL::RATIONAL))
(DEFPARAMETER CLOS::<READTABLE> #1=#.(CLOS::FIND-CLASS 'CL::READTABLE))
(DEFPARAMETER CLOS::<REAL> #1=#.(CLOS::FIND-CLASS 'CL::REAL))
(DEFPARAMETER CLOS::<SEMI-STANDARD-CLASS> #1=#.(CLOS::FIND-CLASS 'CLOS::SEMI-STANDARD-CLASS))
(DEFPARAMETER CLOS::<SEQUENCE> #1=#.(CLOS::FIND-CLASS 'CL::SEQUENCE))
(DEFPARAMETER CLOS::<STANDARD-ACCESSOR-METHOD> #1=#.(CLOS::FIND-CLASS 'CLOS::STANDARD-ACCESSOR-METHOD))
(DEFPARAMETER CLOS::<STANDARD-CLASS> #1=#.(CLOS::FIND-CLASS 'CLOS::STANDARD-CLASS))
(DEFPARAMETER CLOS::<STANDARD-DIRECT-SLOT-DEFINITION> #1=#.(CLOS::FIND-CLASS 'CLOS::STANDARD-DIRECT-SLOT-DEFINITION))
(DEFPARAMETER CLOS::<STANDARD-EFFECTIVE-SLOT-DEFINITION> #1=#.(CLOS::FIND-CLASS 'CLOS::STANDARD-EFFECTIVE-SLOT-DEFINITION))
(DEFPARAMETER CLOS::<STANDARD-GENERIC-FUNCTION> #1=#.(CLOS::FIND-CLASS 'CLOS::STANDARD-GENERIC-FUNCTION))
(DEFPARAMETER CLOS::<STANDARD-METHOD> #1=#.(CLOS::FIND-CLASS 'CLOS::STANDARD-METHOD))
(DEFPARAMETER CLOS::<STANDARD-OBJECT> #1=#.(CLOS::FIND-CLASS 'CL::STANDARD-OBJECT))
(DEFPARAMETER CLOS::<STANDARD-READER-METHOD> #1=#.(CLOS::FIND-CLASS 'CLOS::STANDARD-READER-METHOD))
(DEFPARAMETER CLOS::<STANDARD-WRITER-METHOD> #1=#.(CLOS::FIND-CLASS 'CLOS::STANDARD-WRITER-METHOD))
(DEFPARAMETER CLOS::<STREAM> #1=#.(CLOS::FIND-CLASS 'CL::STREAM))
(DEFPARAMETER CLOS::<STRING-STREAM> #1=#.(CLOS::FIND-CLASS 'CL::STRING-STREAM))
(DEFPARAMETER CLOS::<STRING> #1=#.(CLOS::FIND-CLASS 'CL::STRING))
(DEFPARAMETER CLOS::<STRUCTURE-CLASS> #1=#.(CLOS::FIND-CLASS 'CLOS::STRUCTURE-CLASS))
(DEFPARAMETER CLOS::<STRUCTURE-DIRECT-SLOT-DEFINITION> #1=#.(CLOS::FIND-CLASS 'CLOS::STRUCTURE-DIRECT-SLOT-DEFINITION))
(DEFPARAMETER CLOS::<STRUCTURE-EFFECTIVE-SLOT-DEFINITION> #1=#.(CLOS::FIND-CLASS 'CLOS::STRUCTURE-EFFECTIVE-SLOT-DEFINITION))
(DEFPARAMETER CLOS::<STRUCTURE-OBJECT> #1=#.(CLOS::FIND-CLASS 'CL::STRUCTURE-OBJECT))
(DEFPARAMETER CLOS::<SYMBOL> #1=#.(CLOS::FIND-CLASS 'CL::SYMBOL))
(DEFPARAMETER CLOS::<SYNONYM-STREAM> #1=#.(CLOS::FIND-CLASS 'CL::SYNONYM-STREAM))
(DEFPARAMETER CLOS::<T> #1=#.(CLOS::FIND-CLASS 'T))
(DEFPARAMETER CLOS::<TWO-WAY-STREAM> #1=#.(CLOS::FIND-CLASS 'CL::TWO-WAY-STREAM))
(DEFPARAMETER CLOS::<VECTOR> #1=#.(CLOS::FIND-CLASS 'CL::VECTOR))
(DEFPARAMETER CLOS::|#'(setf slot-value-using-class)| #<CLOS:STANDARD-GENERIC-FUNCTION (CL::SETF CLOS:SLOT-VALUE-USING-CLASS)>)
(DEFPARAMETER CLOS::|#'allocate-instance| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:ALLOCATE-INSTANCE>)
(DEFPARAMETER CLOS::|#'compute-applicable-methods-using-classes| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:COMPUTE-APPLICABLE-METHODS-USING-CLASSES>)
(DEFPARAMETER CLOS::|#'compute-applicable-methods| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:COMPUTE-APPLICABLE-METHODS>)
(DEFPARAMETER CLOS::|#'compute-discriminating-function| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:COMPUTE-DISCRIMINATING-FUNCTION>)
(DEFPARAMETER CLOS::|#'compute-effective-method| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:COMPUTE-EFFECTIVE-METHOD>)
(DEFPARAMETER CLOS::|#'generic-function-argorder| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS::GENERIC-FUNCTION-ARGORDER>)
(DEFPARAMETER CLOS::|#'generic-function-declarations| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:GENERIC-FUNCTION-DECLARATIONS>)
(DEFPARAMETER CLOS::|#'generic-function-method-class| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:GENERIC-FUNCTION-METHOD-CLASS>)
(DEFPARAMETER CLOS::|#'generic-function-method-combination| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:GENERIC-FUNCTION-METHOD-COMBINATION>)
(DEFPARAMETER CLOS::|#'generic-function-methods| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:GENERIC-FUNCTION-METHODS>)
(DEFPARAMETER CLOS::|#'generic-function-signature| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS::GENERIC-FUNCTION-SIGNATURE>)
(DEFPARAMETER CLOS::|#'generic-function-undeterminedp| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS::GENERIC-FUNCTION-UNDETERMINEDP>)
(DEFPARAMETER CLOS::|#'initialize-instance| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:INITIALIZE-INSTANCE>)
(DEFPARAMETER CLOS::|#'method-qualifiers| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:METHOD-QUALIFIERS>)
(DEFPARAMETER CLOS::|#'method-specializers| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:METHOD-SPECIALIZERS>)
(DEFPARAMETER CLOS::|#'reinitialize-instance| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:REINITIALIZE-INSTANCE>)
(DEFPARAMETER CLOS::|#'shared-initialize| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:SHARED-INITIALIZE>)
(DEFPARAMETER CLOS::|#'slot-boundp-using-class| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:SLOT-BOUNDP-USING-CLASS>)
(DEFPARAMETER CLOS::|#'slot-makunbound-using-class| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:SLOT-MAKUNBOUND-USING-CLASS>)
(DEFPARAMETER CLOS::|#'slot-value-using-class| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:SLOT-VALUE-USING-CLASS>)
(DEFPARAMETER CLOS::|#'update-instance-for-different-class| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:UPDATE-INSTANCE-FOR-DIFFERENT-CLASS>)
(DEFPARAMETER CLOS::|#'update-instance-for-redefined-class| #<CLOS:STANDARD-GENERIC-FUNCTION CLOS:UPDATE-INSTANCE-FOR-REDEFINED-CLASS>)

;;;(DEFPARAMETER EXT::*BREAK-DRIVER* #Y(SYS::BREAK-LOOP #613Y(01 00 01 00 01 00 02 00 00 0D 00 2B 03 7F 04 00 00 3B 03 01 00 0B 00 01 3B 02 80 50 7D 02 06 00 00 1D 80 4D 1B 80 61 15 1B 80 5D CF 0F 0C DE 31 5B 11 1B 80 8D E7 6B 0B 38 02 31 95 E8 6F 0F 6B 0B 30 10 6B 0B 31 97 1B 80 8A CF 0F 12 ED 6F 0F 6B 0B 38 02 31 95 1B 80 9B 03 15 1B 80 92 6B 04 31 98 F2 6F 0F 6B 04 30 10 1B 80 AA 06 00 00 1C 17 06 00 01 1D 12 DA 68 01 01 70 01 93 00 07 DC AD DD 8E 43 FF A1 16 01 0B 00 02 6B 04 6F 05 63 93 04 81 38 68 02 01 E0 38 02 72 3A 8B 07 81 2C 6B 08 32 B1 10 08 6B 08 E3 91 01 32 15 CF 0F 08 E5 31 5B 6B 0C 32 B1 10 0C 6B 0C E3 90 01 32 FF 6A 11 6B 0B 31 97 11 06 02 02 1C FF 68 EB 6B 0B 38 02 31 95 6B 12 32 B1 10 12 6B 12 E3 90 01 32 FF 68 68 05 01 6B 0B EE 06 08 02 1C FF 6B 03 16 14 2D 04 17 11 06 02 02 1D 80 D1 06 02 00 1C 80 C7 6B 04 31 98 93 01 07 F3 6F 0F 6B 04 30 10 68 02 02 6B 04 31 90 6B 04 31 99 06 02 01 1D 80 CE 1B 80 AE 03 1B 1B 80 BD 93 03 0D 6B 04 31 98 AC 6B 04 30 10 6B 04 31 99 E4 AE 63 1B 80 72 87 01 00 A4 2B 01 F7 85 04 14 72 AB 73 02 13 DC AF 65 1E 72 43 71 51 38 02 72 8F B0 71 93 AE AE 31 90 AD 01 02 65 1F 63 2D 05 20 AF AE 31 90 AD 01 02 65 21 63 2D 05 20 AC AE 31 90 16 01 AC 81 90 00 7F 04 03 00 AF 6D 22 01 93 0B 0D 6B 04 31 98 AD 6B 04 30 10 6B 04 31 99 65 23 71 51 AE 73 02 13 84 0A AF 9E 7A 84 0A AE 9E 7A 84 0A 16 05 83 01 AD 8D 9F FF 89 16 02 65 23 71 51 AE 73 02 13 B0 32 64 5D FB 16 03 1B 26 92 01 FE 92 06 02 01 1D 1D 68 02 02 68 03 01 6F 1A 38 07 72 69 06 03 02 1C FF 40 03 1C 14 6F 0F 92 01 FF 3C 16 02 6B 04 31 9B 4B 24 80 6C 80 66 80 61 65 25 31 5B 65 26 31 5B 6B 04 31 88 A5 2B 02 6B 27 32 B1 10 27 DE 72 85 9D 10 28 A0 10 29 2E 2A 14 2E 2B 14 2E 2C 14 2E 2D 14 33 04 13 0B 0A 00 65 2E 2F 2F 10 30 2E 31 10 32 0E 33 10 33 6B 30 6B 33 30 34 10 35 0E 36 10 36 0E 37 10 37 68 25 02 66 24 30 38 0B 1C 01 66 1C 66 20 6D 39 02 31 5D 00 1B 01 02 14 31 5E 4C 19 07) (CL::CONTINUE CL::FIND-RESTART CL::RESTART 7. CL::*DEBUG-IO* CL::INTERACTIVE-STREAM-P CL::CONDITION CL::TYPEP SYS::*RECURSE-COUNT-ERROR-OUTPUT* 3. 0. CL::*ERROR-OUTPUT* SYS::*RECURSE-COUNT-DEBUG-IO* "** - " "Continuable Error" SYS::TEXT SYS::SAFE-WR-ST "*** - " SYS::*RECURSIVE-ERROR-COUNT* "Unprintable error message" :TEXT-INDENT 5. 6. SYS::PRETTY-PRINT-CONDITION "You can continue (by typing 'continue')." "If you continue (by typing 'continue'): " CL::COMPUTE-RESTARTS "The following restarts are also available:" "The following restarts are available:" ":R" 1. 15. SYS::FORMAT-TABULATE 24. #Y(SYS::BREAK-LOOP-1 #17Y(00 00 00 00 01 00 00 00 00 02 69 00 01 2F 01 19 02) (() CL::INVOKE-RESTART-INTERACTIVELY) (T T T)) #\Newline #(EXT::QUIT SYS::ABORT-TO-TOP SYS::UNWIND) SYS::*TERMINAL-READ-STREAM* SYS::*TERMINAL-READ-OPEN-OBJECT* SYS::*BREAK-COUNT* CL::*STANDARD-INPUT* CL::*STANDARD-OUTPUT* SYS::PROMPT-START SYS::PROMPT-BREAK SYS::PROMPT-BODY SYS::PROMPT-FINISH 13. SYS::FRAME-LIMIT-DOWN SYS::*FRAME-LIMIT-DOWN* SYS::FRAME-LIMIT-UP SYS::*FRAME-LIMIT-UP* SYS::*STACK-MODE* SYS::FRAME-UP-DOWN SYS::*DEBUG-FRAME* SYS::*SAVED-DEBUG-PACKAGE* SYS::*SAVED-DEBUG-READTABLE* SYS::COMMANDS #Y(SYS::BREAK-LOOP-2 #104Y(03 00 02 00 00 00 00 00 00 01 C7 50 29 2A 2B 01 00 0B 00 00 4B 03 22 DE DF E0 B3 B2 6D 07 02 E2 E3 6E 06 0A 0E 0B 5D 10 0B 6B 0C B4 6D 0D 01 30 0E 11 4D 16 01 51 26 10 2C 06 04 00 39 00 00 DC D4 52 69 01 02 2F 11 19 01 69 01 02 2F 12 19 01 4E 01 02 4E 01 01 4E 01 00 07 01 01 1C 78 69 01 03 2F 13 19 01 00 19 01) (() () CL::DEBUG #(()) :NAME CL::ABORT :INVOKE-FUNCTION #Y(SYS::BREAK-LOOP-2-1 #17Y(00 00 00 00 00 00 00 00 01 16 9E 0C 00 01 4E 01 00) (() ()) (T T T)) :REPORT #Y(SYS::BREAK-LOOP-2-2 #20Y(00 00 00 00 01 00 00 00 00 02 DA 6F 01 AE 38 02 31 95 19 02) ("Abort debug loop" SYS::TEXT) (T T T)) SYS::MAKE-RESTART SYS::*ACTIVE-RESTARTS* SYS::*DEBUG-FRAME* #Y(SYS::BREAK-LOOP-2-3 #32Y(00 00 00 00 00 00 00 00 00 01 69 01 01 69 01 02 30 01 1F 0A DC 07 02 03 1C 02 C9 52 C8 52 19 01) (() SYS::READ-EVAL-PRINT CL::DEBUG EXT::QUIT SYS::UNWIND) (T T T)) SYS::SAME-ENV-AS CL::CONTINUE #S(CL::HASH-TABLE :TEST EXT::STABLEHASH-EQ (SYS::PRINT-ERROR . 10) (SYS::INSPECT-ERROR . 17) (SYS::UNWIND . 24) (SYS::ABORT-TO-TOP . 27) (EXT::QUIT . 33)) SYS::PRINT-ERROR CL::INSPECT CL::INVOKE-RESTART-INTERACTIVELY) (T T T))) (T T T)))
(DEFPARAMETER EXT::*DRIVER* #Y(SYS::MAIN-LOOP #35Y(02 00 01 00 00 00 01 00 00 07 00 2B 01 3B 02 01 02 0B 00 00 47 00 0A C6 0F 02 AF AF 6D 03 02 31 5D 19 03) (SYS::MAIN-LOOP 0. SYS::*BREAK-COUNT* #Y(SYS::MAIN-LOOP-1 #133Y(05 00 03 00 00 00 00 00 00 01 C7 50 80 75 2A 2B 01 00 0B 00 00 4B 03 80 55 DE DF E0 B3 B2 6D 07 02 E2 E3 6E 06 0A 0E 0B 5D 10 0B 2E 0C 14 2E 0D 14 2E 0E 14 73 03 13 2E 0F 14 30 10 1F 3E 07 00 01 1C 18 D7 0F 13 4B 14 2F AE 6D 15 01 DB 6D 16 01 57 17 B0 36 00 16 06 4D 1B 21 2E 11 1B 1D 58 67 00 00 01 76 00 AD 36 01 18 05 03 19 02 06 04 00 39 00 00 DC 03 19 52 F2 2F 11 4D 11 4D 16 01 51 19 01 19 01) (() () CL::DEBUG #(()) :NAME CL::ABORT :INVOKE-FUNCTION #Y(SYS::MAIN-LOOP-1-1 #17Y(00 00 00 00 00 00 00 00 01 16 9E 0C 00 01 4E 01 00) (() ()) (T T T)) :REPORT #Y(SYS::MAIN-LOOP-1-2 #20Y(00 00 00 00 01 00 00 00 00 02 DA 6F 01 AE 38 02 31 95 19 02) ("Abort main loop" SYS::TEXT) (T T T)) SYS::MAKE-RESTART SYS::*ACTIVE-RESTARTS* SYS::PROMPT-START SYS::PROMPT-BODY SYS::PROMPT-FINISH SYS::COMMANDS0 SYS::READ-EVAL-PRINT EXT::EXIT 0. EXT::*COMMAND-INDEX* #(()) #Y(SYS::MAIN-LOOP-1-3 #16Y(00 00 00 00 00 00 00 00 00 01 DA 2C 01 01 19 01) (() #Y(SYS::MAIN-LOOP-1-3-1 #13Y(00 00 00 00 01 00 00 00 00 02 4E 00 00) (()) (T T T))) (() () ())) #Y(SYS::MAIN-LOOP-1-4 #13Y(00 00 00 00 00 00 00 00 00 01 00 49 00) (()) (T T T)) (#(CL::ERROR 85) 4. . 3) 1. CL::CONTINUE) (T T T))) (T T T)))
(DEFPARAMETER SYS::C-TYPEP-ALIST1 ((CL::ARRAY . CL::ARRAYP) (CL::ATOM . CL::ATOM) (CL::BASE-CHAR . CL::CHARACTERP) (CL::BIT-VECTOR . CL::BIT-VECTOR-P) (CL::BYTE . SYS::BYTEP) (CL::CHARACTER . CL::CHARACTERP) (CL::COMPILED-FUNCTION . CL::COMPILED-FUNCTION-P) (CL::COMPLEX . CL::COMPLEXP) (CL::CONS . CL::CONSP) (CL::DOUBLE-FLOAT . SYS::DOUBLE-FLOAT-P) (EXT::ENCODING . SYS::ENCODINGP) (CL::FIXNUM . SYS::FIXNUMP) (CL::FLOAT . CL::FLOATP) (CL::FUNCTION . CL::FUNCTIONP) (CL::HASH-TABLE . CL::HASH-TABLE-P) (CL::INTEGER . CL::INTEGERP) (CL::KEYWORD . CL::KEYWORDP) (CL::LIST . CL::LISTP) (CL::LOGICAL-PATHNAME . SYS::LOGICAL-PATHNAME-P) (CL::LONG-FLOAT . SYS::LONG-FLOAT-P) (CL::NULL . CL::NULL) (CL::NUMBER . CL::NUMBERP) (CL::PACKAGE . CL::PACKAGEP) (CL::PATHNAME . CL::PATHNAMEP) (CL::RANDOM-STATE . CL::RANDOM-STATE-P) (CL::RATIONAL . CL::RATIONALP) (CL::READTABLE . CL::READTABLEP) (CL::REAL . CL::REALP) (CL::SEQUENCE . SYS::SEQUENCEP) (CL::SHORT-FLOAT . SYS::SHORT-FLOAT-P) (CL::SIMPLE-ARRAY . SYS::SIMPLE-ARRAY-P) (CL::SIMPLE-BIT-VECTOR . CL::SIMPLE-BIT-VECTOR-P) (CL::SIMPLE-STRING . CL::SIMPLE-STRING-P) (CL::SIMPLE-VECTOR . CL::SIMPLE-VECTOR-P) (CL::SINGLE-FLOAT . SYS::SINGLE-FLOAT-P) (CL::STANDARD-CHAR . STANDARD-CHAR-P) (CL::STANDARD-OBJECT . CLOS::STD-INSTANCE-P) (CL::STREAM . CL::STREAMP) (CL::FILE-STREAM . SYS::FILE-STREAM-P) (CL::SYNONYM-STREAM . SYS::SYNONYM-STREAM-P) (CL::BROADCAST-STREAM . SYS::BROADCAST-STREAM-P) (CL::CONCATENATED-STREAM . SYS::CONCATENATED-STREAM-P) (CL::TWO-WAY-STREAM . SYS::TWO-WAY-STREAM-P) (CL::ECHO-STREAM . SYS::ECHO-STREAM-P) (CL::STRING-STREAM . SYS::STRING-STREAM-P) (CL::STRING . CL::STRINGP) (EXT::STRING-CHAR . CL::CHARACTERP) (CL::STRUCTURE-OBJECT . CLOS::STRUCTURE-OBJECT-P) (CL::SYMBOL . CL::SYMBOLP) (CL::VECTOR . CL::VECTORP) (CLOS::POTENTIAL-CLASS . CLOS::POTENTIAL-CLASS-P) (CLOS::DEFINED-CLASS . CLOS::DEFINED-CLASS-P) (CLOS::BUILT-IN-CLASS . CLOS::BUILT-IN-CLASS-P) (CLOS::STRUCTURE-CLASS . CLOS::STRUCTURE-CLASS-P) (CLOS::STANDARD-CLASS . CLOS::STANDARD-CLASS-P)))
(DEFPARAMETER SYS::C-TYPEP-ALIST2 ((CL::BASE-STRING (SYS::X) (CL::AND (CL::STRINGP SYS::X) (CL::EQ (CL::ARRAY-ELEMENT-TYPE SYS::X) 'CL::CHARACTER))) (CL::BIGNUM (SYS::X) (CL::AND (CL::INTEGERP SYS::X) (CL::NOT (SYS::FIXNUMP SYS::X)))) (CL::BIT (SYS::X) (CL::OR (CL::EQL SYS::X 0) (CL::EQL SYS::X 1))) (CL::BOOLEAN (SYS::X) (CL::OR (CL::EQ SYS::X '()) (CL::EQ SYS::X 'T))) (CL::EXTENDED-CHAR (SYS::X) (CL::DECLARE (CL::IGNORE SYS::X)) ()) (() (SYS::X) (CL::DECLARE (CL::IGNORE SYS::X)) ()) (CL::RATIO (SYS::X) (CL::AND (CL::RATIONALP SYS::X) (CL::NOT (CL::INTEGERP SYS::X)))) (CL::SIMPLE-BASE-STRING (SYS::X) (CL::AND (CL::SIMPLE-STRING-P SYS::X) (CL::EQ (CL::ARRAY-ELEMENT-TYPE SYS::X) 'CL::CHARACTER))) (T (SYS::X) (CL::DECLARE (CL::IGNORE SYS::X)) T) (FFI::FOREIGN-FUNCTION (SYS::X) (CL::EQ 'FFI::FOREIGN-FUNCTION (CL::TYPE-OF SYS::X))) (FFI::FOREIGN-VARIABLE (SYS::X) (CL::EQ 'FFI::FOREIGN-VARIABLE (CL::TYPE-OF SYS::X))) (FFI::FOREIGN-ADDRESS (SYS::X) (CL::EQ 'FFI::FOREIGN-ADDRESS (CL::TYPE-OF SYS::X))) (EXT::FOREIGN-POINTER (SYS::X) (CL::EQ 'EXT::FOREIGN-POINTER (CL::TYPE-OF SYS::X))) (SYS::PLIST (SYS::X) (CL::MULTIPLE-VALUE-BIND (CL::LENGTH SYS::TAIL) (EXT::LIST-LENGTH-DOTTED SYS::X) (CL::AND (CL::NULL SYS::TAIL) (CL::EVENP CL::LENGTH))))))
(DEFPARAMETER SYS::C-TYPEP-ALIST3 ((CL::ARRAY . #Y(#:440 457 (DEF-COMPOUND-TYPE ARRAY (&OPTIONAL # #) ..)-87-2-1 #109Y(00 00 00 00 01 00 02 00 01 00 3B 03 02 C5 FB 3B 02 02 C5 FA AE 24 00 80 4B AE 8E 1A 27 AE 63 AD 8C 9F 3F 87 01 00 14 24 00 33 AC 8F 1E 0A AC 8E AE 06 E1 AD 90 01 32 25 E2 6F 03 DE AE 2D 03 05 CB 14 00 52 AE 8F 1E 0A AE 8E AE 06 DB AF 90 01 32 12 DC 6F 03 DE B0 2D 03 05 CB 1B 64 83 01 1B FF BD 16 02 E3 B0 B0 B3 2D 04 0A 19 05) (CL::* 4096. "~S: rank ~S is invalid" SYS::TEXT CL::ARRAY SYS::C-WARN SYS::C-TYPEP 4294967296. "~S: dimension ~S is invalid" CL::ARRAYP SYS::C-TYPEP-ARRAY) (T T T))) (CL::SIMPLE-ARRAY . #Y(#:458 475 (DEF-COMPOUND-TYPE SIMPLE-ARRAY (&OPTIONAL # #) ..)-88-2-1 #109Y(00 00 00 00 01 00 02 00 01 00 3B 03 02 C5 FB 3B 02 02 C5 FA AE 24 00 80 4B AE 8E 1A 27 AE 63 AD 8C 9F 3F 87 01 00 14 24 00 33 AC 8F 1E 0A AC 8E AE 06 E1 AD 90 01 32 25 E2 6F 03 DE AE 2D 03 05 CB 14 00 52 AE 8F 1E 0A AE 8E AE 06 DB AF 90 01 32 12 DC 6F 03 DE B0 2D 03 05 CB 1B 64 83 01 1B FF BD 16 02 E3 B0 B0 B3 2D 04 0A 19 05) (CL::* 4096. "~S: rank ~S is invalid" SYS::TEXT CL::SIMPLE-ARRAY SYS::C-WARN SYS::C-TYPEP 4294967296. "~S: dimension ~S is invalid" SYS::SIMPLE-ARRAY-P SYS::C-TYPEP-ARRAY) (T T T))) (CL::VECTOR . #Y(#:476 494 (DEF-COMPOUND-TYPE VECTOR (&OPTIONAL # #) ..)-89-2-1 #106Y(00 00 00 00 01 00 02 00 01 00 3B 03 02 C5 FB 3B 02 02 C5 FA AE 24 00 0E AE 8F 1E 3D AE 8E AE 39 DB AF 91 01 32 33 E1 E2 B2 7B 02 B1 24 00 35 E3 E4 B4 7B 02 E5 B4 6F 0C 7B 02 7B 03 61 01 14 B1 24 00 24 E7 E8 B5 D4 5D 7A E5 B4 7B 02 7B 03 61 01 14 33 02 23 5D 5D 19 05 DC 6F 03 DE B0 2D 03 05 E0 00 52 00 1B 57 00 1B 67) (CL::* 4294967296. "~S: dimension ~S is invalid" SYS::TEXT CL::VECTOR SYS::C-WARN SYS::C-TYPEP CL::AND CL::VECTORP CL::EQUAL CL::ARRAY-ELEMENT-TYPE CL::QUOTE CL::UPGRADED-ARRAY-ELEMENT-TYPE CL::EQL CL::ARRAY-DIMENSION (0)) (T T T))) (CL::SIMPLE-VECTOR . #Y(#:495 501 (DEF-COMPOUND-TYPE SIMPLE-VECTOR (&OPTIONAL #) ..)-90-2-1 #52Y(00 00 00 00 01 00 01 00 01 00 3B 02 02 C5 FA AE 24 00 0E AE 8F 1E 12 AE 8E AE 0E DB AF 91 01 32 08 E1 AF B1 2D 03 08 19 04 DC 6F 03 DE B0 2D 03 05 E0 00 52) (CL::* 4294967296. "~S: dimension ~S is invalid" SYS::TEXT CL::SIMPLE-VECTOR SYS::C-WARN SYS::C-TYPEP CL::SIMPLE-VECTOR-P SYS::C-TYPEP-VECTOR) (T T T))) (CL::COMPLEX . #Y(#:502 515 (DEF-COMPOUND-TYPE COMPLEX (&OPTIONAL # #) ..)-91-2-1 #78Y(00 00 00 00 01 00 02 00 01 00 3B 03 02 C5 FB 3B 02 02 A0 FA DB DC B2 7B 02 B1 24 00 2B DD DE B4 7B 02 DF B4 6F 06 7B 02 7B 03 61 01 14 B1 24 00 1A DD E1 B5 7B 02 DF B4 6F 06 7B 02 7B 03 61 01 14 33 02 23 5D 5D 19 05 00 1B 61 00 1B 72) (CL::* CL::AND CL::COMPLEXP CL::TYPEP CL::REALPART CL::QUOTE CL::UPGRADED-COMPLEX-PART-TYPE CL::IMAGPART) (T T T))) (CL::INTEGER . #Y(#:516 520 (DEF-COMPOUND-TYPE INTEGER (&OPTIONAL # #) ..)-92-2-1 #30Y(00 00 00 00 01 00 02 00 01 00 3B 03 02 C5 FB 3B 02 02 C5 FA DB DC B1 B1 B4 2D 05 03 19 05) (CL::* CL::INTEGER CL::INTEGERP SYS::C-TYPEP-NUMBER) (T T T))) (CL::MOD . #Y(#:521 528 (DEF-COMPOUND-TYPE MOD (N) ..)-93-2-1 #46Y(00 00 00 00 02 00 00 00 01 18 AE 8F 1E 15 DF E0 B1 7B 02 E1 E2 B3 7B 02 7B 02 E3 B3 B3 7B 03 61 04 19 04 DA 6F 01 DC B0 2D 03 03 DE 00 52) ("~S: argument to MOD must be an integer: ~S" SYS::TEXT CL::TYPEP SYS::C-WARN SYS::C-TYPEP CL::AND CL::INTEGERP CL::NOT CL::MINUSP CL::<) (T T T))) (CL::SIGNED-BYTE . #Y(#:529 537 (DEF-COMPOUND-TYPE SIGNED-BYTE (&OPTIONAL #) ..)-94-2-1 #61Y(00 00 00 00 01 00 01 00 01 00 3B 02 02 C5 FA AE 24 00 04 AE 8F 1E 17 E1 E2 B1 7B 02 B0 24 00 1A E3 E4 B3 7B 02 B2 7B 03 61 01 5D 5D 19 04 DB 6F 02 DD DE B1 2D 04 05 E0 00 52 00 1B 6D) (CL::* "~S: argument to ~S must be an integer or * : ~S" SYS::TEXT CL::TYPEP CL::SIGNED-BYTE SYS::C-WARN SYS::C-TYPEP CL::AND CL::INTEGERP CL::< CL::INTEGER-LENGTH) (T T T))) (CL::UNSIGNED-BYTE . #Y(#:538 549 (DEF-COMPOUND-TYPE UNSIGNED-BYTE (&OPTIONAL #) ..)-95-2-1 #69Y(00 00 00 00 01 00 01 00 01 00 3B 02 02 C5 FA AE 24 00 04 AE 8F 1E 1F E1 E2 B1 7B 02 E3 E4 B3 7B 02 7B 02 B1 24 00 1B E5 E6 B4 7B 02 B3 7B 03 61 01 5D 5D 5D 19 04 DB 6F 02 DD DE B1 2D 04 05 E0 00 52 00 1B 6C) (CL::* "~S: argument to ~S must be an integer or * : ~S" SYS::TEXT CL::TYPEP CL::UNSIGNED-BYTE SYS::C-WARN SYS::C-TYPEP CL::AND CL::INTEGERP CL::NOT CL::MINUSP CL::<= CL::INTEGER-LENGTH) (T T T))) (CL::REAL . #Y(#:550 554 (DEF-COMPOUND-TYPE REAL (&OPTIONAL # #) ..)-96-2-1 #30Y(00 00 00 00 01 00 02 00 01 00 3B 03 02 C5 FB 3B 02 02 C5 FA DB DC B1 B1 B4 2D 05 03 19 05) (CL::* CL::REAL CL::REALP SYS::C-TYPEP-NUMBER) (T T T))) (CL::RATIONAL . #Y(#:555 559 (DEF-COMPOUND-TYPE RATIONAL (&OPTIONAL # #) ..)-97-2-1 #30Y(00 00 00 00 01 00 02 00 01 00 3B 03 02 C5 FB 3B 02 02 C5 FA DB DC B1 B1 B4 2D 05 03 19 05) (CL::* CL::RATIONAL CL::RATIONALP SYS::C-TYPEP-NUMBER) (T T T))) (CL::FLOAT . #Y(#:560 564 (DEF-COMPOUND-TYPE FLOAT (&OPTIONAL # #) ..)-98-2-1 #30Y(00 00 00 00 01 00 02 00 01 00 3B 03 02 C5 FB 3B 02 02 C5 FA DB DC B1 B1 B4 2D 05 03 19 05) (CL::* CL::FLOAT CL::FLOATP SYS::C-TYPEP-NUMBER) (T T T))) (CL::SHORT-FLOAT . #Y(#:565 569 (DEF-COMPOUND-TYPE SHORT-FLOAT (&OPTIONAL # #) ..)-99-2-1 #30Y(00 00 00 00 01 00 02 00 01 00 3B 03 02 C5 FB 3B 02 02 C5 FA DB DC B1 B1 B4 2D 05 03 19 05) (CL::* CL::SHORT-FLOAT SYS::SHORT-FLOAT-P SYS::C-TYPEP-NUMBER) (T T T))) (CL::SINGLE-FLOAT . #Y(#:570 574 (DEF-COMPOUND-TYPE SINGLE-FLOAT (&OPTIONAL # #) ..)-100-2-1 #30Y(00 00 00 00 01 00 02 00 01 00 3B 03 02 C5 FB 3B 02 02 C5 FA DB DC B1 B1 B4 2D 05 03 19 05) (CL::* CL::SINGLE-FLOAT SYS::SINGLE-FLOAT-P SYS::C-TYPEP-NUMBER) (T T T))) (CL::DOUBLE-FLOAT . #Y(#:575 579 (DEF-COMPOUND-TYPE DOUBLE-FLOAT (&OPTIONAL # #) ..)-101-2-1 #30Y(00 00 00 00 01 00 02 00 01 00 3B 03 02 C5 FB 3B 02 02 C5 FA DB DC B1 B1 B4 2D 05 03 19 05) (CL::* CL::DOUBLE-FLOAT SYS::DOUBLE-FLOAT-P SYS::C-TYPEP-NUMBER) (T T T))) (CL::LONG-FLOAT . #Y(#:580 584 (DEF-COMPOUND-TYPE LONG-FLOAT (&OPTIONAL # #) ..)-102-2-1 #30Y(00 00 00 00 01 00 02 00 01 00 3B 03 02 C5 FB 3B 02 02 C5 FA DB DC B1 B1 B4 2D 05 03 19 05) (CL::* CL::LONG-FLOAT SYS::LONG-FLOAT-P SYS::C-TYPEP-NUMBER) (T T T))) (CL::STRING . #Y(#:585 591 (DEF-COMPOUND-TYPE STRING (&OPTIONAL #) ..)-103-2-1 #52Y(00 00 00 00 01 00 01 00 01 00 3B 02 02 C5 FA AE 24 00 0E AE 8F 1E 12 AE 8E AE 0E DB AF 91 01 32 08 E1 AF B1 2D 03 08 19 04 DC 6F 03 DE B0 2D 03 05 E0 00 52) (CL::* 4294967296. "~S: dimension ~S is invalid" SYS::TEXT CL::STRING SYS::C-WARN SYS::C-TYPEP CL::STRINGP SYS::C-TYPEP-VECTOR) (T T T))) (CL::SIMPLE-STRING . #Y(#:592 598 (DEF-COMPOUND-TYPE SIMPLE-STRING (&OPTIONAL #) ..)-104-2-1 #52Y(00 00 00 00 01 00 01 00 01 00 3B 02 02 C5 FA AE 24 00 0E AE 8F 1E 12 AE 8E AE 0E DB AF 91 01 32 08 E1 AF B1 2D 03 08 19 04 DC 6F 03 DE B0 2D 03 05 E0 00 52) (CL::* 4294967296. "~S: dimension ~S is invalid" SYS::TEXT CL::SIMPLE-STRING SYS::C-WARN SYS::C-TYPEP CL::SIMPLE-STRING-P SYS::C-TYPEP-VECTOR) (T T T))) (CL::BASE-STRING . #Y(#:599 605 (DEF-COMPOUND-TYPE BASE-STRING (&OPTIONAL #) ..)-105-2-1 #52Y(00 00 00 00 01 00 01 00 01 00 3B 02 02 C5 FA AE 24 00 0E AE 8F 1E 12 AE 8E AE 0E DB AF 91 01 32 08 E1 AF B1 2D 03 08 19 04 DC 6F 03 DE B0 2D 03 05 E0 00 52) (CL::* 4294967296. "~S: dimension ~S is invalid" SYS::TEXT CL::BASE-STRING SYS::C-WARN SYS::C-TYPEP CL::STRINGP SYS::C-TYPEP-VECTOR) (T T T))) (CL::SIMPLE-BASE-STRING . #Y(#:606 612 (DEF-COMPOUND-TYPE SIMPLE-BASE-STRING (&OPTIONAL #) ..)-106-2-1 #52Y(00 00 00 00 01 00 01 00 01 00 3B 02 02 C5 FA AE 24 00 0E AE 8F 1E 12 AE 8E AE 0E DB AF 91 01 32 08 E1 AF B1 2D 03 08 19 04 DC 6F 03 DE B0 2D 03 05 E0 00 52) (CL::* 4294967296. "~S: dimension ~S is invalid" SYS::TEXT CL::SIMPLE-BASE-STRING SYS::C-WARN SYS::C-TYPEP CL::SIMPLE-STRING-P SYS::C-TYPEP-VECTOR) (T T T))) (CL::BIT-VECTOR . #Y(#:613 619 (DEF-COMPOUND-TYPE BIT-VECTOR (&OPTIONAL #) ..)-107-2-1 #52Y(00 00 00 00 01 00 01 00 01 00 3B 02 02 C5 FA AE 24 00 0E AE 8F 1E 12 AE 8E AE 0E DB AF 91 01 32 08 E1 AF B1 2D 03 08 19 04 DC 6F 03 DE B0 2D 03 05 E0 00 52) (CL::* 4294967296. "~S: dimension ~S is invalid" SYS::TEXT CL::BIT-VECTOR SYS::C-WARN SYS::C-TYPEP CL::BIT-VECTOR-P SYS::C-TYPEP-VECTOR) (T T T))) (CL::SIMPLE-BIT-VECTOR . #Y(#:620 626 (DEF-COMPOUND-TYPE SIMPLE-BIT-VECTOR (&OPTIONAL #) ..)-108-2-1 #52Y(00 00 00 00 01 00 01 00 01 00 3B 02 02 C5 FA AE 24 00 0E AE 8F 1E 12 AE 8E AE 0E DB AF 91 01 32 08 E1 AF B1 2D 03 08 19 04 DC 6F 03 DE B0 2D 03 05 E0 00 52) (CL::* 4294967296. "~S: dimension ~S is invalid" SYS::TEXT CL::SIMPLE-BIT-VECTOR SYS::C-WARN SYS::C-TYPEP CL::SIMPLE-BIT-VECTOR-P SYS::C-TYPEP-VECTOR) (T T T))) (CL::CONS . #Y(#:627 637 (DEF-COMPOUND-TYPE CONS (&OPTIONAL # #) ..)-109-2-1 #74Y(00 00 00 00 01 00 02 00 01 00 3B 03 02 C5 FB 3B 02 02 C5 FA DB DC B2 7B 02 B1 24 00 27 DD DE B4 7B 02 DF B4 7B 02 7B 03 61 01 14 B1 24 00 18 DD E0 B5 7B 02 DF B4 7B 02 7B 03 61 01 14 33 02 23 5D 5D 19 05 00 1B 63 00 1B 72) (CL::* CL::AND CL::CONSP CL::TYPEP CL::CAR CL::QUOTE CL::CDR) (T () ())))))



|#

